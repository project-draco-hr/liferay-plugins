{
  if (servletContext == null) {
    throw new IllegalArgumentException("ServletContext is null");
  }
  SERVLET_CONTEXT=servletContext;
  JSONObject testCaseResult=JSONFactoryUtil.createJSONObject();
  Class<? extends BaseTestCase> clazz=getClass();
  String testCaseName=clazz.getName();
  testCaseResult.put("name",testCaseName);
  Method setUpMethod=null;
  try {
    setUpMethod=clazz.getMethod("setUp");
  }
 catch (  Exception e) {
  }
  Method tearDownMethod=null;
  try {
    tearDownMethod=clazz.getMethod("tearDown");
  }
 catch (  Exception e) {
  }
  JSONArray testResults=JSONFactoryUtil.createJSONArray();
  testCaseResult.put("testResults",testResults);
  Method[] methods=clazz.getMethods();
  Arrays.sort(methods,new MethodComparator());
  try {
    Method method=clazz.getMethod("setUpClass");
    if (Modifier.isStatic(method.getModifiers())) {
      method.invoke(null);
    }
  }
 catch (  NoSuchMethodException nsme) {
  }
catch (  Exception e) {
    JSONObject testResult=JSONFactoryUtil.createJSONObject();
    testResult.put("name","setUpClass");
    setupErrorMessage(e,testResult);
    testResults.put(testResult);
  }
  for (  Method method : methods) {
    if (method.getName().startsWith("test")) {
      JSONObject testResult=JSONFactoryUtil.createJSONObject();
      testResult.put("name",method.getName());
      try {
        if (setUpMethod != null) {
          setUpMethod.invoke(this);
        }
        method.invoke(this);
        if (tearDownMethod != null) {
          tearDownMethod.invoke(this);
        }
        testResult.put("status",_STATUS_PASSED);
      }
 catch (      Exception e) {
        setupErrorMessage(e,testResult);
      }
      testResults.put(testResult);
    }
  }
  try {
    Method method=clazz.getMethod("tearDownClass");
    if (Modifier.isStatic(method.getModifiers())) {
      method.invoke(null);
    }
  }
 catch (  NoSuchMethodException nsme) {
  }
catch (  Exception e) {
    JSONObject testResult=JSONFactoryUtil.createJSONObject();
    testResult.put("name","tearDownClass");
    setupErrorMessage(e,testResult);
    testResults.put(testResult);
  }
  return testCaseResult;
}
