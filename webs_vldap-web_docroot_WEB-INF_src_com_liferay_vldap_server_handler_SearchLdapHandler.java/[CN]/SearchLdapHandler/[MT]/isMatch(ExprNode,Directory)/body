{
  if (exprNode.isLeaf()) {
    if (exprNode instanceof EqualityNode<?>) {
      EqualityNode<?> equalityNode=(EqualityNode<?>)exprNode;
      String attributeId=equalityNode.getAttribute();
      String value=equalityNode.getValue().getString();
      Attribute attribute=directory.getAttribute(attributeId,value);
      if (attribute != null) {
        return true;
      }
 else {
        return false;
      }
    }
 else     if (exprNode instanceof GreaterEqNode<?>) {
    }
 else     if (exprNode instanceof LessEqNode<?>) {
    }
 else     if (exprNode instanceof PresenceNode) {
      PresenceNode specificFilter=(PresenceNode)exprNode;
      String attributeId=specificFilter.getAttribute();
      Attribute attribute=directory.getAttribute(attributeId);
      if (attribute != null) {
        return true;
      }
 else {
        return false;
      }
    }
 else     if (exprNode instanceof SubstringNode) {
    }
 else {
      _log.error("Unsupported expression " + exprNode);
    }
  }
 else {
    BranchNode branchNode=(BranchNode)exprNode;
    if (exprNode instanceof AndNode) {
      for (      ExprNode childBranchNode : branchNode.getChildren()) {
        if (!isMatch(childBranchNode,directory)) {
          return false;
        }
      }
      return true;
    }
 else     if (exprNode instanceof NotNode) {
      for (      ExprNode childBranchNode : branchNode.getChildren()) {
        if (!isMatch(childBranchNode,directory)) {
          return true;
        }
 else {
          return false;
        }
      }
      return false;
    }
 else     if (exprNode instanceof OrNode) {
      for (      ExprNode childBranchNode : branchNode.getChildren()) {
        if (isMatch(childBranchNode,directory)) {
          return true;
        }
      }
      return false;
    }
  }
  return true;
}
