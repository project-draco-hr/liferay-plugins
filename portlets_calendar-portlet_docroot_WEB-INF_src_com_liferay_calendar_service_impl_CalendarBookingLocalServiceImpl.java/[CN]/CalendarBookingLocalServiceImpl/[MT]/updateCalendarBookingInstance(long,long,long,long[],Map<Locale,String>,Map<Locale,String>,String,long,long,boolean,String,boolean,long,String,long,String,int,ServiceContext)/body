{
  CalendarBooking calendarBooking=calendarBookingPersistence.findByPrimaryKey(calendarBookingId);
  String oldRecurrence=calendarBooking.getRecurrence();
  deleteCalendarBookingInstance(calendarBooking,startTime,allFollowing);
  if (allFollowing) {
    Recurrence recurrenceObj=RecurrenceSerializer.deserialize(recurrence);
    if (oldRecurrence.equals(recurrence) && (recurrenceObj.getCount() > 0)) {
      int index=RecurrenceUtil.getIndexOfInstance(recurrence,calendarBooking.getStartTime(),startTime);
      recurrenceObj.setCount(recurrenceObj.getCount() - index);
      recurrence=RecurrenceSerializer.serialize(recurrenceObj);
    }
  }
 else {
    recurrence=StringPool.BLANK;
  }
  return addCalendarBooking(userId,calendarId,childCalendarIds,CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,titleMap,descriptionMap,location,startTime,endTime,allDay,recurrence,firstReminder,firstReminderType,secondReminder,secondReminderType,serviceContext);
}
