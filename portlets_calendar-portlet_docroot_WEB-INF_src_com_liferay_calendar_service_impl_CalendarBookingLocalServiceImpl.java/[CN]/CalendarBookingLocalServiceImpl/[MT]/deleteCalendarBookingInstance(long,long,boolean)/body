{
  CalendarBooking calendarBooking=calendarBookingPersistence.findByPrimaryKey(calendarBookingId);
  java.util.Calendar newStartDateJCalendar=JCalendarUtil.getJCalendar(startDate);
  java.util.Calendar oldStartDateJCalendar=JCalendarUtil.getJCalendar(calendarBooking.getStartDate());
  newStartDateJCalendar.set(java.util.Calendar.HOUR_OF_DAY,oldStartDateJCalendar.get(java.util.Calendar.HOUR_OF_DAY));
  newStartDateJCalendar.set(java.util.Calendar.MINUTE,oldStartDateJCalendar.get(java.util.Calendar.MINUTE));
  newStartDateJCalendar.set(java.util.Calendar.SECOND,oldStartDateJCalendar.get(java.util.Calendar.SECOND));
  Recurrence recurrenceObj=calendarBooking.getRecurrenceObj();
  if (allFollowing) {
    newStartDateJCalendar.add(java.util.Calendar.DATE,-1);
    recurrenceObj.setUntilJCalendar(newStartDateJCalendar);
  }
 else {
    recurrenceObj.addExceptionDate(newStartDateJCalendar);
  }
  calendarBooking.setRecurrence(RecurrenceSerializer.serialize(recurrenceObj));
  calendarBookingPersistence.update(calendarBooking);
}
