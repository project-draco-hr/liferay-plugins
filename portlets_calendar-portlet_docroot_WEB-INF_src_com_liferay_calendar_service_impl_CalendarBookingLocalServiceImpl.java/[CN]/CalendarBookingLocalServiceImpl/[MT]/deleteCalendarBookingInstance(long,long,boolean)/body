{
  CalendarBooking calendarBooking=calendarBookingPersistence.findByPrimaryKey(calendarBookingId);
  java.util.Calendar newStartTimeJCalendar=JCalendarUtil.getJCalendar(startTime);
  java.util.Calendar oldStartTimeJCalendar=JCalendarUtil.getJCalendar(calendarBooking.getStartTime());
  newStartTimeJCalendar.set(java.util.Calendar.HOUR_OF_DAY,oldStartTimeJCalendar.get(java.util.Calendar.HOUR_OF_DAY));
  newStartTimeJCalendar.set(java.util.Calendar.MINUTE,oldStartTimeJCalendar.get(java.util.Calendar.MINUTE));
  newStartTimeJCalendar.set(java.util.Calendar.SECOND,oldStartTimeJCalendar.get(java.util.Calendar.SECOND));
  Recurrence recurrenceObj=calendarBooking.getRecurrenceObj();
  if (allFollowing) {
    if (recurrenceObj.getCount() > 0) {
      recurrenceObj.setCount(0);
    }
    newStartTimeJCalendar.add(java.util.Calendar.DATE,-1);
    recurrenceObj.setUntilJCalendar(newStartTimeJCalendar);
  }
 else {
    recurrenceObj.addExceptionDate(newStartTimeJCalendar);
  }
  calendarBooking.setRecurrence(RecurrenceSerializer.serialize(recurrenceObj));
  calendarBookingPersistence.update(calendarBooking);
}
