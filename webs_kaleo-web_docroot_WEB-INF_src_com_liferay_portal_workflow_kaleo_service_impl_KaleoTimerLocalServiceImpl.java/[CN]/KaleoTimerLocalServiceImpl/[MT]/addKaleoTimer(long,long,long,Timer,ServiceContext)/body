{
  User user=userPersistence.findByPrimaryKey(serviceContext.getUserId());
  Date now=new Date();
  long kaleoTimerId=counterLocalService.increment();
  KaleoTimer kaleoTimer=kaleoTimerPersistence.create(kaleoTimerId);
  kaleoTimer.setCompanyId(user.getCompanyId());
  kaleoTimer.setUserId(user.getUserId());
  kaleoTimer.setUserName(user.getFullName());
  kaleoTimer.setCreateDate(now);
  kaleoTimer.setModifiedDate(now);
  kaleoTimer.setKaleoDefinitionId(kaleoDefinitionId);
  kaleoTimer.setKaleoNodeId(kaleoNodeId);
  kaleoTimer.setParentKaleoNodeId(parentKaleoNodeId);
  kaleoTimer.setName(timer.getName());
  kaleoTimer.setDefaultTimer(timer.isDefault());
  DelayDuration delayDuration=timer.getDelayDuration();
  kaleoTimer.setDuration(delayDuration.getDuration());
  kaleoTimer.setScale(delayDuration.getDurationScale().getValue());
  kaleoTimerPersistence.update(kaleoTimer,false);
  Set<Assignment> reassignments=timer.getReassignments();
  for (  Assignment reassignment : reassignments) {
    kaleoTaskAssignmentLocalService.addKaleoTaskAssignment(kaleoDefinitionId,kaleoNodeId,parentKaleoNodeId,reassignment,serviceContext);
  }
  return kaleoTimer;
}
