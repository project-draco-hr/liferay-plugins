{
  StopWatch sw=null;
  if (_log.isDebugEnabled()) {
    sw=new StopWatch();
    sw.start();
  }
  try {
    FetchProfile fp=new FetchProfile();
    fp.add(UIDFolder.FetchProfileItem.UID);
    fp.add(UIDFolder.FetchProfileItem.ENVELOPE);
    imapFolder.fetch(messages,fp);
    for (int i=0; i < messages.length; i++) {
      javax.mail.Message message=messages[i];
      String sender=InternetAddressUtil.toString(message.getFrom());
      String to=InternetAddressUtil.toString(message.getRecipients(RecipientType.TO));
      String cc=InternetAddressUtil.toString(message.getRecipients(RecipientType.CC));
      String bcc=InternetAddressUtil.toString(message.getRecipients(RecipientType.BCC));
      Date sentDate=message.getSentDate();
      String subject=message.getSubject();
      long remoteMessageId=imapFolder.getUID(message);
      MessageLocalServiceUtil.addMessage(_user.getUserId(),folderId,sender,to,cc,bcc,sentDate,subject,null,StringPool.BLANK,remoteMessageId);
    }
    Folder folder=FolderLocalServiceUtil.getFolder(folderId);
    FolderLocalServiceUtil.updateFolder(folderId,folder.getFullName(),folder.getDisplayName(),imapFolder.getMessageCount());
  }
 catch (  MessagingException me) {
    throw new MailException(me);
  }
  if (_log.isDebugEnabled()) {
    sw.stop();
    _log.debug("downloading " + messages.length + " messages for folder "+ folderId+ " completed in "+ sw.getTime()+ " ms");
  }
}
