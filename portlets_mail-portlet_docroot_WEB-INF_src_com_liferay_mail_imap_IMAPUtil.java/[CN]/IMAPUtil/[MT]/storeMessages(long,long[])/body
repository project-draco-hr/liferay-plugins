{
  IMAPFolder imapFolder=null;
  try {
    imapFolder=openFolder(storedFolderId);
    Message[] messages=imapFolder.getMessagesByUID(messageIds);
    FetchProfile fetchProfile=new FetchProfile();
    fetchProfile.add(UIDFolder.FetchProfileItem.UID);
    fetchProfile.add(UIDFolder.FetchProfileItem.CONTENT_INFO);
    imapFolder.fetch(messages,fetchProfile);
    for (    Message message : messages) {
      String flags=getFlags(message);
      long messageId=imapFolder.getUID(message);
      com.liferay.mail.model.Message storedMessage=MessageLocalServiceUtil.getMessage(storedFolderId,messageId);
      StringBundler bodyPlain=new StringBundler();
      StringBundler bodyHtml=new StringBundler();
      List<MailFile> mailFiles=new ArrayList<MailFile>();
      getParts(_user.getUserId(),bodyPlain,bodyHtml,StringPool.BLANK,message,mailFiles);
      if (bodyHtml.length() == 0) {
        bodyHtml=bodyPlain;
      }
      if (flags.indexOf(MailConstants.FLAG_SEEN) == -1) {
        message.setFlag(Flags.Flag.SEEN,false);
      }
      for (      MailFile mailFile : mailFiles) {
        AttachmentLocalServiceUtil.addAttachment(_user.getUserId(),storedMessage.getMessageId(),mailFile.getContentPath(),mailFile.getFileName(),mailFile.getSize(),mailFile.getFile());
      }
      MessageLocalServiceUtil.updateContent(storedMessage.getMessageId(),bodyHtml.toString(),flags);
    }
  }
 catch (  MessagingException me) {
    throw new MailException(me);
  }
 finally {
    closeFolder(imapFolder,false);
  }
}
