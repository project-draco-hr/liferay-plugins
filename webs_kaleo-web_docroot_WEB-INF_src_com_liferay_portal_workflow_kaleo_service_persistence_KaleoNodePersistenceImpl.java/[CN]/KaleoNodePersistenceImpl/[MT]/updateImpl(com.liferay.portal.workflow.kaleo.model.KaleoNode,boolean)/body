{
  kaleoNode=toUnwrappedModel(kaleoNode);
  boolean isNew=kaleoNode.isNew();
  KaleoNodeModelImpl kaleoNodeModelImpl=(KaleoNodeModelImpl)kaleoNode;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,kaleoNode,merge);
    kaleoNode.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !KaleoNodeModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((kaleoNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(kaleoNodeModelImpl.getOriginalCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((kaleoNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(kaleoNodeModelImpl.getOriginalKaleoDefinitionId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
    }
    if ((kaleoNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_KDI.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(kaleoNodeModelImpl.getOriginalCompanyId()),Long.valueOf(kaleoNodeModelImpl.getOriginalKaleoDefinitionId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_KDI,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_KDI,args);
    }
  }
  EntityCacheUtil.putResult(KaleoNodeModelImpl.ENTITY_CACHE_ENABLED,KaleoNodeImpl.class,kaleoNode.getPrimaryKey(),kaleoNode);
  return kaleoNode;
}
