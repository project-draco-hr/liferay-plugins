{
  List<Person> people=new ArrayList<Person>();
  Person person=null;
  for (  String userId : userIds) {
    try {
      if (userId.startsWith("G-")) {
        Group group=GroupLocalServiceUtil.getGroup(Long.parseLong(userId.substring("G-".length())));
        if (group.isCommunity()) {
          person=ShindigUtil.getPerson(group,profileDetails,token);
        }
 else         if (group.isOrganization()) {
          Organization org=OrganizationLocalServiceUtil.getOrganization(group.getClassPK());
          person=ShindigUtil.getPerson(org,profileDetails,token);
        }
      }
 else {
        User user=UserLocalServiceUtil.getUserById(Long.parseLong(userId));
        person=ShindigUtil.getPerson(user,profileDetails,token);
      }
      people.add(person);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  if (sortOrder.equals(SortOrder.name)) {
    Collections.sort(people,NAME_COMPARATOR);
  }
  int totalSize=people.size();
  int last=first + max;
  people=people.subList(first,Math.min(last,totalSize));
  ApiCollection<Person> collection=new ApiCollection<Person>(people,first,totalSize);
  return new ResponseItem<ApiCollection<Person>>(collection);
}
