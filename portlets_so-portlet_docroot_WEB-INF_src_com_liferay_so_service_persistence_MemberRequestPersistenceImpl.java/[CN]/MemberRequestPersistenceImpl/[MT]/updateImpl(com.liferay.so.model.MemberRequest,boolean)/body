{
  memberRequest=toUnwrappedModel(memberRequest);
  boolean isNew=memberRequest.isNew();
  MemberRequestModelImpl memberRequestModelImpl=(MemberRequestModelImpl)memberRequest;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,memberRequest,merge);
    memberRequest.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  EntityCacheUtil.putResult(MemberRequestModelImpl.ENTITY_CACHE_ENABLED,MemberRequestImpl.class,memberRequest.getPrimaryKey(),memberRequest);
  if (!isNew && (!Validator.equals(memberRequest.getKey(),memberRequestModelImpl.getOriginalKey()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_KEY,new Object[]{memberRequestModelImpl.getOriginalKey()});
  }
  if (isNew || (!Validator.equals(memberRequest.getKey(),memberRequestModelImpl.getOriginalKey()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_KEY,new Object[]{memberRequest.getKey()},memberRequest);
  }
  if (!isNew && ((memberRequest.getGroupId() != memberRequestModelImpl.getOriginalGroupId()) || (memberRequest.getReceiverUserId() != memberRequestModelImpl.getOriginalReceiverUserId()) || (memberRequest.getStatus() != memberRequestModelImpl.getOriginalStatus()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_R_S,new Object[]{new Long(memberRequestModelImpl.getOriginalGroupId()),new Long(memberRequestModelImpl.getOriginalReceiverUserId()),new Integer(memberRequestModelImpl.getOriginalStatus())});
  }
  if (isNew || ((memberRequest.getGroupId() != memberRequestModelImpl.getOriginalGroupId()) || (memberRequest.getReceiverUserId() != memberRequestModelImpl.getOriginalReceiverUserId()) || (memberRequest.getStatus() != memberRequestModelImpl.getOriginalStatus()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_R_S,new Object[]{new Long(memberRequest.getGroupId()),new Long(memberRequest.getReceiverUserId()),new Integer(memberRequest.getStatus())},memberRequest);
  }
  return memberRequest;
}
