{
  Class oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals(SVNRepositoryClp.class.getName())) {
    SVNRepositoryClp oldCplModel=(SVNRepositoryClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class newModelClass=Class.forName("com.liferay.wol.model.impl.SVNRepositoryImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setSvnRepositoryId",new Class[]{Long.TYPE});
        Long value0=new Long(oldCplModel.getSvnRepositoryId());
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setUrl",new Class[]{String.class});
        String value1=oldCplModel.getUrl();
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setRevisionNumber",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getRevisionNumber());
        method2.invoke(newModel,value2);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
