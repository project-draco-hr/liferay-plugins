{
  String login=PrincipalThreadLocal.getName();
  if (Validator.isNull(login)) {
    return PropsUtil.get(PropsKeys.DL_REPOSITORY_GUEST_USERNAME);
  }
  try {
    long userId=GetterUtil.getLong(login);
    String authType=_extRepository.getAuthType();
    if (!authType.equals(CompanyConstants.AUTH_TYPE_ID)) {
      User user=userLocalService.getUser(userId);
      if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
        login=user.getEmailAddress();
      }
 else       if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) {
        login=user.getScreenName();
      }
    }
  }
 catch (  PortalException e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to get login to connect to external repository " + _extRepository,e);
    }
    login=null;
  }
catch (  SystemException e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to get login to connect to external repository " + _extRepository,e);
    }
    login=null;
  }
  return login;
}
