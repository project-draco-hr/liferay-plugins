{
  LayoutLocalServiceUtil.deleteLayouts(groupId,privateLayout,new ServiceContext());
  JSONObject jsonObject=getJSONObject(fileName);
  if (jsonObject == null) {
    return;
  }
  _defaultLayoutTemplateId=jsonObject.getString("layoutTemplateId",StringPool.BLANK);
  updateLayoutSetThemeId(jsonObject);
  JSONArray layoutsJSONArray=jsonObject.getJSONArray("layouts");
  if (layoutsJSONArray != null) {
    if (_log.isWarnEnabled()) {
      _log.warn("WARNING : Your sitemap.json file in " + servletContextName + " should be upgraded to use: "+ "{sitePages:{publicPages:[],privatePages:[]}");
    }
    addLayouts(LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,layoutsJSONArray);
  }
 else {
    JSONObject sitePages=jsonObject.getJSONObject("sitePages");
    JSONArray publicPages=sitePages.getJSONArray("publicPages");
    if (publicPages != null) {
      if (_log.isTraceEnabled()) {
        _log.trace("Importing :" + publicPages.length() + " public pages for :"+ groupId);
      }
      addLayouts(LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,publicPages,false);
    }
    JSONArray privatePages=sitePages.getJSONArray("privatePages");
    if (privatePages != null) {
      if (_log.isTraceEnabled()) {
        _log.trace("Importing :" + privatePages.length() + " private pages for :"+ groupId);
      }
      addLayouts(LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,privatePages,true);
    }
  }
}
