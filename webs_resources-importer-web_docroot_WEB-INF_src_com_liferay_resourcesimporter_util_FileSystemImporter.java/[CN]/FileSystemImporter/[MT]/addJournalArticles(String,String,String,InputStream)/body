{
  String title=FileUtil.stripExtension(fileName);
  JSONObject assetJSONObject=_assetJSONObjectMap.get(fileName);
  Map<Locale,String> descriptionMap=null;
  if (assetJSONObject != null) {
    String abstractSummary=assetJSONObject.getString("abstractSummary");
    descriptionMap=getMap(abstractSummary);
  }
  String content=StringUtil.read(inputStream);
  content=replaceFileEntryURL(content);
  Locale articleDefaultLocale=LocaleUtil.fromLanguageId(LocalizationUtil.getDefaultLanguageId(content));
  boolean smallImage=false;
  String smallImageURL=StringPool.BLANK;
  if (assetJSONObject != null) {
    String smallImageFileName=assetJSONObject.getString("smallImage");
    if (Validator.isNotNull(smallImageFileName)) {
      smallImage=true;
      FileEntry fileEntry=_fileEntries.get(smallImageFileName);
      if (fileEntry != null) {
        smallImageURL=DLUtil.getPreviewURL(fileEntry,fileEntry.getFileVersion(),null,StringPool.BLANK);
      }
    }
  }
  setServiceContext(fileName);
  JournalArticle journalArticle=JournalArticleLocalServiceUtil.addArticle(userId,groupId,0,0,0,getJournalId(fileName),false,JournalArticleConstants.VERSION_DEFAULT,getMap(articleDefaultLocale,title),descriptionMap,content,"general",ddmStructureKey,ddmTemplateKey,StringPool.BLANK,1,1,2010,0,0,0,0,0,0,0,true,0,0,0,0,0,true,true,smallImage,smallImageURL,null,new HashMap<String,byte[]>(),StringPool.BLANK,serviceContext);
  JournalArticleLocalServiceUtil.updateStatus(userId,groupId,journalArticle.getArticleId(),journalArticle.getVersion(),WorkflowConstants.STATUS_APPROVED,StringPool.BLANK,new HashMap<String,Serializable>(),serviceContext);
}
