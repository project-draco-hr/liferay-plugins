{
  String journalArticleId=getJournalId(fileName);
  String title=FileUtil.stripExtension(fileName);
  Map<Locale,String> titleMap=getMap(title);
  JSONObject assetJSONObject=_assetJSONObjectMap.get(fileName);
  Map<Locale,String> descriptionMap=null;
  if (assetJSONObject != null) {
    String abstractSummary=assetJSONObject.getString("abstract_summary");
    descriptionMap=getMap(abstractSummary);
  }
  String content=StringUtil.read(inputStream);
  content=processJournalArticleContent(content);
  boolean smallImage=false;
  String smallImageURL=StringPool.BLANK;
  if (assetJSONObject != null) {
    String smallImageName=assetJSONObject.getString("small_image");
    if (Validator.isNotNull(smallImageName)) {
      smallImage=true;
      FileEntry fileEntry=_fileEntries.get(smallImageName);
      if (fileEntry != null) {
        smallImageURL=DLUtil.getPreviewURL(fileEntry,fileEntry.getFileVersion(),null,StringPool.BLANK);
      }
    }
  }
  setServiceContext(fileName);
  JournalArticle journalArticle=JournalArticleLocalServiceUtil.addArticle(userId,groupId,0,0,0,journalArticleId,false,JournalArticleConstants.VERSION_DEFAULT,titleMap,descriptionMap,content,"general",journalStructureId,journalTemplateId,StringPool.BLANK,1,1,2010,0,0,0,0,0,0,0,true,0,0,0,0,0,true,true,smallImage,smallImageURL,null,new HashMap<String,byte[]>(),StringPool.BLANK,serviceContext);
  JournalArticleLocalServiceUtil.updateStatus(userId,groupId,journalArticle.getArticleId(),journalArticle.getVersion(),WorkflowConstants.STATUS_APPROVED,StringPool.BLANK,serviceContext);
}
