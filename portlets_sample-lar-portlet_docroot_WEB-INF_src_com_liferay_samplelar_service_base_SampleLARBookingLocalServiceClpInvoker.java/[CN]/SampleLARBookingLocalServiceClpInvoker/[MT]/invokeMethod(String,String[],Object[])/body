{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.addSampleLARBooking((com.liferay.samplelar.model.SampleLARBooking)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.createSampleLARBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.deleteSampleLARBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.deleteSampleLARBooking((com.liferay.samplelar.model.SampleLARBooking)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.fetchSampleLARBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.fetchSampleLARBookingByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getExportActionableDynamicQuery((com.liferay.portlet.exportimport.lar.PortletDataContext)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.deletePersistedModel((com.liferay.portal.model.PersistedModel)arguments[0]);
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBookingsByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName19.equals(name) && Arrays.deepEquals(_methodParameterTypes19,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBookingsByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.samplelar.model.SampleLARBooking>)arguments[4]);
  }
  if (_methodName20.equals(name) && Arrays.deepEquals(_methodParameterTypes20,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBookingByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName21.equals(name) && Arrays.deepEquals(_methodParameterTypes21,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBookings(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName22.equals(name) && Arrays.deepEquals(_methodParameterTypes22,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBookingsCount();
  }
  if (_methodName23.equals(name) && Arrays.deepEquals(_methodParameterTypes23,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.updateSampleLARBooking((com.liferay.samplelar.model.SampleLARBooking)arguments[0]);
  }
  if (_methodName46.equals(name) && Arrays.deepEquals(_methodParameterTypes46,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName47.equals(name) && Arrays.deepEquals(_methodParameterTypes47,parameterTypes)) {
    SampleLARBookingLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName52.equals(name) && Arrays.deepEquals(_methodParameterTypes52,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.addSampleLARBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName53.equals(name) && Arrays.deepEquals(_methodParameterTypes53,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.deleteSampleLARBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName54.equals(name) && Arrays.deepEquals(_methodParameterTypes54,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.deleteSampleLARBooking((com.liferay.samplelar.model.SampleLARBooking)arguments[0]);
  }
  if (_methodName55.equals(name) && Arrays.deepEquals(_methodParameterTypes55,parameterTypes)) {
    SampleLARBookingLocalServiceUtil.deleteSampleLARBookings(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName56.equals(name) && Arrays.deepEquals(_methodParameterTypes56,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBookings(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName57.equals(name) && Arrays.deepEquals(_methodParameterTypes57,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.getSampleLARBookingsCount(((Long)arguments[0]).longValue());
  }
  if (_methodName58.equals(name) && Arrays.deepEquals(_methodParameterTypes58,parameterTypes)) {
    return SampleLARBookingLocalServiceUtil.updateSampleLARBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  throw new UnsupportedOperationException();
}
