{
  User user=(User)obj;
  List<ProjectsEntry> projectsEntries=ProjectsEntryLocalServiceUtil.getUserProjectsEntries(user.getUserId());
  String[] projectTitles=new String[projectsEntries.size()];
  for (int i=0; i < projectTitles.length; i++) {
    ProjectsEntry projectEntry=projectsEntries.get(i);
    projectTitles[i]=StringUtil.toLowerCase(projectEntry.getTitle());
  }
  document.addKeyword("projectTitles",projectTitles);
  int count=UserLocalServiceUtil.getSocialUsersCount(user.getUserId(),SocialRelationConstants.TYPE_BI_CONNECTION,StringPool.EQUAL);
  List<Long> socialRelationshipUserIds=new ArrayList<>();
  int pages=count / Indexer.DEFAULT_INTERVAL;
  for (int i=0; i <= pages; i++) {
    int start=(i * Indexer.DEFAULT_INTERVAL);
    int end=start + Indexer.DEFAULT_INTERVAL;
    List<User> socialRelationshipUsers=UserLocalServiceUtil.getSocialUsers(user.getUserId(),SocialRelationConstants.TYPE_BI_CONNECTION,StringPool.EQUAL,start,end,new UserFirstNameComparator(true));
    for (    User socialRelationshipUser : socialRelationshipUsers) {
      socialRelationshipUserIds.add(socialRelationshipUser.getUserId());
    }
  }
  document.addKeyword("socialRelationships",ArrayUtil.toLongArray(socialRelationshipUserIds));
}
