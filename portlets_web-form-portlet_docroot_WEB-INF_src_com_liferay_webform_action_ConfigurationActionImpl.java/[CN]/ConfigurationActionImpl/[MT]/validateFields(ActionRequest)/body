{
  Locale defaultLocale=LocaleUtil.getDefault();
  String defaultLanguageId=LocaleUtil.toLanguageId(defaultLocale);
  String title=ParamUtil.getString(actionRequest,"title" + StringPool.UNDERLINE + defaultLanguageId);
  boolean sendAsEmail=GetterUtil.getBoolean(getParameter(actionRequest,"sendAsEmail"));
  String subject=getParameter(actionRequest,"subject");
  boolean saveToDatabase=GetterUtil.getBoolean(getParameter(actionRequest,"saveToDatabase"));
  boolean saveToFile=GetterUtil.getBoolean(getParameter(actionRequest,"saveToFile"));
  if (Validator.isNull(title)) {
    SessionErrors.add(actionRequest,"titleRequired");
  }
  if (Validator.isNull(subject)) {
    SessionErrors.add(actionRequest,"subjectRequired");
  }
  if (!sendAsEmail && !saveToDatabase && !saveToFile) {
    SessionErrors.add(actionRequest,"handlingRequired");
  }
  if (sendAsEmail) {
    String[] emailAdresses=WebFormUtil.split(getParameter(actionRequest,"emailAddress"));
    for (    String emailAdress : emailAdresses) {
      emailAdress=emailAdress.trim();
      if (Validator.isNull(emailAdress)) {
        SessionErrors.add(actionRequest,"emailAddressRequired");
      }
 else       if (!Validator.isEmailAddress(emailAdress)) {
        SessionErrors.add(actionRequest,"emailAddressInvalid");
      }
    }
  }
  if (saveToFile) {
    String fileName=getParameter(actionRequest,"fileName");
    try {
      FileOutputStream fileOutputStream=new FileOutputStream(fileName,true);
      fileOutputStream.close();
    }
 catch (    SecurityException es) {
      SessionErrors.add(actionRequest,"fileNameInvalid");
    }
catch (    FileNotFoundException fnfe) {
      SessionErrors.add(actionRequest,"fileNameInvalid");
    }
  }
  if (!validateFieldNames(actionRequest)) {
    SessionErrors.add(actionRequest,DuplicateColumnNameException.class.getName());
  }
}
