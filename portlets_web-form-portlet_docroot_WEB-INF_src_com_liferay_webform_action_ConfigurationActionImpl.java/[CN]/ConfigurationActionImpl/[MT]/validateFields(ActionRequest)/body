{
  Locale defaultLocale=LocaleUtil.getDefault();
  String defaultLanguageId=LocaleUtil.toLanguageId(defaultLocale);
  boolean sendAsEmail=GetterUtil.getBoolean(getParameter(actionRequest,"sendAsEmail"));
  String subject=getParameter(actionRequest,"subject");
  boolean saveToDatabase=GetterUtil.getBoolean(getParameter(actionRequest,"saveToDatabase"));
  boolean saveToFile=GetterUtil.getBoolean(getParameter(actionRequest,"saveToFile"));
  if (!sendAsEmail && !saveToDatabase && !saveToFile) {
    SessionErrors.add(actionRequest,"handlingRequired");
  }
  if (sendAsEmail) {
    if (Validator.isNull(subject)) {
      SessionErrors.add(actionRequest,"subjectRequired");
    }
    String[] emailAdresses=WebFormUtil.split(getParameter(actionRequest,"emailAddress"));
    if (emailAdresses.length == 0) {
      SessionErrors.add(actionRequest,"emailAddressRequired");
    }
    for (    String emailAdress : emailAdresses) {
      emailAdress=emailAdress.trim();
      if (!Validator.isEmailAddress(emailAdress)) {
        SessionErrors.add(actionRequest,"emailAddressInvalid");
      }
    }
  }
  if (saveToFile) {
    ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
    String portletResource=ParamUtil.getString(actionRequest,"portletResource");
    String fileName=WebFormUtil.getFileName(themeDisplay,portletResource);
    fileName=PropsUtil.get(PropsKeys.LIFERAY_HOME) + fileName;
    try {
      File file=new File(fileName);
      if (!file.exists()) {
        int endIndex=fileName.lastIndexOf(StringPool.FORWARD_SLASH);
        String folderName=fileName.substring(0,endIndex);
        file=new File(folderName);
        file.mkdirs();
      }
      FileOutputStream fileOutputStream=new FileOutputStream(fileName,true);
      fileOutputStream.close();
    }
 catch (    SecurityException se) {
      SessionErrors.add(actionRequest,"fileNameInvalid");
    }
catch (    FileNotFoundException fnfe) {
      SessionErrors.add(actionRequest,"fileNameInvalid");
    }
  }
  if (saveToDatabase) {
    int i=1;
    String languageId=LocaleUtil.toLanguageId(actionRequest.getLocale());
    String fieldLabel=ParamUtil.getString(actionRequest,"fieldLabel" + i + "_"+ languageId);
    while ((i == 1) || Validator.isNotNull(fieldLabel)) {
      if (fieldLabel.length() > 75) {
        SessionErrors.add(actionRequest,"fieldSizeInvalid" + i);
      }
      i++;
      fieldLabel=ParamUtil.getString(actionRequest,"fieldLabel" + i + "_"+ languageId);
    }
  }
  if (!validateUniqueFieldNames(actionRequest)) {
    SessionErrors.add(actionRequest,DuplicateColumnNameException.class.getName());
  }
}
