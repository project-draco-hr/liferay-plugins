{
  Class<?> clazz=getClass();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KBArticle.class,clazz.getClassLoader());
  Projection minKBArticleIdProjection=ProjectionFactoryUtil.min("kbArticleId");
  Projection maxKBArticleIdProjection=ProjectionFactoryUtil.max("kbArticleId");
  ProjectionList projectionList=ProjectionFactoryUtil.projectionList();
  projectionList.add(minKBArticleIdProjection);
  projectionList.add(maxKBArticleIdProjection);
  dynamicQuery.setProjection(projectionList);
  addReindexCriteria(dynamicQuery,companyId);
  List<Object[]> results=KBArticleLocalServiceUtil.dynamicQuery(dynamicQuery);
  Object[] minAndMaxKBArticleIds=results.get(0);
  if ((minAndMaxKBArticleIds[0] == null) || (minAndMaxKBArticleIds[1] == null)) {
    return;
  }
  long minKBArticleId=(Long)minAndMaxKBArticleIds[0];
  long maxKBArticleId=(Long)minAndMaxKBArticleIds[1];
  long startKBArticleId=minKBArticleId;
  long endKBArticleId=startKBArticleId + DEFAULT_INTERVAL;
  while (startKBArticleId <= maxKBArticleId) {
    reindexKBArticles(companyId,startKBArticleId,endKBArticleId);
    startKBArticleId=endKBArticleId;
    endKBArticleId+=DEFAULT_INTERVAL;
  }
}
