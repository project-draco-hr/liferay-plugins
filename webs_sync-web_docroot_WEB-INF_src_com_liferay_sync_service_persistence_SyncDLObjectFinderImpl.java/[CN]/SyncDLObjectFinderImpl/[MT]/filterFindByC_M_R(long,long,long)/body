{
  Session session=null;
  try {
    session=openSession();
    StringBundler sb=new StringBundler(5);
    String sql=CustomSQLUtil.get(FIND_BY_C_M_R_E);
    sb.append(sql);
    sb.append(" UNION ALL ");
    sql=CustomSQLUtil.get(FIND_BY_C_M_R_T);
    sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DLFileEntry.class.getName(),"SyncDLObject.typePK",null,"SyncDLObject.repositoryId",new long[]{repositoryId},null);
    sb.append(sql);
    sb.append(" UNION ALL ");
    sql=CustomSQLUtil.get(FIND_BY_C_M_R_T);
    sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DLFolder.class.getName(),"SyncDLObject.typePK",null,"SyncDLObject.repositoryId",new long[]{repositoryId},null);
    sb.append(sql);
    sql=sb.toString();
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("SyncDLObject",SyncDLObjectImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    qPos.add(modifiedTime);
    qPos.add(repositoryId);
    qPos.add(DLSyncConstants.EVENT_DELETE);
    qPos.add(companyId);
    qPos.add(modifiedTime);
    qPos.add(repositoryId);
    qPos.add(DLSyncConstants.TYPE_FILE);
    qPos.add(companyId);
    qPos.add(modifiedTime);
    qPos.add(repositoryId);
    qPos.add(DLSyncConstants.TYPE_FOLDER);
    return q.list();
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}
