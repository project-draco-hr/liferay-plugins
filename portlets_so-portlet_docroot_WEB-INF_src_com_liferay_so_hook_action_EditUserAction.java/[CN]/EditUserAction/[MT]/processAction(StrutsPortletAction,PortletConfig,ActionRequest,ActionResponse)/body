{
  String actionName=ParamUtil.getString(actionRequest,ActionRequest.ACTION_NAME);
  if (actionName.equals("updateFieldGroup")) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    try {
      updateProjectsEntries(actionRequest,actionResponse);
      String redirect=ParamUtil.getString(actionRequest,"redirect");
      jsonObject.put("redirect",redirect);
      jsonObject.put("success",true);
    }
 catch (    Exception e) {
      ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
      String message=LanguageUtil.get(themeDisplay.getLocale(),"your-request-failed-to-complete");
      jsonObject.put("message",message);
      jsonObject.put("success",false);
    }
    HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
    response.setContentType(ContentTypes.TEXT_JAVASCRIPT);
    ServletResponseUtil.write(response,jsonObject.toString());
  }
 else {
    updateProjectsEntries(actionRequest,actionResponse);
    DynamicActionRequest dynamicActionRequest=new DynamicActionRequest(actionRequest);
    String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
    if (cmd.equals(Constants.UPDATE)) {
      User user=PortalUtil.getSelectedUser(actionRequest);
      List<Role> roles=user.getRoles();
      Role role=RoleLocalServiceUtil.getRole(user.getCompanyId(),RoleConstants.SOCIAL_OFFICE_USER);
      long[] roleIds=getLongArray(actionRequest,"rolesSearchContainerPrimaryKeys");
      boolean newSocialOfficeUser=ArrayUtil.contains(roleIds,role.getRoleId());
      if (newSocialOfficeUser && !roles.contains(role)) {
        LayoutSetPrototype publicLayoutSetPrototype=LayoutSetPrototypeUtil.fetchLayoutSetPrototype(user,false);
        if (publicLayoutSetPrototype != null) {
          dynamicActionRequest.setParameter("publicLayoutSetPrototypeId",String.valueOf(publicLayoutSetPrototype.getLayoutSetPrototypeId()));
          dynamicActionRequest.setParameter("publicLayoutSetPrototypeId",String.valueOf(publicLayoutSetPrototype.getLayoutSetPrototypeId()));
        }
        LayoutSetPrototype privateLayoutSetPrototype=LayoutSetPrototypeUtil.fetchLayoutSetPrototype(user,true);
        if (privateLayoutSetPrototype != null) {
          dynamicActionRequest.setParameter("privateLayoutSetPrototypeId",String.valueOf(privateLayoutSetPrototype.getLayoutSetPrototypeId()));
          dynamicActionRequest.setParameter("privateLayoutSetPrototypeLinkEnabled",String.valueOf(true));
        }
      }
 else       if (!newSocialOfficeUser && roles.contains(role)) {
        dynamicActionRequest.setParameter("publicLayoutSetPrototypeId",StringPool.BLANK);
        dynamicActionRequest.setParameter("privateLayoutSetPrototypeId",StringPool.BLANK);
        dynamicActionRequest.setParameter("publicLayoutSetPrototypeLinkEnabled",String.valueOf(false));
        dynamicActionRequest.setParameter("privateLayoutSetPrototypeLinkEnabled",String.valueOf(false));
      }
    }
    originalStrutsPortletAction.processAction(portletConfig,dynamicActionRequest,actionResponse);
  }
}
