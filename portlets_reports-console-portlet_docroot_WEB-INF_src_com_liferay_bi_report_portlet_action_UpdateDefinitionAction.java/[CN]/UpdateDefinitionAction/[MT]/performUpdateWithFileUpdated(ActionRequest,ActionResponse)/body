{
  UploadPortletRequest uploadRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  String jspPage=ParamUtil.getString(uploadRequest,"jspPage");
  long definitionId=ParamUtil.getLong(uploadRequest,"definitionId");
  if (definitionId <= 0) {
    SessionErrors.add(actionRequest,NoSuchDefinitionException.class.getName());
  }
  String definitionName=ParamUtil.getString(uploadRequest,"definitionName");
  if (Validator.isNull(definitionName)) {
    SessionErrors.add(actionRequest,DefinitionNameException.class.getName());
  }
  String format=ParamUtil.getString(uploadRequest,"format");
  ReportFormat reportFormat=null;
  try {
    reportFormat=ReportFormat.parse(format);
  }
 catch (  IllegalArgumentException e) {
    SessionErrors.add(actionRequest,DefinitionFormatException.class.getName());
  }
  String fileName=uploadRequest.getFileName("msgFile");
  if (Validator.isNull(fileName)) {
    SessionErrors.add(actionRequest,DefinitionFileException.class.getName());
  }
  File file=uploadRequest.getFile("msgFile");
  String description=ParamUtil.getString(uploadRequest,"description");
  String datasourceName=ParamUtil.getString(uploadRequest,"dataSourceName");
  String reportParameters=ParamUtil.getString(uploadRequest,"reportParameters");
  ReportDefinition definition=null;
  if (SessionErrors.isEmpty(actionRequest)) {
    definition=ReportDefinitionLocalServiceUtil.updateReportDefinition(definitionId,definitionName,description,datasourceName,reportFormat,reportParameters,fileName,file);
    SessionMessages.add(actionRequest,"request_processed");
  }
 else {
    definition=new ReportDefinitionImpl();
    definition.setDefinitionId(definitionId);
    definition.setDefinitionName(definitionName);
    definition.setDescription(description);
    definition.setDataSourceName(datasourceName);
    definition.setReportFormat(format.toString());
    definition.setReportParameters(reportParameters);
  }
  uploadRequest.setAttribute("fileName",fileName);
  uploadRequest.setAttribute("definition",definition);
  return jspPage;
}
