{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.addCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.createCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.fetchCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResourceByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResources(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResourcesCount();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.updateCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.updateCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0],((Boolean)arguments[1]).booleanValue());
  }
  if (_methodName53.equals(name) && Arrays.deepEquals(_methodParameterTypes53,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName54.equals(name) && Arrays.deepEquals(_methodParameterTypes54,parameterTypes)) {
    CalendarResourceLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName59.equals(name) && Arrays.deepEquals(_methodParameterTypes59,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.addCalendarResource(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],((Long)arguments[3]).longValue(),(java.lang.String)arguments[4],(java.lang.String)arguments[5],(java.util.Map<java.util.Locale,java.lang.String>)arguments[6],(java.util.Map<java.util.Locale,java.lang.String>)arguments[7],(java.lang.String)arguments[8],((Boolean)arguments[9]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[10]);
  }
  if (_methodName60.equals(name) && Arrays.deepEquals(_methodParameterTypes60,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName61.equals(name) && Arrays.deepEquals(_methodParameterTypes61,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName62.equals(name) && Arrays.deepEquals(_methodParameterTypes62,parameterTypes)) {
    CalendarResourceLocalServiceUtil.deleteCalendarResources(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName63.equals(name) && Arrays.deepEquals(_methodParameterTypes63,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.fetchCalendarResource(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName64.equals(name) && Arrays.deepEquals(_methodParameterTypes64,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName65.equals(name) && Arrays.deepEquals(_methodParameterTypes65,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResources(((Long)arguments[0]).longValue());
  }
  if (_methodName66.equals(name) && Arrays.deepEquals(_methodParameterTypes66,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],(java.lang.String)arguments[5],(java.lang.String)arguments[6],((Boolean)arguments[7]).booleanValue(),((Boolean)arguments[8]).booleanValue(),((Integer)arguments[9]).intValue(),((Integer)arguments[10]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[11]);
  }
  if (_methodName67.equals(name) && Arrays.deepEquals(_methodParameterTypes67,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.searchByKeywords(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue(),((Boolean)arguments[5]).booleanValue(),((Integer)arguments[6]).intValue(),((Integer)arguments[7]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[8]);
  }
  if (_methodName68.equals(name) && Arrays.deepEquals(_methodParameterTypes68,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue());
  }
  if (_methodName69.equals(name) && Arrays.deepEquals(_methodParameterTypes69,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],(java.lang.String)arguments[5],(java.lang.String)arguments[6],((Boolean)arguments[7]).booleanValue(),((Boolean)arguments[8]).booleanValue());
  }
  if (_methodName70.equals(name) && Arrays.deepEquals(_methodParameterTypes70,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.updateCalendarResource(((Long)arguments[0]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[1],(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  throw new UnsupportedOperationException();
}
