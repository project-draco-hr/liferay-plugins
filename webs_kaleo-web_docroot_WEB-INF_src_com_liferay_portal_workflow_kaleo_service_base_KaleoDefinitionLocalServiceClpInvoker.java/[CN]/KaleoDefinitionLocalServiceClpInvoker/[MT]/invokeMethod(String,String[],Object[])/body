{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.addKaleoDefinition((com.liferay.portal.workflow.kaleo.model.KaleoDefinition)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.createKaleoDefinition(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.deleteKaleoDefinition(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.deleteKaleoDefinition((com.liferay.portal.workflow.kaleo.model.KaleoDefinition)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.fetchKaleoDefinition(((Long)arguments[0]).longValue());
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinition(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitions(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitionsCount();
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.updateKaleoDefinition((com.liferay.portal.workflow.kaleo.model.KaleoDefinition)arguments[0]);
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.updateKaleoDefinition((com.liferay.portal.workflow.kaleo.model.KaleoDefinition)arguments[0],((Boolean)arguments[1]).booleanValue());
  }
  if (_methodName96.equals(name) && Arrays.deepEquals(_methodParameterTypes96,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName97.equals(name) && Arrays.deepEquals(_methodParameterTypes97,parameterTypes)) {
    KaleoDefinitionLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
  }
  if (_methodName102.equals(name) && Arrays.deepEquals(_methodParameterTypes102,parameterTypes)) {
    KaleoDefinitionLocalServiceUtil.activateKaleoDefinition(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName103.equals(name) && Arrays.deepEquals(_methodParameterTypes103,parameterTypes)) {
    KaleoDefinitionLocalServiceUtil.activateKaleoDefinition(((Long)arguments[0]).longValue(),(com.liferay.portal.service.ServiceContext)arguments[1]);
  }
  if (_methodName104.equals(name) && Arrays.deepEquals(_methodParameterTypes104,parameterTypes)) {
    KaleoDefinitionLocalServiceUtil.activateKaleoDefinition((java.lang.String)arguments[0],((Integer)arguments[1]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName105.equals(name) && Arrays.deepEquals(_methodParameterTypes105,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.addKaleoDefinition((java.lang.String)arguments[0],(java.lang.String)arguments[1],(java.lang.String)arguments[2],(java.lang.String)arguments[3],((Integer)arguments[4]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  if (_methodName106.equals(name) && Arrays.deepEquals(_methodParameterTypes106,parameterTypes)) {
    KaleoDefinitionLocalServiceUtil.deactivateKaleoDefinition((java.lang.String)arguments[0],((Integer)arguments[1]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName107.equals(name) && Arrays.deepEquals(_methodParameterTypes107,parameterTypes)) {
    KaleoDefinitionLocalServiceUtil.deleteCompanyKaleoDefinitions(((Long)arguments[0]).longValue());
  }
  if (_methodName108.equals(name) && Arrays.deepEquals(_methodParameterTypes108,parameterTypes)) {
    KaleoDefinitionLocalServiceUtil.deleteKaleoDefinition((java.lang.String)arguments[0],((Integer)arguments[1]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName109.equals(name) && Arrays.deepEquals(_methodParameterTypes109,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinition((java.lang.String)arguments[0],((Integer)arguments[1]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName110.equals(name) && Arrays.deepEquals(_methodParameterTypes110,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitions(((Boolean)arguments[0]).booleanValue(),((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3],(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  if (_methodName111.equals(name) && Arrays.deepEquals(_methodParameterTypes111,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitions(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName112.equals(name) && Arrays.deepEquals(_methodParameterTypes112,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitions((java.lang.String)arguments[0],((Boolean)arguments[1]).booleanValue(),((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[4],(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  if (_methodName113.equals(name) && Arrays.deepEquals(_methodParameterTypes113,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitions((java.lang.String)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3],(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  if (_methodName114.equals(name) && Arrays.deepEquals(_methodParameterTypes114,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitionsCount(((Boolean)arguments[0]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[1]);
  }
  if (_methodName115.equals(name) && Arrays.deepEquals(_methodParameterTypes115,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitionsCount((com.liferay.portal.service.ServiceContext)arguments[0]);
  }
  if (_methodName116.equals(name) && Arrays.deepEquals(_methodParameterTypes116,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitionsCount((java.lang.String)arguments[0],((Boolean)arguments[1]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName117.equals(name) && Arrays.deepEquals(_methodParameterTypes117,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getKaleoDefinitionsCount((java.lang.String)arguments[0],(com.liferay.portal.service.ServiceContext)arguments[1]);
  }
  if (_methodName118.equals(name) && Arrays.deepEquals(_methodParameterTypes118,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.getLatestKaleoDefinition((java.lang.String)arguments[0],(com.liferay.portal.service.ServiceContext)arguments[1]);
  }
  if (_methodName119.equals(name) && Arrays.deepEquals(_methodParameterTypes119,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.incrementKaleoDefinition((com.liferay.portal.workflow.kaleo.definition.Definition)arguments[0],(java.lang.String)arguments[1],(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName120.equals(name) && Arrays.deepEquals(_methodParameterTypes120,parameterTypes)) {
    return KaleoDefinitionLocalServiceUtil.updateTitle((java.lang.String)arguments[0],((Integer)arguments[1]).intValue(),(java.lang.String)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  throw new UnsupportedOperationException();
}
