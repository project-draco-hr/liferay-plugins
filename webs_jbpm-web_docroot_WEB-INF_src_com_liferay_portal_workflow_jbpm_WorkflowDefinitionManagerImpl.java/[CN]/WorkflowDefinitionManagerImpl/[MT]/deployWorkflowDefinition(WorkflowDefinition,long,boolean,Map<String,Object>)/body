{
  if ((!autoIncrementVersionNumber) && (workflowDefinition.getVersion() < 0)) {
    throw new WorkflowException("Workflow definition version number must be a positive number");
  }
  ProcessDefinition processDefinition=null;
  ZipInputStream processStream=new ZipInputStream(workflowDefinition.getInputStream());
  try {
    ProcessArchive processArchive=new ProcessArchive(processStream);
    processDefinition=processArchive.parseProcessDefinition();
  }
 catch (  IOException ioe) {
    throw new WorkflowException(ioe);
  }
 finally {
    try {
      processStream.close();
    }
 catch (    IOException ioe) {
    }
  }
  if (Validator.isNotNull(workflowDefinition.getName())) {
    processDefinition.setName(workflowDefinition.getName());
  }
  if (!autoIncrementVersionNumber) {
    processDefinition.setVersion(workflowDefinition.getVersion());
  }
  JbpmContext jbpmContext=_jbpmConfiguration.createJbpmContext();
  try {
    if (!autoIncrementVersionNumber) {
      GraphSession graphSession=jbpmContext.getGraphSession();
      ProcessDefinition oldProcessDefinition=graphSession.findProcessDefinition(workflowDefinition.getName(),workflowDefinition.getVersion());
      if (oldProcessDefinition != null) {
        graphSession.deleteProcessDefinition(oldProcessDefinition);
      }
      graphSession.saveProcessDefinition(processDefinition);
    }
 else {
      jbpmContext.deployProcessDefinition(processDefinition);
    }
  }
  finally {
    jbpmContext.close();
  }
}
