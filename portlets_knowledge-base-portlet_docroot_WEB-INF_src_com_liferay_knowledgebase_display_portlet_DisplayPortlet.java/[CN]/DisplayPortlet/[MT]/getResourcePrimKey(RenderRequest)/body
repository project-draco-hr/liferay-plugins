{
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String urlTitle=ParamUtil.getString(renderRequest,"urlTitle");
  if (Validator.isNotNull(urlTitle)) {
    String kbFolderUrlTitle=ParamUtil.getString(renderRequest,"kbFolderUrlTitle");
    KBArticle kbArticle=null;
    if (Validator.isNotNull(kbFolderUrlTitle)) {
      kbArticle=KBArticleLocalServiceUtil.fetchKBArticleByUrlTitle(themeDisplay.getScopeGroupId(),kbFolderUrlTitle,urlTitle);
    }
 else {
      kbArticle=KBArticleLocalServiceUtil.fetchKBArticleByUrlTitle(themeDisplay.getScopeGroupId(),KBFolderConstants.DEFAULT_PARENT_FOLDER_ID,urlTitle);
    }
    if (kbArticle != null) {
      return kbArticle.getResourcePrimKey();
    }
  }
  PortletPreferences preferences=renderRequest.getPreferences();
  long defaultValue=GetterUtil.getLong(preferences.getValue("resourcePrimKey",null));
  String mvcPath=ParamUtil.getString(renderRequest,"mvcPath");
  if (((defaultValue == 0) && mvcPath.equals(viewTemplate)) || mvcPath.equals("/display/select_configuration_article.jsp")) {
    return 0;
  }
  long resourcePrimKey=ParamUtil.getLong(renderRequest,"resourcePrimKey",defaultValue);
  if ((resourcePrimKey == 0) || (resourcePrimKey != defaultValue)) {
    return resourcePrimKey;
  }
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  if (!KBArticlePermission.contains(permissionChecker,defaultValue,ActionKeys.VIEW)) {
    return 0;
  }
  return defaultValue;
}
