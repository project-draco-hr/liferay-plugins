{
  long companyId=0;
  String firstName=null;
  String middleName=null;
  String lastName=null;
  String screenName=getScreenName();
  String emailAddress=null;
  int status=WorkflowConstants.STATUS_APPROVED;
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  boolean andSearch=true;
  int start=0;
  int end=PortletPropsValues.SEARCH_MAX_SIZE;
  OrderByComparator orderByComparator=new UserScreenNameComparator();
  if (_group != null) {
    companyId=_group.getCompanyId();
    params.put("usersGroups",_group.getGroupId());
  }
 else   if (_organization != null) {
    companyId=_organization.getCompanyId();
    params.put("usersOrgs",_organization.getOrganizationId());
  }
 else   if (_role != null) {
    companyId=_role.getCompanyId();
    params.put("usersRoles",_role.getRoleId());
  }
 else   if (_company != null) {
    companyId=_company.getCompanyId();
  }
  List<User> users=UserLocalServiceUtil.search(companyId,firstName,middleName,lastName,screenName,emailAddress,status,params,andSearch,start,end,orderByComparator);
  for (  User user : users) {
    if (user.isDefaultUser()) {
      continue;
    }
    Directory userDirectory=new UserDirectory(user,this);
    addAttribute("member",userDirectory.getName().getName());
    _directories.add(userDirectory);
  }
  return _directories;
}
