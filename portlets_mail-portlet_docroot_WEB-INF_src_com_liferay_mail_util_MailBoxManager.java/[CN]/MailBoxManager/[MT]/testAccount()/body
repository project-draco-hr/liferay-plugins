{
  JSONObject jsonObj=JSONFactoryUtil.createJSONObject();
  try {
    Store store=getStore(false);
    Folder folder=store.getDefaultFolder();
    if (Validator.isNotNull(folder) && Validator.isNotNull(folder.list())) {
      jsonObj.put("incoming",true);
    }
 else {
      jsonObj.put("incoming",false);
    }
    store.close();
  }
 catch (  MessagingException me) {
    jsonObj.put("incoming",false);
  }
  try {
    Transport transport=getTransport(_mailAccount);
    if (transport.isConnected()) {
      jsonObj.put("outgoing",true);
    }
 else {
      jsonObj.put("outgoing",false);
    }
    transport.close();
  }
 catch (  MessagingException me) {
    jsonObj.put("outgoing",false);
  }
  return jsonObj;
}
