{
  boolean debug=GetterUtil.getBoolean(PortletProps.get("javamail.debug"));
  Properties props=new Properties();
  props.put("mail.imap.host",mailAccount.getMailInHostName());
  props.put("mail.imap.port",mailAccount.getMailInPort());
  props.put("mail.imaps.auth","true");
  props.put("mail.imaps.host",mailAccount.getMailInHostName());
  props.put("mail.imaps.port",mailAccount.getMailInPort());
  props.put("mail.imaps.socketFactory.port",mailAccount.getMailInPort());
  props.put("mail.imaps.socketFactory.class",_SSL_FACTORY);
  props.put("mail.imaps.socketFactory.fallback","false");
  props.put("mail.smtp.host",mailAccount.getMailOutHostName());
  props.put("mail.smtp.port",mailAccount.getMailOutPort());
  props.put("mail.smtps.auth","true");
  props.put("mail.smtps.host",mailAccount.getMailOutHostName());
  props.put("mail.smtps.port",mailAccount.getMailOutPort());
  props.put("mail.smtps.socketFactory.port",mailAccount.getMailOutPort());
  props.put("mail.smtps.socketFactory.class",_SSL_FACTORY);
  props.put("mail.smtps.socketFactory.fallback","false");
  props.put("mail.debug",Boolean.toString(debug));
  Session session=Session.getInstance(props);
  session.setDebug(debug);
  return session;
}
