{
  if (event.equals(SyncConstants.EVENT_DELETE)) {
    long userId=0;
    String userName=StringPool.BLANK;
    PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
    if (permissionChecker != null) {
      User user=permissionChecker.getUser();
      userId=user.getUserId();
      userName=user.getFullName();
    }
    SyncDLObjectLocalServiceUtil.addSyncDLObject(0,modifiedTime,0,0,StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,0,0,StringPool.BLANK,event,null,0,StringPool.BLANK,type,typePK,StringPool.BLANK,userId,userName);
    return;
  }
  SyncDLObject syncDLObject=null;
  if (type.equals(SyncConstants.TYPE_FILE)) {
    FileEntry fileEntry=null;
    try {
      fileEntry=DLAppLocalServiceUtil.getFileEntry(typePK);
    }
 catch (    NoSuchFileEntryException nsfee) {
      return;
    }
    syncDLObject=SyncUtil.toSyncDLObject(fileEntry,event,true);
  }
 else {
    Folder folder=null;
    try {
      folder=DLAppLocalServiceUtil.getFolder(typePK);
    }
 catch (    NoSuchFolderException nsfe) {
      return;
    }
    if (!SyncUtil.isSupportedFolder(folder)) {
      return;
    }
    syncDLObject=SyncUtil.toSyncDLObject(folder,event);
  }
  SyncDLObjectLocalServiceUtil.addSyncDLObject(syncDLObject.getCompanyId(),modifiedTime,syncDLObject.getRepositoryId(),syncDLObject.getParentFolderId(),syncDLObject.getName(),syncDLObject.getExtension(),syncDLObject.getMimeType(),syncDLObject.getDescription(),syncDLObject.getChangeLog(),syncDLObject.getExtraSettings(),syncDLObject.getVersion(),syncDLObject.getVersionId(),syncDLObject.getSize(),syncDLObject.getChecksum(),syncDLObject.getEvent(),syncDLObject.getLockExpirationDate(),syncDLObject.getLockUserId(),syncDLObject.getLockUserName(),syncDLObject.getType(),syncDLObject.getTypePK(),syncDLObject.getTypeUuid(),syncDLObject.getUserId(),syncDLObject.getUserName());
  if (event.equals(SyncConstants.EVENT_RESTORE) && type.equals(SyncConstants.TYPE_FOLDER)) {
    List<Object> foldersAndFileEntriesAndFileShortcuts=DLAppServiceUtil.getFoldersAndFileEntriesAndFileShortcuts(syncDLObject.getRepositoryId(),syncDLObject.getTypePK(),WorkflowConstants.STATUS_ANY,false,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
    for (    Object folderAndFileEntryAndFileShortcut : foldersAndFileEntriesAndFileShortcuts) {
      if (folderAndFileEntryAndFileShortcut instanceof FileEntry) {
        FileEntry fileEntry=(FileEntry)folderAndFileEntryAndFileShortcut;
        addSyncDLObject(modifiedTime,SyncConstants.EVENT_RESTORE,SyncConstants.TYPE_FILE,fileEntry.getFileEntryId());
      }
 else       if (folderAndFileEntryAndFileShortcut instanceof Folder) {
        Folder folder=(Folder)folderAndFileEntryAndFileShortcut;
        if (!SyncUtil.isSupportedFolder(folder)) {
          continue;
        }
        addSyncDLObject(modifiedTime,SyncConstants.EVENT_RESTORE,SyncConstants.TYPE_FOLDER,folder.getFolderId());
      }
    }
  }
}
