{
  Object[] finderArgs=new Object[]{userId,classNameId,classPK};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,this);
  }
  if (result instanceof KBComment) {
    KBComment kbComment=(KBComment)result;
    if ((userId != kbComment.getUserId()) || (classNameId != kbComment.getClassNameId()) || (classPK != kbComment.getClassPK())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_KBCOMMENT_WHERE);
    query.append(_FINDER_COLUMN_U_C_C_USERID_2);
    query.append(_FINDER_COLUMN_U_C_C_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_U_C_C_CLASSPK_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(classNameId);
      qPos.add(classPK);
      List<KBComment> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,list);
      }
 else {
        KBComment kbComment=list.get(0);
        result=kbComment;
        cacheResult(kbComment);
        if ((kbComment.getUserId() != userId) || (kbComment.getClassNameId() != classNameId) || (kbComment.getClassPK() != classPK)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,kbComment);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (KBComment)result;
  }
}
