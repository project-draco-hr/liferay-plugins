{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.sampleservicebuilder.model.impl.FooImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        FooClp newModel=new FooClp();
        Method method0=oldModelClass.getMethod("getFooId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setFooId(value0.longValue());
        Method method1=oldModelClass.getMethod("getField1");
        String value1=(String)method1.invoke(oldModel,(Object[])null);
        newModel.setField1(value1);
        Method method2=oldModelClass.getMethod("getField2");
        Boolean value2=(Boolean)method2.invoke(oldModel,(Object[])null);
        newModel.setField2(value2.booleanValue());
        Method method3=oldModelClass.getMethod("getField3");
        Integer value3=(Integer)method3.invoke(oldModel,(Object[])null);
        newModel.setField3(value3.intValue());
        Method method4=oldModelClass.getMethod("getField4");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setField4(value4);
        Method method5=oldModelClass.getMethod("getField5");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setField5(value5);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
