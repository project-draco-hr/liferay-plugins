{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  validate(title,content);
  long articleId=counterLocalService.increment();
  long resourcePrimKey=counterLocalService.increment(Article.class.getName());
  Article article=articlePersistence.create(articleId);
  article.setUuid(uuid);
  article.setResourcePrimKey(resourcePrimKey);
  article.setGroupId(serviceContext.getScopeGroupId());
  article.setCompanyId(user.getCompanyId());
  article.setUserId(user.getUserId());
  article.setUserName(user.getFullName());
  article.setCreateDate(now);
  article.setModifiedDate(now);
  article.setParentResourcePrimKey(parentResourcePrimKey);
  article.setVersion(ArticleConstants.DEFAULT_VERSION);
  article.setTitle(title);
  article.setContent(content);
  article.setDescription(description);
  article.setPriority(priority);
  articlePersistence.update(article,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addArticleResources(article,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addArticleResources(article,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  MBMessageLocalServiceUtil.addDiscussionMessage(userId,article.getUserName(),Article.class.getName(),resourcePrimKey,StatusConstants.APPROVED);
  updateDisplayOrder(article,parentResourcePrimKey,priority);
  return article;
}
