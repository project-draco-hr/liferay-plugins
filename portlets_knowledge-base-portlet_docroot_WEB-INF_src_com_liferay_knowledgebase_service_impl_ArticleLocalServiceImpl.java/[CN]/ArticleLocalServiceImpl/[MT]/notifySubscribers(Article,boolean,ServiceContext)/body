{
  String layoutFullURL=serviceContext.getLayoutFullURL();
  if (Validator.isNull(layoutFullURL)) {
    return;
  }
  PortletPreferences preferences=ServiceContextUtil.getPortletPreferences(serviceContext);
  if (preferences == null) {
    long ownerId=article.getGroupId();
    int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
    long plid=PortletKeys.PREFS_PLID_SHARED;
    String portletId="1_WAR_knowledgebaseportlet";
    String defaultPreferences=null;
    preferences=PortletPreferencesLocalServiceUtil.getPreferences(article.getCompanyId(),ownerId,ownerType,plid,portletId,defaultPreferences);
  }
  String emailArticleAddedEnabled=preferences.getValue("email-article-added-enabled",PortletProps.get("admin.email.article.added.enabled"));
  if (!update && !GetterUtil.getBoolean(emailArticleAddedEnabled)) {
    return;
  }
  String emailArticleUpdatedEnabled=preferences.getValue("email-article-updated-enabled",PortletProps.get("admin.email.article.updated.enabled"));
  if (update && !GetterUtil.getBoolean(emailArticleUpdatedEnabled)) {
    return;
  }
  Company company=CompanyLocalServiceUtil.getCompany(article.getCompanyId());
  Group group=GroupLocalServiceUtil.getGroup(serviceContext.getScopeGroupId());
  User user=userPersistence.fetchByPrimaryKey(article.getUserId());
  String fullName=article.getUserName();
  String emailAddress=StringPool.BLANK;
  if (user != null) {
    fullName=user.getFullName();
    emailAddress=user.getEmailAddress();
  }
  String portletName=PortalUtil.getPortletTitle("1_WAR_knowledgebaseportlet",LocaleUtil.getDefault());
  String fromName=preferences.getValue("email-from-name",PortletProps.get("admin.email.from.name"));
  String fromAddress=preferences.getValue("email-from-address",PortletProps.get("admin.email.from.address"));
  fromName=StringUtil.replace(fromName,new String[]{"[$ARTICLE_USER_ADDRESS$]","[$ARTICLE_USER_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$PORTLET_NAME$]"},new String[]{emailAddress,fullName,String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),portletName});
  fromAddress=StringUtil.replace(fromAddress,new String[]{"[$ARTICLE_USER_ADDRESS$]","[$ARTICLE_USER_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$PORTLET_NAME$]"},new String[]{emailAddress,fullName,String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),portletName});
  String articleURL=layoutFullURL + Portal.FRIENDLY_URL_SEPARATOR + "admin/article/"+ article.getResourcePrimKey();
  String subject=null;
  String body=null;
  if (!update) {
    subject=preferences.getValue("email-article-added-subject",null);
    if (subject == null) {
      String name=PortletProps.get("admin.email.article.added.subject");
      try {
        subject=StringUtil.read(getClass().getClassLoader(),name);
      }
 catch (      IOException ioe) {
        _log.error(ioe,ioe);
      }
    }
    body=preferences.getValue("email-article-added-body",null);
    if (body == null) {
      String name=PortletProps.get("admin.email.article.added.body");
      try {
        body=StringUtil.read(getClass().getClassLoader(),name);
      }
 catch (      IOException ioe) {
        _log.error(ioe,ioe);
      }
    }
  }
 else {
    subject=preferences.getValue("email-article-updated-subject",null);
    if (subject == null) {
      String name=PortletProps.get("admin.email.article.updated.subject");
      try {
        subject=StringUtil.read(getClass().getClassLoader(),name);
      }
 catch (      IOException ioe) {
        _log.error(ioe,ioe);
      }
    }
    body=preferences.getValue("email-article-updated-body",null);
    if (body == null) {
      String name=PortletProps.get("admin.email.article.updated.body");
      try {
        body=StringUtil.read(getClass().getClassLoader(),name);
      }
 catch (      IOException ioe) {
        _log.error(ioe,ioe);
      }
    }
  }
  subject=StringUtil.replace(subject,new String[]{"[$ARTICLE_TITLE$]","[$ARTICLE_URL$]","[$ARTICLE_USER_ADDRESS$]","[$ARTICLE_USER_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]"},new String[]{article.getTitle(),articleURL,emailAddress,fullName,String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),fromAddress,fromName,company.getVirtualHost(),portletName});
  body=StringUtil.replace(body,new String[]{"[$ARTICLE_TITLE$]","[$ARTICLE_URL$]","[$ARTICLE_USER_ADDRESS$]","[$ARTICLE_USER_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]"},new String[]{article.getTitle(),articleURL,emailAddress,fullName,String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),fromAddress,fromName,company.getVirtualHost(),portletName});
  String mailId=StringPool.LESS_THAN + "knowledge_base.article." + article.getResourcePrimKey()+ StringPool.AT+ company.getMx()+ StringPool.GREATER_THAN;
  Message message=new Message();
  message.put("companyId",article.getCompanyId());
  message.put("groupId",article.getGroupId());
  message.put("userId",article.getUserId());
  message.put("resourcePrimKey",article.getResourcePrimKey());
  message.put("fromName",fromName);
  message.put("fromAddress",fromAddress);
  message.put("subject",subject);
  message.put("body",body);
  message.put("replyToAddress",fromAddress);
  message.put("mailId",mailId);
  message.put("htmlFormat",Boolean.TRUE);
  MessageBusUtil.sendMessage("liferay/knowledge_base_admin",message);
}
