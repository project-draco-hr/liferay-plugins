{
  for (  Object value : params.values()) {
    if (value instanceof Object[]) {
      Object[] valueArray=(Object[])value;
      if (valueArray.length == 0) {
        return null;
      }
    }
  }
  Integer status=(Integer)params.get("status");
  if ((status != null) && (status == WorkflowConstants.STATUS_ANY)) {
    params.remove("status");
  }
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(Article.class,"article1",getClass().getClassLoader());
  for (  Map.Entry<String,Object> entry : params.entrySet()) {
    String key=entry.getKey();
    Object value=entry.getValue();
    if (key.equals("parentGroupId")) {
      key="groupId";
      value=ArrayUtil.toArray(getGroupIds((Long)value));
    }
    if (value instanceof Object[]) {
      Property property=PropertyFactoryUtil.forName(key);
      dynamicQuery.add(property.in((Object[])value));
    }
 else {
      Property property=PropertyFactoryUtil.forName(key);
      dynamicQuery.add(property.eq(value));
    }
  }
  if (allVersions) {
    return dynamicQuery;
  }
  DynamicQuery subselectDynamicQuery=DynamicQueryFactoryUtil.forClass(Article.class,"article2",getClass().getClassLoader());
  Property versionProperty=PropertyFactoryUtil.forName("version");
  subselectDynamicQuery.setProjection(versionProperty.max());
  Property resourcePrimKeyProperty1=PropertyFactoryUtil.forName("article1.resourcePrimKey");
  Property resourcePrimKeyProperty2=PropertyFactoryUtil.forName("article2.resourcePrimKey");
  subselectDynamicQuery.add(resourcePrimKeyProperty1.eqProperty(resourcePrimKeyProperty2));
  if ((status != null) && (status != WorkflowConstants.STATUS_ANY)) {
    Property property=PropertyFactoryUtil.forName("status");
    subselectDynamicQuery.add(property.eq(status));
  }
  dynamicQuery.add(versionProperty.in(subselectDynamicQuery));
  return dynamicQuery;
}
