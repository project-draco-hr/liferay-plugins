{
  samTodoItem=toUnwrappedModel(samTodoItem);
  boolean isNew=samTodoItem.isNew();
  SAMTodoItemModelImpl samTodoItemModelImpl=(SAMTodoItemModelImpl)samTodoItem;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (samTodoItem.getCreateDate() == null)) {
    if (serviceContext == null) {
      samTodoItem.setCreateDate(now);
    }
 else {
      samTodoItem.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!samTodoItemModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      samTodoItem.setModifiedDate(now);
    }
 else {
      samTodoItem.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (samTodoItem.isNew()) {
      session.save(samTodoItem);
      samTodoItem.setNew(false);
    }
 else {
      samTodoItem=(SAMTodoItem)session.merge(samTodoItem);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
  entityCache.putResult(SAMTodoItemModelImpl.ENTITY_CACHE_ENABLED,SAMTodoItemImpl.class,samTodoItem.getPrimaryKey(),samTodoItem,false);
  samTodoItem.resetOriginalValues();
  return samTodoItem;
}
