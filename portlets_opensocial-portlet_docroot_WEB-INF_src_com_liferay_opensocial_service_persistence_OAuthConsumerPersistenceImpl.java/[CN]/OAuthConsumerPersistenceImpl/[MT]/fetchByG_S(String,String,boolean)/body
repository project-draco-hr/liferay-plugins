{
  Object[] finderArgs=new Object[]{gadgetKey,serviceName};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_S,finderArgs,this);
  }
  if (result instanceof OAuthConsumer) {
    OAuthConsumer oAuthConsumer=(OAuthConsumer)result;
    if (!Validator.equals(gadgetKey,oAuthConsumer.getGadgetKey()) || !Validator.equals(serviceName,oAuthConsumer.getServiceName())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_OAUTHCONSUMER_WHERE);
    if (gadgetKey == null) {
      query.append(_FINDER_COLUMN_G_S_GADGETKEY_1);
    }
 else {
      if (gadgetKey.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_G_S_GADGETKEY_3);
      }
 else {
        query.append(_FINDER_COLUMN_G_S_GADGETKEY_2);
      }
    }
    if (serviceName == null) {
      query.append(_FINDER_COLUMN_G_S_SERVICENAME_1);
    }
 else {
      if (serviceName.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_G_S_SERVICENAME_3);
      }
 else {
        query.append(_FINDER_COLUMN_G_S_SERVICENAME_2);
      }
    }
    query.append(OAuthConsumerModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (gadgetKey != null) {
        qPos.add(gadgetKey);
      }
      if (serviceName != null) {
        qPos.add(serviceName);
      }
      List<OAuthConsumer> list=q.list();
      result=list;
      OAuthConsumer oAuthConsumer=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_S,finderArgs,list);
      }
 else {
        oAuthConsumer=list.get(0);
        cacheResult(oAuthConsumer);
        if ((oAuthConsumer.getGadgetKey() == null) || !oAuthConsumer.getGadgetKey().equals(gadgetKey) || (oAuthConsumer.getServiceName() == null)|| !oAuthConsumer.getServiceName().equals(serviceName)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_S,finderArgs,oAuthConsumer);
        }
      }
      return oAuthConsumer;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_S,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (OAuthConsumer)result;
    }
  }
}
