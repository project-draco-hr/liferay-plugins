{
  Object paramObj0=new LongWrapper(kaleoTaskInstanceTokenId);
  Object paramObj1=new LongWrapper(kaleoTaskAssignmentId);
  Object paramObj2=ClpSerializer.translateInput(context);
  if (context == null) {
    paramObj2=new NullWrapper("java.util.Map");
  }
  Object returnObj=null;
  try {
    returnObj=_classLoaderProxy.invoke("addKaleoTaskInstanceAssignment",new Object[]{paramObj0,paramObj1,paramObj2});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.kernel.exception.PortalException) {
      throw (com.liferay.portal.kernel.exception.PortalException)t;
    }
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceAssignment)ClpSerializer.translateOutput(returnObj);
}
