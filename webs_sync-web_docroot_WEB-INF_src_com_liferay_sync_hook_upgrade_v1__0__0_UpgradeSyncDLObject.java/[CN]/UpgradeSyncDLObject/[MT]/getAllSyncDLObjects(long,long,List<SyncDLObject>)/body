{
  List<Object> foldersAndFileEntriesAndFileShortcuts=DLFolderLocalServiceUtil.getFoldersAndFileEntriesAndFileShortcuts(groupId,folderId,null,false,new QueryDefinition(WorkflowConstants.STATUS_APPROVED));
  for (  Object object : foldersAndFileEntriesAndFileShortcuts) {
    if (object instanceof DLFileEntry) {
      DLFileEntry dlFileEntry=(DLFileEntry)object;
      String dlFileEntryEvent;
      if (dlFileEntry.isInTrash()) {
        dlFileEntryEvent=SyncConstants.EVENT_TRASH;
      }
 else {
        dlFileEntryEvent=SyncConstants.EVENT_ADD;
      }
      SyncDLObject fileEntrySyncDLObject=SyncUtil.toSyncDLObject(dlFileEntry,dlFileEntryEvent);
      syncDLObjects.add(fileEntrySyncDLObject);
      if (fileEntrySyncDLObject.getType().equals(SyncConstants.TYPE_PRIVATE_WORKNG_COPY)) {
        SyncDLObject approvedSyncDLObject=SyncUtil.toSyncDLObject(dlFileEntry,dlFileEntryEvent,true);
        syncDLObjects.add(approvedSyncDLObject);
      }
    }
 else     if (object instanceof DLFolder) {
      DLFolder dlFolder=(DLFolder)object;
      if (!SyncUtil.isSupportedFolder(dlFolder)) {
        continue;
      }
      String dlFolderEvent;
      if (dlFolder.isInTrash()) {
        dlFolderEvent=SyncConstants.EVENT_TRASH;
      }
 else {
        dlFolderEvent=SyncConstants.EVENT_ADD;
      }
      syncDLObjects.add(SyncUtil.toSyncDLObject(dlFolder,dlFolderEvent));
      getAllSyncDLObjects(groupId,dlFolder.getFolderId(),syncDLObjects);
    }
  }
}
