{
  List<WorkflowTask> workflowTasks=WorkflowTaskManagerUtil.getWorkflowTasksByUser(defaultUserId,null,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowTaskNameComparator(true));
  assertEquals(0,workflowTasks.size());
  WorkflowInstance workflowInstance=WorkflowInstanceManagerUtil.startWorkflowInstance(defaultUserId,DEFINITION_NAME_3,_workflowDefinition.getVersion(),null,null);
  List<WorkflowInstance> childrenWorkflowInstances=workflowInstance.getChildrenWorkflowInstances();
  for (  WorkflowInstance childWorkflowInstance : childrenWorkflowInstances) {
    List<WorkflowTask> childWorkflowTasks=WorkflowTaskManagerUtil.getWorkflowTasksByWorkflowInstance(childWorkflowInstance.getWorkflowInstanceId(),null,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowTaskNameComparator(true));
    assertEquals(1,childWorkflowTasks.size());
    WorkflowTask childWorkflowTask=childWorkflowTasks.get(0);
    assertEquals(100L,childWorkflowTask.getAssigneeUserId());
    childWorkflowTask=WorkflowTaskManagerUtil.assignWorkflowTaskToRole(defaultUserId,childWorkflowTask.getWorkflowTaskId(),guestRoleId,null,null);
    childWorkflowTask=WorkflowTaskManagerUtil.assignWorkflowTaskToUser(defaultUserId,childWorkflowTask.getWorkflowTaskId(),defaultUserId,null,null);
    assertEquals(defaultUserId,childWorkflowTask.getAssigneeUserId());
  }
  workflowTasks=WorkflowTaskManagerUtil.getWorkflowTasksByUser(defaultUserId,null,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowTaskNameComparator(true));
  assertEquals(3,workflowTasks.size());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(workflowInstance.getWorkflowInstanceId());
}
