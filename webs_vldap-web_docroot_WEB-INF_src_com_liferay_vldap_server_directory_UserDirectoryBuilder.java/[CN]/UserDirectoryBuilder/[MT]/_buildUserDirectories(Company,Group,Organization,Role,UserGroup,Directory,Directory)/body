{
  long companyId=0;
  String firstName=null;
  String middleName=null;
  String lastName=null;
  String screenName=null;
  String emailAddress=null;
  int status=WorkflowConstants.STATUS_APPROVED;
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  boolean andSearch=true;
  int start=0;
  int end=PortletPropsValues.SEARCH_MAX_SIZE;
  OrderByComparator orderByComparator=new UserScreenNameComparator();
  if (group != null) {
    companyId=group.getCompanyId();
    params.put("usersGroups",group.getGroupId());
  }
 else   if (organization != null) {
    companyId=organization.getCompanyId();
    params.put("usersOrgs",organization.getOrganizationId());
  }
 else   if (role != null) {
    companyId=role.getCompanyId();
    params.put("usersRoles",role.getRoleId());
  }
 else   if (userGroup != null) {
    companyId=userGroup.getCompanyId();
    params.put("usersUserGroups",userGroup.getUserGroupId());
  }
 else   if (company != null) {
    companyId=company.getCompanyId();
  }
  List<User> users=UserLocalServiceUtil.search(companyId,firstName,middleName,lastName,screenName,emailAddress,status,params,andSearch,start,end,orderByComparator);
  List<Directory> directories=currentDirectory.getDirectories();
  for (  User user : users) {
    if (user.isDefaultUser()) {
      continue;
    }
    Directory userDirectory=new UserDirectory(user,usersDirectory);
    currentDirectory.addAttribute("member",userDirectory.getName().getName());
    directories.add(userDirectory);
  }
}
