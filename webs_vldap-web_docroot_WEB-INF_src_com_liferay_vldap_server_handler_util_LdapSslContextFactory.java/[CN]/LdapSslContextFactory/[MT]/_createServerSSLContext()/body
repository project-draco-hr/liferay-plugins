{
  KeyStore keyStore=KeyStore.getInstance("JKS");
  InputStream inputStream=null;
  try {
    File file=new File(PortletPropsValues.SSL_KEYSTORE_FILE_NAME);
    if (!file.exists()) {
      throw new IOException(file.toString() + " does not exist");
    }
    inputStream=new FileInputStream(file);
    keyStore.load(inputStream,PortletPropsValues.SSL_KEYSTORE_PASSWORD);
  }
  finally {
    if (inputStream != null) {
      try {
        inputStream.close();
      }
 catch (      IOException ioe) {
      }
    }
  }
  String algorithm=Security.getProperty("ssl.KeyManagerFactory.algorithm");
  if (algorithm == null) {
    algorithm=KeyManagerFactory.getDefaultAlgorithm();
  }
  KeyManagerFactory keyManagerFactory=KeyManagerFactory.getInstance(algorithm);
  keyManagerFactory.init(keyStore,PortletPropsValues.SSL_KEYSTORE_PASSWORD);
  SSLContext sslContext=SSLContext.getInstance(PortletPropsValues.SSL_PROTOCOL);
  sslContext.init(keyManagerFactory.getKeyManagers(),LdapTrustManagerFactory.TRUST_MANAGERS,null);
  return sslContext;
}
