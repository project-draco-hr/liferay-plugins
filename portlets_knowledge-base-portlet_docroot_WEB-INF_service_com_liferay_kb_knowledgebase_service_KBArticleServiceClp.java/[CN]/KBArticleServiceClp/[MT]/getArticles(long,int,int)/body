{
  Object paramObj0=new LongWrapper(resourcePrimKey);
  Object paramObj1=new IntegerWrapper(start);
  Object paramObj2=new IntegerWrapper(end);
  Object returnObj=null;
  try {
    returnObj=_classLoaderProxy.invoke("getArticles",new Object[]{paramObj0,paramObj1,paramObj2});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.PortalException) {
      throw (com.liferay.portal.PortalException)t;
    }
    if (t instanceof com.liferay.portal.SystemException) {
      throw (com.liferay.portal.SystemException)t;
    }
    if (t instanceof java.rmi.RemoteException) {
      throw (java.rmi.RemoteException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (java.util.List<com.liferay.kb.knowledgebase.model.KBArticle>)ClpSerializer.translateOutput(returnObj);
}
