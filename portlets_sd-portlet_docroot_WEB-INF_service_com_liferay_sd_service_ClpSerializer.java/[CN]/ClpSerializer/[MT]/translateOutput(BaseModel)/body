{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.sd.model.impl.JIRAActionImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        JIRAActionClp newModel=new JIRAActionClp();
        Method method0=oldModelClass.getMethod("getJiraActionId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setJiraActionId(value0.longValue());
        Method method1=oldModelClass.getMethod("getJiraUserId");
        String value1=(String)method1.invoke(oldModel,(Object[])null);
        newModel.setJiraUserId(value1);
        Method method2=oldModelClass.getMethod("getCreateDate");
        Date value2=(Date)method2.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value2);
        Method method3=oldModelClass.getMethod("getModifiedDate");
        Date value3=(Date)method3.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value3);
        Method method4=oldModelClass.getMethod("getJiraIssueId");
        Long value4=(Long)method4.invoke(oldModel,(Object[])null);
        newModel.setJiraIssueId(value4.longValue());
        Method method5=oldModelClass.getMethod("getType");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setType(value5);
        Method method6=oldModelClass.getMethod("getBody");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setBody(value6);
        Method method7=oldModelClass.getMethod("getJiraGroupName");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setJiraGroupName(value7);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.sd.model.impl.JIRAChangeGroupImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        JIRAChangeGroupClp newModel=new JIRAChangeGroupClp();
        Method method0=oldModelClass.getMethod("getJiraChangeGroupId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setJiraChangeGroupId(value0.longValue());
        Method method1=oldModelClass.getMethod("getJiraUserId");
        String value1=(String)method1.invoke(oldModel,(Object[])null);
        newModel.setJiraUserId(value1);
        Method method2=oldModelClass.getMethod("getCreateDate");
        Date value2=(Date)method2.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value2);
        Method method3=oldModelClass.getMethod("getJiraIssueId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setJiraIssueId(value3.longValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.sd.model.impl.JIRAChangeItemImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        JIRAChangeItemClp newModel=new JIRAChangeItemClp();
        Method method0=oldModelClass.getMethod("getJiraChangeItemId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setJiraChangeItemId(value0.longValue());
        Method method1=oldModelClass.getMethod("getJiraChangeGroupId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setJiraChangeGroupId(value1.longValue());
        Method method2=oldModelClass.getMethod("getField");
        String value2=(String)method2.invoke(oldModel,(Object[])null);
        newModel.setField(value2);
        Method method3=oldModelClass.getMethod("getOldValue");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setOldValue(value3);
        Method method4=oldModelClass.getMethod("getOldString");
        String value4=(String)method4.invoke(oldModel,(Object[])null);
        newModel.setOldString(value4);
        Method method5=oldModelClass.getMethod("getNewValue");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setNewValue(value5);
        Method method6=oldModelClass.getMethod("getNewString");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setNewString(value6);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.sd.model.impl.JIRAIssueImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        JIRAIssueClp newModel=new JIRAIssueClp();
        Method method0=oldModelClass.getMethod("getJiraIssueId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setJiraIssueId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCreateDate");
        Date value1=(Date)method1.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value1);
        Method method2=oldModelClass.getMethod("getModifiedDate");
        Date value2=(Date)method2.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value2);
        Method method3=oldModelClass.getMethod("getProjectId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setProjectId(value3.longValue());
        Method method4=oldModelClass.getMethod("getKey");
        String value4=(String)method4.invoke(oldModel,(Object[])null);
        newModel.setKey(value4);
        Method method5=oldModelClass.getMethod("getSummary");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setSummary(value5);
        Method method6=oldModelClass.getMethod("getDescription");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setDescription(value6);
        Method method7=oldModelClass.getMethod("getReporterJiraUserId");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setReporterJiraUserId(value7);
        Method method8=oldModelClass.getMethod("getAssigneeJiraUserId");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setAssigneeJiraUserId(value8);
        Method method9=oldModelClass.getMethod("getResolution");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setResolution(value9);
        Method method10=oldModelClass.getMethod("getStatus");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setStatus(value10);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.sd.model.impl.SVNRepositoryImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        SVNRepositoryClp newModel=new SVNRepositoryClp();
        Method method0=oldModelClass.getMethod("getSvnRepositoryId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setSvnRepositoryId(value0.longValue());
        Method method1=oldModelClass.getMethod("getUrl");
        String value1=(String)method1.invoke(oldModel,(Object[])null);
        newModel.setUrl(value1);
        Method method2=oldModelClass.getMethod("getRevisionNumber");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setRevisionNumber(value2.longValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.sd.model.impl.SVNRevisionImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        SVNRevisionClp newModel=new SVNRevisionClp();
        Method method0=oldModelClass.getMethod("getSvnRevisionId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setSvnRevisionId(value0.longValue());
        Method method1=oldModelClass.getMethod("getSvnUserId");
        String value1=(String)method1.invoke(oldModel,(Object[])null);
        newModel.setSvnUserId(value1);
        Method method2=oldModelClass.getMethod("getCreateDate");
        Date value2=(Date)method2.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value2);
        Method method3=oldModelClass.getMethod("getSvnRepositoryId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setSvnRepositoryId(value3.longValue());
        Method method4=oldModelClass.getMethod("getRevisionNumber");
        Long value4=(Long)method4.invoke(oldModel,(Object[])null);
        newModel.setRevisionNumber(value4.longValue());
        Method method5=oldModelClass.getMethod("getComments");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setComments(value5);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
