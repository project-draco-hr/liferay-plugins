{
  User user=PortalUtil.getUser(request);
  if (user == null) {
    return;
  }
  UserGroup userGroup=UserGroupLocalServiceUtil.getUserGroup(user.getCompanyId(),UserGroupConstants.SOCIAL_OFFICE_USERS);
  if (!UserLocalServiceUtil.hasUserGroupUser(userGroup.getUserGroupId(),user.getUserId())) {
    return;
  }
  Group group=user.getGroup();
  String customJspServletContextName=GetterUtil.getString(group.getTypeSettingsProperty("customJspServletContextName"));
  if (customJspServletContextName.equals("so-hook")) {
    return;
  }
  if (!LayoutLocalServiceUtil.hasLayouts(user,false)) {
    LayoutSetLocalServiceUtil.addLayoutSet(group.getGroupId(),false);
  }
 else {
    List<Layout> layouts=LayoutLocalServiceUtil.getLayouts(group.getGroupId(),false);
    ServiceContext serviceContext=new ServiceContext();
    for (    Layout layout : layouts) {
      LayoutLocalServiceUtil.updateLayout(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),layout.getParentLayoutId(),layout.getNameMap(),layout.getTitleMap(),layout.getDescriptionMap(),layout.getKeywordsMap(),layout.getRobotsMap(),layout.getType(),true,layout.getFriendlyURL(),null,null,serviceContext);
    }
  }
  if (!LayoutLocalServiceUtil.hasLayouts(user,true)) {
    LayoutSetLocalServiceUtil.addLayoutSet(group.getGroupId(),true);
  }
  updatePrivateUserLayouts(group);
  updatePublicUserLayouts(group);
  setCustomJspServletContextName(group);
}
