{
  Folder folder=findByPrimaryKey(folderId);
  int count=countByAccountId(accountId);
  Session session=null;
  try {
    session=openSession();
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(3 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(3);
    }
    query.append(_SQL_SELECT_FOLDER_WHERE);
    query.append(_FINDER_COLUMN_ACCOUNTID_ACCOUNTID_2);
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else {
      query.append(FolderModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Query q=session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(accountId);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,orderByComparator,folder);
    Folder[] array=new FolderImpl[3];
    array[0]=(Folder)objArray[0];
    array[1]=(Folder)objArray[1];
    array[2]=(Folder)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}
