{
  Object paramObj0=new LongWrapper(userId);
  Object paramObj1=new LongWrapper(meetupsEntryId);
  Object paramObj2=ClpSerializer.translateInput(title);
  if (title == null) {
    paramObj2=new NullWrapper("java.lang.String");
  }
  Object paramObj3=ClpSerializer.translateInput(description);
  if (description == null) {
    paramObj3=new NullWrapper("java.lang.String");
  }
  Object paramObj4=new IntegerWrapper(startDateMonth);
  Object paramObj5=new IntegerWrapper(startDateDay);
  Object paramObj6=new IntegerWrapper(startDateYear);
  Object paramObj7=new IntegerWrapper(startDateHour);
  Object paramObj8=new IntegerWrapper(startDateMinute);
  Object paramObj9=new IntegerWrapper(endDateMonth);
  Object paramObj10=new IntegerWrapper(endDateDay);
  Object paramObj11=new IntegerWrapper(endDateYear);
  Object paramObj12=new IntegerWrapper(endDateHour);
  Object paramObj13=new IntegerWrapper(endDateMinute);
  Object paramObj14=new IntegerWrapper(totalAttendees);
  Object paramObj15=new IntegerWrapper(maxAttendees);
  Object paramObj16=new DoubleWrapper(price);
  Object paramObj17=ClpSerializer.translateInput(thumbnail);
  if (thumbnail == null) {
    paramObj17=new NullWrapper("[B");
  }
  Object returnObj=null;
  try {
    returnObj=_classLoaderProxy.invoke("updateMeetupsEntry",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.PortalException) {
      throw (com.liferay.portal.PortalException)t;
    }
    if (t instanceof com.liferay.portal.SystemException) {
      throw (com.liferay.portal.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (com.liferay.sd.model.MeetupsEntry)ClpSerializer.translateOutput(returnObj);
}
