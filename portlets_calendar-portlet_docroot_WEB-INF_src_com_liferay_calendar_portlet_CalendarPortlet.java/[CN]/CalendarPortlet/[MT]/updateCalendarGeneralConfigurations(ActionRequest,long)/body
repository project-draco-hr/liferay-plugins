{
  long calendarResourceId=ParamUtil.getLong(actionRequest,"calendarResourceId");
  Map<Locale,String> nameMap=LocalizationUtil.getLocalizationMap(actionRequest,"name");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  int color=ParamUtil.getInteger(actionRequest,"color");
  String emailFromAddress=ParamUtil.getString(actionRequest,"emailFromAddress");
  String emailFromName=ParamUtil.getString(actionRequest,"emailFromName");
  boolean defaultCalendar=ParamUtil.getBoolean(actionRequest,"defaultCalendar",false);
  User user=PortalUtil.getUser(actionRequest);
  if (!Validator.isEmailAddress(emailFromAddress)) {
    emailFromAddress=user.getEmailAddress();
  }
  if (Validator.isNull(emailFromName)) {
    emailFromName=user.getFullName();
  }
  ServiceContext serviceContext=ServiceContextFactory.getInstance(Calendar.class.getName(),actionRequest);
  if (calendarId <= 0) {
    CalendarResource calendarResource=CalendarResourceServiceUtil.getCalendarResource(calendarResourceId);
    CalendarServiceUtil.addCalendar(calendarResource.getGroupId(),calendarResourceId,nameMap,descriptionMap,color,defaultCalendar,serviceContext);
  }
 else {
    CalendarServiceUtil.updateCalendar(calendarId,nameMap,descriptionMap,color,defaultCalendar,serviceContext);
  }
}
