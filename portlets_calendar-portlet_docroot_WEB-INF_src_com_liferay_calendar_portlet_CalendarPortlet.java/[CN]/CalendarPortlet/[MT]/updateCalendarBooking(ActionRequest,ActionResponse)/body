{
  long calendarBookingId=ParamUtil.getLong(actionRequest,"calendarBookingId");
  long calendarId=ParamUtil.getLong(actionRequest,"calendarId");
  long[] childCalendarIds=ParamUtil.getLongValues(actionRequest,"childCalendarIds");
  Map<Locale,String> titleMap=LocalizationUtil.getLocalizationMap(actionRequest,"title");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  String location=ParamUtil.getString(actionRequest,"location");
  java.util.Calendar startDateJCalendar=getJCalendar(actionRequest,"startDate");
  java.util.Calendar endDateJCalendar=getJCalendar(actionRequest,"endDate");
  long oldStartDate=ParamUtil.getLong(actionRequest,"oldStartDate");
  boolean allDay=ParamUtil.getBoolean(actionRequest,"allDay");
  String recurrence=getRecurrence(actionRequest);
  int status=ParamUtil.getInteger(actionRequest,"status");
  long[] reminders=getReminders(actionRequest);
  String[] remindersType=getRemindersType(actionRequest);
  boolean updateCalendarBookingInstance=ParamUtil.getBoolean(actionRequest,"updateCalendarBookingInstance");
  boolean allFollowing=ParamUtil.getBoolean(actionRequest,"allFollowing");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(CalendarBooking.class.getName(),actionRequest);
  if (calendarBookingId <= 0) {
    CalendarBookingServiceUtil.addCalendarBooking(calendarId,childCalendarIds,CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,titleMap,descriptionMap,location,startDateJCalendar.getTimeInMillis(),endDateJCalendar.getTimeInMillis(),allDay,recurrence,reminders[0],remindersType[0],reminders[1],remindersType[1],serviceContext);
  }
 else {
    if (updateCalendarBookingInstance) {
      CalendarBookingServiceUtil.updateCalendarBookingInstance(calendarBookingId,calendarId,childCalendarIds,titleMap,descriptionMap,location,startDateJCalendar.getTimeInMillis(),endDateJCalendar.getTimeInMillis(),allDay,recurrence,reminders[0],remindersType[0],reminders[1],remindersType[1],status,allFollowing,serviceContext);
    }
 else {
      CalendarBooking calendarBooking=CalendarBookingServiceUtil.getCalendarBooking(calendarBookingId);
      long duration=(endDateJCalendar.getTimeInMillis() - startDateJCalendar.getTimeInMillis());
      long offset=(startDateJCalendar.getTimeInMillis() - oldStartDate);
      CalendarBookingServiceUtil.updateCalendarBooking(calendarBookingId,calendarId,childCalendarIds,titleMap,descriptionMap,location,(calendarBooking.getStartDate() + offset),(calendarBooking.getStartDate() + offset + duration),allDay,recurrence,reminders[0],remindersType[0],reminders[1],remindersType[1],status,serviceContext);
    }
  }
}
