{
  if (dn == null) {
    return null;
  }
  String top=getRdnValue(dn,0);
  String companyWebId=getRdnValue(dn,1);
  String type=getRdnValue(dn,2);
  String typeValue=getRdnValue(dn,3);
  String screenName=getRdnValue(dn,4);
  if (Validator.isNull(top)) {
    return new SearchBase(new RootDirectory(),_rootBuilder);
  }
  if (!top.equalsIgnoreCase("Liferay")) {
    return null;
  }
  if (companyWebId == null) {
    return new SearchBase(new TopDirectory(top),_topBuilder,top);
  }
  Company company=CompanyLocalServiceUtil.getCompanyByWebId(companyWebId);
  if (company == null) {
    return null;
  }
  if (type == null) {
    return new SearchBase(new CompanyDirectory(top,company),_companyBuilder,top,company);
  }
  if (typeValue == null) {
    if (type.equalsIgnoreCase("Communities")) {
      return new SearchBase(new CommunitiesDirectory(top,company),_communitiesBuilder,top,company);
    }
 else     if (type.equalsIgnoreCase("Organizations")) {
      return new SearchBase(new OrganizationsDirectory(top,company),_organizationsBuilder,top,company);
    }
 else     if (type.equalsIgnoreCase("Roles")) {
      return new SearchBase(new RolesDirectory(top,company),_rolesBuilder,top,company);
    }
 else     if (type.equalsIgnoreCase("User Groups")) {
      return new SearchBase(new UserGroupsDirectory(top,company),_userGroupsBuilder,top,company);
    }
 else     if (type.equalsIgnoreCase("Users")) {
      return new SearchBase(new UsersDirectory(top,company),_usersBuilder,top,company);
    }
  }
  Group community=null;
  Organization organization=null;
  Role role=null;
  UserGroup userGroup=null;
  if (type.equalsIgnoreCase("Communities")) {
    community=GroupLocalServiceUtil.getGroup(company.getCompanyId(),typeValue);
  }
 else   if (type.equalsIgnoreCase("Organizations")) {
    organization=OrganizationLocalServiceUtil.getOrganization(company.getCompanyId(),typeValue);
  }
 else   if (type.equalsIgnoreCase("Roles")) {
    role=RoleLocalServiceUtil.getRole(company.getCompanyId(),typeValue);
  }
 else   if (type.equalsIgnoreCase("User Groups")) {
    userGroup=UserGroupLocalServiceUtil.getUserGroup(company.getCompanyId(),typeValue);
  }
  if (screenName == null) {
    if (type.equalsIgnoreCase("Communities")) {
      return new SearchBase(new CommunityDirectory(top,company,community),_communityBuilder,top,company,community);
    }
 else     if (type.equalsIgnoreCase("Organizations")) {
      return new SearchBase(new OrganizationDirectory(top,company,organization),_organizationBuilder,top,company,organization);
    }
 else     if (type.equalsIgnoreCase("Roles")) {
      return new SearchBase(new RoleDirectory(top,company,role),_roleBuilder,top,company,role);
    }
 else     if (type.equalsIgnoreCase("User Groups")) {
      return new SearchBase(new UserGroupDirectory(top,company,userGroup),_userGroupBuilder,top,company,userGroup);
    }
 else     if (type.equalsIgnoreCase("Users")) {
      User user=UserLocalServiceUtil.getUserByScreenName(company.getCompanyId(),typeValue);
      return new SearchBase(new UserDirectory(top,company,user),_userBuilder,top,company,user);
    }
  }
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  if (community != null) {
    params.put("usersGroups",community.getGroupId());
  }
 else   if (organization != null) {
    params.put("usersOrgs",organization.getOrganizationId());
  }
 else   if (role != null) {
    params.put("usersRoles",role.getRoleId());
  }
 else   if (userGroup != null) {
    params.put("usersUserGroups",userGroup.getUserGroupId());
  }
  OrderByComparator orderByComparator=new UserScreenNameComparator();
  List<User> users=UserLocalServiceUtil.search(company.getCompanyId(),null,null,null,screenName,null,WorkflowConstants.STATUS_APPROVED,params,true,0,(int)sizeLimit,orderByComparator);
  if (users.isEmpty()) {
    return null;
  }
  return new SearchBase(new UserDirectory(top,company,users.get(0)),_userBuilder,top,company,users.get(0));
}
