{
  Date now=new Date();
  TasksEntry tasksEntry=tasksEntryPersistence.findByPrimaryKey(tasksEntryId);
  tasksEntry.setModifiedDate(now);
  tasksEntry.setTitle(title);
  tasksEntry.setPriority(priority);
  tasksEntry.setAssigneeUserId(assigneeUserId);
  tasksEntry.setDueDate(dueDate);
  if (status == TasksConstants.STATUS_RESOLVED) {
    tasksEntry.setResolverUserId(resolverUserId);
    tasksEntry.setFinishDate(now);
  }
 else {
    tasksEntry.setResolverUserId(0);
    tasksEntry.setFinishDate(null);
  }
  tasksEntry.setStatus(status);
  tasksEntryPersistence.update(tasksEntry);
  int activity=TasksActivityKeys.UPDATE_TASK;
  if (status == TasksConstants.STATUS_RESOLVED) {
    activity=TasksActivityKeys.RESOLVE_TASK;
  }
 else   if (status == TasksConstants.STATUS_REOPENED) {
    activity=TasksActivityKeys.REOPEN_TASK;
  }
  SocialActivityLocalServiceUtil.addActivity(tasksEntry.getUserId(),tasksEntry.getGroupId(),TasksEntry.class.getName(),tasksEntryId,activity,StringPool.BLANK,0);
  updateTagsAsset(tasksEntry.getUserId(),tasksEntry,serviceContext.getTagsCategories(),serviceContext.getTagsEntries());
  return tasksEntry;
}
