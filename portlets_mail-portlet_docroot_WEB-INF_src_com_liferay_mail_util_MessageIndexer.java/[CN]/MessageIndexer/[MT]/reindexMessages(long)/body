{
  Class<?> clazz=getClass();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(Message.class,clazz.getClassLoader());
  Projection minMessageIdProjection=ProjectionFactoryUtil.min("messageId");
  Projection maxMessageIdProjection=ProjectionFactoryUtil.max("messageId");
  ProjectionList projectionList=ProjectionFactoryUtil.projectionList();
  projectionList.add(minMessageIdProjection);
  projectionList.add(maxMessageIdProjection);
  dynamicQuery.setProjection(projectionList);
  addReindexCriteria(dynamicQuery,companyId);
  List<Object[]> results=MessageLocalServiceUtil.dynamicQuery(dynamicQuery);
  Object[] minAndMaxMessageIds=results.get(0);
  if ((minAndMaxMessageIds[0] == null) || (minAndMaxMessageIds[1] == null)) {
    return;
  }
  long minMessageId=(Long)minAndMaxMessageIds[0];
  long maxMessageId=(Long)minAndMaxMessageIds[1];
  long startMessageId=minMessageId;
  long endMessageId=startMessageId + DEFAULT_INTERVAL;
  while (startMessageId <= maxMessageId) {
    reindexMessages(companyId,startMessageId,endMessageId);
    startMessageId=endMessageId;
    endMessageId+=DEFAULT_INTERVAL;
  }
}
