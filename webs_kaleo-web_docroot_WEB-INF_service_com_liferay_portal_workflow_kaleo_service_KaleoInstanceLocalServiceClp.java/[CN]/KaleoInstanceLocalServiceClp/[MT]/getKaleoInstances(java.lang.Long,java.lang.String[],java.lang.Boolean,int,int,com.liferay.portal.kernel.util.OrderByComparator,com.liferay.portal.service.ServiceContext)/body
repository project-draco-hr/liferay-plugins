{
  Object returnObj=null;
  MethodHandler methodHandler=new MethodHandler(_getKaleoInstancesMethodKey22,ClpSerializer.translateInput(userId),ClpSerializer.translateInput(assetClassNames),ClpSerializer.translateInput(completed),start,end,ClpSerializer.translateInput(orderByComparator),ClpSerializer.translateInput(serviceContext));
  try {
    returnObj=_classLoaderProxy.invoke(methodHandler);
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (java.util.List<com.liferay.portal.workflow.kaleo.model.KaleoInstance>)ClpSerializer.translateOutput(returnObj);
}
