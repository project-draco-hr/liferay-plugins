{
  Class oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals(EntryClp.class.getName())) {
    EntryClp oldCplModel=(EntryClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class newModelClass=Class.forName("com.liferay.chat.model.impl.EntryImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setEntryId",new Class[]{Long.TYPE});
        Long value0=new Long(oldCplModel.getEntryId());
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setCreateDate",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getCreateDate());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setFromUserId",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getFromUserId());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setToUserId",new Class[]{Long.TYPE});
        Long value3=new Long(oldCplModel.getToUserId());
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setContent",new Class[]{String.class});
        String value4=oldCplModel.getContent();
        method4.invoke(newModel,value4);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
