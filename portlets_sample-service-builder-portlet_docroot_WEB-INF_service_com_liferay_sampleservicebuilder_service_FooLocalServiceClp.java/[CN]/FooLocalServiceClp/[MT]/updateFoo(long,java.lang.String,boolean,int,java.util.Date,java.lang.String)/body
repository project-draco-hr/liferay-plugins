{
  Object paramObj0=new LongWrapper(fooId);
  Object paramObj1=ClpSerializer.translateInput(field1);
  if (field1 == null) {
    paramObj1=new NullWrapper("java.lang.String");
  }
  Object paramObj2=new BooleanWrapper(field2);
  Object paramObj3=new IntegerWrapper(field3);
  Object paramObj4=ClpSerializer.translateInput(field4);
  if (field4 == null) {
    paramObj4=new NullWrapper("java.util.Date");
  }
  Object paramObj5=ClpSerializer.translateInput(field5);
  if (field5 == null) {
    paramObj5=new NullWrapper("java.lang.String");
  }
  try {
    _classLoaderProxy.invoke("updateFoo",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.PortalException) {
      throw (com.liferay.portal.PortalException)t;
    }
    if (t instanceof com.liferay.portal.SystemException) {
      throw (com.liferay.portal.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
}
