{
  if (actionsElement == null) {
    return;
  }
  Set<Action> actions=new HashSet<Action>();
  List<Element> actionElements=actionsElement.elements("action");
  for (  Element actionElement : actionElements) {
    String name=actionElement.attributeValue("name");
    String type=actionElement.attributeValue("type");
    String language=actionElement.attributeValue("language");
    Action action=new Action(name,type,language);
    int executionOrder=GetterUtil.getInteger(actionElement.attributeValue("execution-order"));
    action.setExecutionOrder(executionOrder);
    String description=actionElement.attributeValue("description");
    action.setDescription(description);
    String script=actionElement.elementText("script");
    action.setScript(script);
    actions.add(action);
  }
  node.setActions(actions);
  Set<Notification> notifications=new HashSet<Notification>();
  List<Element> notificationElements=actionsElement.elements("notification");
  for (  Element notificationElement : notificationElements) {
    String name=notificationElement.attributeValue("name");
    String language=notificationElement.attributeValue("language");
    String type=notificationElement.attributeValue("type");
    Notification notification=new Notification(name,language,type);
    String description=notificationElement.attributeValue("description");
    notification.setDescription(description);
    Element recipientsElement=notificationElement.element("recipients");
    parseRecipients(recipientsElement,notification);
    List<Element> notificationTypeElements=notificationElement.elements("notification-type");
    for (    Element notificationTypeElement : notificationTypeElements) {
      notification.addNotificationType(notificationTypeElement.attributeValue("value"));
    }
    String template=notificationElement.elementText("template");
    notification.setTemplate(template);
    notifications.add(notification);
  }
  node.setNotifications(notifications);
}
