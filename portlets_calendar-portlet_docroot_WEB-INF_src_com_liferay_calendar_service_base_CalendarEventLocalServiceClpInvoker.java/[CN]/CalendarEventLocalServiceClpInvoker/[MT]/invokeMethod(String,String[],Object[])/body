{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return CalendarEventLocalServiceUtil.addCalendarEvent((com.liferay.calendar.model.CalendarEvent)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return CalendarEventLocalServiceUtil.createCalendarEvent(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return CalendarEventLocalServiceUtil.deleteCalendarEvent(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return CalendarEventLocalServiceUtil.deleteCalendarEvent((com.liferay.calendar.model.CalendarEvent)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return CalendarEventLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return CalendarEventLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return CalendarEventLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return CalendarEventLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return CalendarEventLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return CalendarEventLocalServiceUtil.fetchCalendarEvent(((Long)arguments[0]).longValue());
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return CalendarEventLocalServiceUtil.getCalendarEvent(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return CalendarEventLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return CalendarEventLocalServiceUtil.getCalendarEventByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return CalendarEventLocalServiceUtil.getCalendarEvents(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return CalendarEventLocalServiceUtil.getCalendarEventsCount();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return CalendarEventLocalServiceUtil.updateCalendarEvent((com.liferay.calendar.model.CalendarEvent)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return CalendarEventLocalServiceUtil.updateCalendarEvent((com.liferay.calendar.model.CalendarEvent)arguments[0],((Boolean)arguments[1]).booleanValue());
  }
  if (_methodName53.equals(name) && Arrays.deepEquals(_methodParameterTypes53,parameterTypes)) {
    return CalendarEventLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName54.equals(name) && Arrays.deepEquals(_methodParameterTypes54,parameterTypes)) {
    CalendarEventLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
  }
  if (_methodName59.equals(name) && Arrays.deepEquals(_methodParameterTypes59,parameterTypes)) {
    return CalendarEventLocalServiceUtil.addCalendarEvent(((Long)arguments[0]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[1],(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],(java.lang.String)arguments[3],((Integer)arguments[4]).intValue(),((Integer)arguments[5]).intValue(),((Integer)arguments[6]).intValue(),((Integer)arguments[7]).intValue(),((Integer)arguments[8]).intValue(),((Integer)arguments[9]).intValue(),((Integer)arguments[10]).intValue(),((Integer)arguments[11]).intValue(),((Integer)arguments[12]).intValue(),((Integer)arguments[13]).intValue(),((Integer)arguments[14]).intValue(),((Integer)arguments[15]).intValue(),((Boolean)arguments[16]).booleanValue(),(java.lang.String)arguments[17],(java.lang.String)arguments[18],((Integer)arguments[19]).intValue(),((Integer)arguments[20]).intValue(),((Integer)arguments[21]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[22]);
  }
  if (_methodName60.equals(name) && Arrays.deepEquals(_methodParameterTypes60,parameterTypes)) {
    return CalendarEventLocalServiceUtil.deleteCalendarEvent((com.liferay.calendar.model.CalendarEvent)arguments[0]);
  }
  if (_methodName61.equals(name) && Arrays.deepEquals(_methodParameterTypes61,parameterTypes)) {
    return CalendarEventLocalServiceUtil.deleteCalendarEvent(((Long)arguments[0]).longValue());
  }
  if (_methodName62.equals(name) && Arrays.deepEquals(_methodParameterTypes62,parameterTypes)) {
    return CalendarEventLocalServiceUtil.getCalendarEvent(((Long)arguments[0]).longValue());
  }
  if (_methodName63.equals(name) && Arrays.deepEquals(_methodParameterTypes63,parameterTypes)) {
    return CalendarEventLocalServiceUtil.updateCalendarEvent(((Long)arguments[0]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[1],(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],(java.lang.String)arguments[3],((Integer)arguments[4]).intValue(),((Integer)arguments[5]).intValue(),((Integer)arguments[6]).intValue(),((Integer)arguments[7]).intValue(),((Integer)arguments[8]).intValue(),((Integer)arguments[9]).intValue(),((Integer)arguments[10]).intValue(),((Integer)arguments[11]).intValue(),((Integer)arguments[12]).intValue(),((Integer)arguments[13]).intValue(),((Integer)arguments[14]).intValue(),((Integer)arguments[15]).intValue(),((Boolean)arguments[16]).booleanValue(),(java.lang.String)arguments[17],(java.lang.String)arguments[18],((Integer)arguments[19]).intValue(),((Integer)arguments[20]).intValue(),((Integer)arguments[21]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[22]);
  }
  throw new UnsupportedOperationException();
}
