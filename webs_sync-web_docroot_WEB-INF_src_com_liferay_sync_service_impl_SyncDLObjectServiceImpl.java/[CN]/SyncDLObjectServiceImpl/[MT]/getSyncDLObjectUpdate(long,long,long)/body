{
  try {
    SyncUtil.checkSyncEnabled(repositoryId);
    repositoryService.checkRepository(repositoryId);
    String[] events=null;
    if (lastAccessTime == -1) {
      events=new String[]{SyncConstants.EVENT_DELETE,SyncConstants.EVENT_TRASH};
    }
 else {
      events=new String[0];
    }
    List<SyncDLObject> syncDLObjects=syncDLObjectPersistence.findByC_M_R_NotE(companyId,lastAccessTime,repositoryId,events,0,PortletPropsValues.SYNC_PAGINATION_DELTA,new SyncDLObjectTypeComparator());
    if (syncDLObjects.isEmpty()) {
      return new SyncDLObjectUpdate(syncDLObjects,lastAccessTime);
    }
    SyncDLObject syncDLObject=syncDLObjects.get(syncDLObjects.size() - 1);
    syncDLObjects=checkSyncDLObjects(syncDLObjects);
    return new SyncDLObjectUpdate(syncDLObjects,syncDLObject.getModifiedTime());
  }
 catch (  PortalException pe) {
    throw new PortalException(SyncUtil.buildExceptionMessage(pe),pe);
  }
}
