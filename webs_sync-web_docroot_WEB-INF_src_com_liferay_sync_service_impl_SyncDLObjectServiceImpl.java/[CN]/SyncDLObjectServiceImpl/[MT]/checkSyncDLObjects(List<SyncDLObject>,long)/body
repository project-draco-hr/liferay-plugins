{
  PermissionChecker permissionChecker=getPermissionChecker();
  boolean groupAdmin=permissionChecker.isGroupAdmin(repositoryId);
  List<SyncDLObject> checkedSyncDLObjects=new ArrayList<>();
  long lastAccessTime=0;
  for (  SyncDLObject syncDLObject : syncDLObjects) {
    if (syncDLObject.getModifiedTime() > lastAccessTime) {
      lastAccessTime=syncDLObject.getModifiedTime();
    }
    if (groupAdmin) {
      checkedSyncDLObjects.add(syncDLObject);
      continue;
    }
    String event=syncDLObject.getEvent();
    if (event.equals(SyncConstants.EVENT_DELETE) || event.equals(SyncConstants.EVENT_TRASH)) {
      checkedSyncDLObjects.add(syncDLObject);
      continue;
    }
    String type=syncDLObject.getType();
    if (type.equals(SyncConstants.TYPE_FILE)) {
      if (!permissionChecker.hasPermission(syncDLObject.getRepositoryId(),DLFileEntryConstants.getClassName(),syncDLObject.getTypePK(),ActionKeys.VIEW)) {
        continue;
      }
    }
 else     if (type.equals(SyncConstants.TYPE_FOLDER)) {
      if (!permissionChecker.hasPermission(syncDLObject.getRepositoryId(),DLFolderConstants.getClassName(),syncDLObject.getTypePK(),ActionKeys.VIEW)) {
        continue;
      }
    }
 else     if (type.equals(SyncConstants.TYPE_PRIVATE_WORKING_COPY)) {
      if ((syncDLObject.getLockUserId() != permissionChecker.getUserId()) || !permissionChecker.hasPermission(syncDLObject.getRepositoryId(),DLFileEntryConstants.getClassName(),syncDLObject.getTypePK(),ActionKeys.VIEW)) {
        continue;
      }
    }
    checkedSyncDLObjects.add(syncDLObject);
  }
  return new SyncDLObjectUpdate(checkedSyncDLObjects,lastAccessTime);
}
