{
  PermissionChecker permissionChecker=getPermissionChecker();
  if (permissionChecker.isGroupAdmin(repositoryId)) {
    return syncDLObjects;
  }
  boolean hasFileModelPermission=hasModelPermission(repositoryId,DLFileEntryConstants.getClassName());
  boolean hasFolderModelPermission=hasModelPermission(repositoryId,DLFolderConstants.getClassName());
  if (hasFileModelPermission && hasFolderModelPermission) {
    return syncDLObjects;
  }
  List<Long> typePKs=new ArrayList<>();
  for (  SyncDLObject syncDLObject : syncDLObjects) {
    typePKs.add(syncDLObject.getTypePK());
  }
  Set<Long> checkedTypePKs=SetUtil.fromList(checkTypePKs(repositoryId,permissionChecker.getUserId(),typePKs));
  List<SyncDLObject> checkedSyncDLObjects=new ArrayList<>();
  for (  SyncDLObject syncDLObject : syncDLObjects) {
    String event=syncDLObject.getEvent();
    String type=syncDLObject.getType();
    if (event.equals(SyncConstants.EVENT_DELETE) || event.equals(SyncConstants.EVENT_TRASH) || (type.equals(SyncConstants.TYPE_FILE) && hasFileModelPermission)|| (type.equals(SyncConstants.TYPE_FOLDER) && hasFolderModelPermission)|| checkedTypePKs.contains(syncDLObject.getTypePK())) {
      checkedSyncDLObjects.add(syncDLObject);
    }
  }
  return checkedSyncDLObjects;
}
