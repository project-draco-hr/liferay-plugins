{
  if (Validator.isNull(className)) {
    className=CalendarResource.class.getName();
  }
  long classNameId=PortalUtil.getClassNameId(className);
  if (hasCalendarResource(classNameId,classPK)) {
    throw new DuplicateCalendarResourceException("Cannot add the same resource: " + className + " "+ classPK);
  }
  if (isGlobalResource(className)) {
    long globalUserId=getGlobalResourceUserId(className,classPK);
    if (globalUserId > 0) {
      userId=globalUserId;
    }
  }
  User user=userPersistence.findByPrimaryKey(userId);
  long groupId=serviceContext.getScopeGroupId();
  Date now=new Date();
  long calendarResourceId=counterLocalService.increment();
  CalendarResource calendarResource=calendarResourcePersistence.create(calendarResourceId);
  calendarResource.setUuid(serviceContext.getUuid());
  calendarResource.setGroupId(groupId);
  calendarResource.setCompanyId(user.getCompanyId());
  calendarResource.setUserId(user.getUserId());
  String userName=user.getFullName();
  if (user.isDefaultUser()) {
    userName=user.getScreenName();
  }
  calendarResource.setUserName(userName);
  calendarResource.setCreateDate(serviceContext.getCreateDate(now));
  calendarResource.setModifiedDate(serviceContext.getModifiedDate(now));
  calendarResource.setClassNameId(classNameId);
  calendarResource.setClassPK(classPK);
  calendarResource.setNameMap(nameMap);
  calendarResource.setDescriptionMap(descriptionMap);
  calendarResource.setActive(active);
  calendarResource.setExpandoBridgeAttributes(serviceContext);
  calendarResourcePersistence.update(calendarResource,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addCalendarResourceResources(calendarResource,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addCalendarResourceResources(calendarResource,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  return calendarResource;
}
