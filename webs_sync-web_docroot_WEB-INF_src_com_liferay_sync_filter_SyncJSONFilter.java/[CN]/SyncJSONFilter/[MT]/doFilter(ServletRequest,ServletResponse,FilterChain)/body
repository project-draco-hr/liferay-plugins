{
  String uri=(String)servletRequest.getAttribute(WebKeys.INVOKER_FILTER_URI);
  if (!uri.startsWith("/api/jsonws/sync-web.")) {
    filterChain.doFilter(servletRequest,servletResponse);
    return;
  }
  HttpServletRequest httpServletRequest=(HttpServletRequest)servletRequest;
  if (ParamUtil.get(httpServletRequest,"debug",false)) {
    filterChain.doFilter(servletRequest,servletResponse);
    return;
  }
  Throwable throwable=null;
  if (PrefsPropsUtil.getBoolean(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_SERVICES_ENABLED,PortletPropsValues.SYNC_SERVICES_ENABLED)) {
    String device=httpServletRequest.getHeader("Sync-Device");
    if (device == null) {
      throwable=new SyncServicesUnavailableException();
    }
 else     if (device.startsWith("desktop")) {
      int build=httpServletRequest.getIntHeader("Sync-Build");
      int syncClientMinBuild=PrefsPropsUtil.getInteger(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_CLIENT_DESKTOP_MIN_BUILD,PortletPropsValues.SYNC_CLIENT_DESKTOP_MIN_BUILD);
      if (syncClientMinBuild < _ABSOLUTE_DESKTOP_MINIMUM_BUILD) {
        syncClientMinBuild=_ABSOLUTE_DESKTOP_MINIMUM_BUILD;
      }
      if (build >= syncClientMinBuild) {
        filterChain.doFilter(servletRequest,servletResponse);
        return;
      }
 else {
        throwable=new SyncClientMinBuildException("Sync client does not meet minimum build " + syncClientMinBuild);
      }
    }
 else     if (device.startsWith("mobile")) {
      filterChain.doFilter(servletRequest,servletResponse);
      return;
    }
 else {
      throwable=new SyncServicesUnavailableException();
    }
  }
 else {
    throwable=new SyncServicesUnavailableException();
  }
  servletResponse.setCharacterEncoding(StringPool.UTF8);
  servletResponse.setContentType(ContentTypes.APPLICATION_JSON);
  OutputStream outputStream=servletResponse.getOutputStream();
  String json=SyncUtil.buildExceptionMessage(throwable);
  json="{\"exception\": \"" + json + "\"}";
  outputStream.write(json.getBytes(StringPool.UTF8));
  outputStream.close();
}
