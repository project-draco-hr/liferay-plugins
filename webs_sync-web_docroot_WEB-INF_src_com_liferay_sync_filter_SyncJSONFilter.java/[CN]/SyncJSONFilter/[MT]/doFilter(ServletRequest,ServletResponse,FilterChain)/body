{
  String uri=(String)servletRequest.getAttribute(WebKeys.INVOKER_FILTER_URI);
  if (!uri.startsWith("/api/jsonws/sync-web.")) {
    filterChain.doFilter(servletRequest,servletResponse);
    return;
  }
  HttpServletRequest httpServletRequest=(HttpServletRequest)servletRequest;
  Throwable throwable=null;
  if (PrefsPropsUtil.getBoolean(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_SERVICES_ENABLED,PortletPropsValues.SYNC_SERVICES_ENABLED)) {
    int build=httpServletRequest.getIntHeader("Sync-Build");
    int syncClientMinBuild=PrefsPropsUtil.getInteger(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_CLIENT_MIN_BUILD,PortletPropsValues.SYNC_CLIENT_MIN_BUILD);
    if (syncClientMinBuild < _ABSOLUTE_MINIMUM_BUILD) {
      syncClientMinBuild=_ABSOLUTE_MINIMUM_BUILD;
    }
    if ((build == -1) || (build >= syncClientMinBuild)) {
      filterChain.doFilter(servletRequest,servletResponse);
      return;
    }
 else {
      String message="Sync client does not meet minimum build " + syncClientMinBuild;
      throwable=new SyncClientMinBuildException(message);
    }
  }
 else {
    throwable=new SyncServicesUnavailableException();
  }
  servletResponse.setCharacterEncoding(StringPool.UTF8);
  servletResponse.setContentType(ContentTypes.APPLICATION_JSON);
  OutputStream outputStream=servletResponse.getOutputStream();
  String json=SyncUtil.buildExceptionMessage(throwable);
  json="{\"exception\": \"" + json + "\"}";
  outputStream.write(json.getBytes(StringPool.UTF8));
  outputStream.close();
}
