{
  Object[] finderArgs=new Object[]{userId,meetupsEntryId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_U_ME,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(4);
      query.append(_SQL_SELECT_MEETUPSREGISTRATION_WHERE);
      query.append(_FINDER_COLUMN_U_ME_USERID_2);
      query.append(_FINDER_COLUMN_U_ME_MEETUPSENTRYID_2);
      query.append(MeetupsRegistrationModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(meetupsEntryId);
      List<MeetupsRegistration> list=q.list();
      result=list;
      MeetupsRegistration meetupsRegistration=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_ME,finderArgs,list);
      }
 else {
        meetupsRegistration=list.get(0);
        cacheResult(meetupsRegistration);
        if ((meetupsRegistration.getUserId() != userId) || (meetupsRegistration.getMeetupsEntryId() != meetupsEntryId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_ME,finderArgs,meetupsRegistration);
        }
      }
      return meetupsRegistration;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_ME,finderArgs,new ArrayList<MeetupsRegistration>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (MeetupsRegistration)result;
    }
  }
}
