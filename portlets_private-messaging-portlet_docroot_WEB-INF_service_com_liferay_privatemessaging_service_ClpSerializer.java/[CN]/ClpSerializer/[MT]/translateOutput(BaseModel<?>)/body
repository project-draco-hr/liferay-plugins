{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.privatemessaging.model.impl.UserThreadImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        UserThreadClp newModel=new UserThreadClp();
        Method method0=oldModelClass.getMethod("getUserThreadId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setUserThreadId(value0);
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1);
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2);
        Method method3=oldModelClass.getMethod("getCreateDate");
        Date value3=(Date)method3.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value3);
        Method method4=oldModelClass.getMethod("getModifiedDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value4);
        Method method5=oldModelClass.getMethod("getMbThreadId");
        Long value5=(Long)method5.invoke(oldModel,(Object[])null);
        newModel.setMbThreadId(value5);
        Method method6=oldModelClass.getMethod("getTopMBMessageId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setTopMBMessageId(value6);
        Method method7=oldModelClass.getMethod("getRead");
        Boolean value7=(Boolean)method7.invoke(oldModel,(Object[])null);
        newModel.setRead(value7);
        Method method8=oldModelClass.getMethod("getDeleted");
        Boolean value8=(Boolean)method8.invoke(oldModel,(Object[])null);
        newModel.setDeleted(value8);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
