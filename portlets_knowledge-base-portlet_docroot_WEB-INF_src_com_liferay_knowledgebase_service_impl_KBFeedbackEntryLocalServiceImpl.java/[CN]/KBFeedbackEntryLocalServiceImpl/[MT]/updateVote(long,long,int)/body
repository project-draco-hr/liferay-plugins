{
  KBFeedbackEntry kbFeedbackEntry=null;
  try {
    int oldVote=0;
    Date now=new Date();
    kbFeedbackEntry=kbFeedbackEntryPersistence.findByA_U(articleId,userId);
    oldVote=kbFeedbackEntry.getVote();
    kbFeedbackEntry.setModifiedDate(now);
    kbFeedbackEntry.setVote(vote);
    kbFeedbackEntryPersistence.update(kbFeedbackEntry,false);
    KBFeedbackStats kbFeedbackStats=kbFeedbackStatsLocalService.getArticleKBFeedbackStats(articleId);
    int totalVotes=kbFeedbackStats.getTotalVotes();
    int yesVotes=kbFeedbackStats.getYesVotes();
    if ((oldVote != 1) && (vote == 1)) {
      yesVotes++;
    }
 else     if ((oldVote == 1) && (vote != 1)) {
      yesVotes--;
    }
    if ((oldVote == 0) && (vote != 0)) {
      totalVotes++;
    }
    kbFeedbackStats.setTotalVotes(totalVotes);
    kbFeedbackStats.setYesVotes(yesVotes);
    kbFeedbackStatsPersistence.update(kbFeedbackStats,false);
  }
 catch (  NoSuchFeedbackEntryException nsfee) {
    kbFeedbackEntry=addKBFeedbackEntry(articleId,userId,0,vote,StringPool.BLANK);
  }
  return kbFeedbackEntry;
}
