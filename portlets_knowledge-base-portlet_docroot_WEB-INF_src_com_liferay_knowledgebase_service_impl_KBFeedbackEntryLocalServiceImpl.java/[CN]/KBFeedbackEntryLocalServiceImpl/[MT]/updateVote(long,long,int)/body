{
  KBFeedbackEntry feedbackEntry=null;
  try {
    int oldVote=0;
    Date now=new Date();
    feedbackEntry=kbFeedbackEntryPersistence.findByA_U(articleResourcePrimKey,userId);
    oldVote=feedbackEntry.getVote();
    feedbackEntry.setModifiedDate(now);
    feedbackEntry.setVote(vote);
    kbFeedbackEntryPersistence.update(feedbackEntry,false);
    KBFeedbackStats feedbackStats=kbFeedbackStatsLocalService.getArticleFeedbackStats(articleResourcePrimKey);
    int totalVotes=feedbackStats.getTotalVotes();
    int yesVotes=feedbackStats.getYesVotes();
    if ((oldVote != 1) && (vote == 1)) {
      yesVotes++;
    }
 else     if ((oldVote == 1) && (vote != 1)) {
      yesVotes--;
    }
    if ((oldVote == 0) && (vote != 0)) {
      totalVotes++;
    }
    feedbackStats.setTotalVotes(totalVotes);
    feedbackStats.setYesVotes(yesVotes);
    kbFeedbackStatsPersistence.update(feedbackStats,false);
  }
 catch (  NoSuchFeedbackEntryException nsfee) {
    feedbackEntry=addFeedbackEntry(articleResourcePrimKey,userId,0,vote,StringPool.BLANK);
  }
  return feedbackEntry;
}
