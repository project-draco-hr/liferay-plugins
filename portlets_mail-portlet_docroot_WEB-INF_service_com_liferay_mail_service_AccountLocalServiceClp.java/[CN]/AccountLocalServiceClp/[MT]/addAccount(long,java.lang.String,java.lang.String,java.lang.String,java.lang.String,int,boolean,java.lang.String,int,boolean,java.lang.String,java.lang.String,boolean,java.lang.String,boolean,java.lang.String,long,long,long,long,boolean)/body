{
  Object paramObj0=new LongWrapper(userId);
  Object paramObj1=ClpSerializer.translateInput(address);
  if (address == null) {
    paramObj1=new NullWrapper("java.lang.String");
  }
  Object paramObj2=ClpSerializer.translateInput(personalName);
  if (personalName == null) {
    paramObj2=new NullWrapper("java.lang.String");
  }
  Object paramObj3=ClpSerializer.translateInput(protocol);
  if (protocol == null) {
    paramObj3=new NullWrapper("java.lang.String");
  }
  Object paramObj4=ClpSerializer.translateInput(incomingHostName);
  if (incomingHostName == null) {
    paramObj4=new NullWrapper("java.lang.String");
  }
  Object paramObj5=new IntegerWrapper(incomingPort);
  Object paramObj6=new BooleanWrapper(incomingSecure);
  Object paramObj7=ClpSerializer.translateInput(outgoingHostName);
  if (outgoingHostName == null) {
    paramObj7=new NullWrapper("java.lang.String");
  }
  Object paramObj8=new IntegerWrapper(outgoingPort);
  Object paramObj9=new BooleanWrapper(outgoingSecure);
  Object paramObj10=ClpSerializer.translateInput(login);
  if (login == null) {
    paramObj10=new NullWrapper("java.lang.String");
  }
  Object paramObj11=ClpSerializer.translateInput(password);
  if (password == null) {
    paramObj11=new NullWrapper("java.lang.String");
  }
  Object paramObj12=new BooleanWrapper(savePassword);
  Object paramObj13=ClpSerializer.translateInput(signature);
  if (signature == null) {
    paramObj13=new NullWrapper("java.lang.String");
  }
  Object paramObj14=new BooleanWrapper(useSignature);
  Object paramObj15=ClpSerializer.translateInput(folderPrefix);
  if (folderPrefix == null) {
    paramObj15=new NullWrapper("java.lang.String");
  }
  Object paramObj16=new LongWrapper(inboxFolderId);
  Object paramObj17=new LongWrapper(draftFolderId);
  Object paramObj18=new LongWrapper(sentFolderId);
  Object paramObj19=new LongWrapper(trashFolderId);
  Object paramObj20=new BooleanWrapper(defaultSender);
  Object returnObj=null;
  try {
    returnObj=_classLoaderProxy.invoke("addAccount",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17,paramObj18,paramObj19,paramObj20});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.kernel.exception.PortalException) {
      throw (com.liferay.portal.kernel.exception.PortalException)t;
    }
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (com.liferay.mail.model.Account)ClpSerializer.translateOutput(returnObj);
}
