{
  MBMessage message=MBMessageLocalServiceUtil.getMessage(messageId);
  int oldStatus=message.getStatus();
  message=super.updateStatus(userId,messageId,status,serviceContext,workflowContext);
  if ((status != WorkflowConstants.STATUS_APPROVED) || (oldStatus == WorkflowConstants.STATUS_APPROVED) || (oldStatus == WorkflowConstants.STATUS_IN_TRASH)) {
    return message;
  }
  long siteGroupId=PortalUtil.getSiteGroupId(message.getGroupId());
  if (!MentionsUtil.isMentionsEnabled(siteGroupId)) {
    return message;
  }
  MentionsNotifier mentionsNotifier=new MentionsNotifier();
  String contentURL=(String)serviceContext.getAttribute("contentURL");
  if (Validator.isNull(contentURL)) {
    serviceContext.setAttribute("contentURL",workflowContext.get("url"));
  }
  String content=message.getBody();
  if (message.isFormatBBCode()) {
    content=BBCodeTranslatorUtil.getHTML(content);
  }
  content=HtmlUtil.extractText(content);
  String subject=ContentUtil.get(PortletPropsValues.MB_DISCUSSION_EMAIL_SUBJECT);
  String body=ContentUtil.get(PortletPropsValues.MB_DISCUSSION_EMAIL_BODY);
  if (!message.isDiscussion()) {
    subject=ContentUtil.get(PortletPropsValues.ASSET_MENTION_EMAIL_SUBJECT);
    body=ContentUtil.get(PortletPropsValues.ASSET_MENTION_EMAIL_BODY);
  }
  mentionsNotifier.notify(message.getUserId(),message.getGroupId(),content,message.getModelClassName(),message.getMessageId(),subject,body,serviceContext);
  return message;
}
