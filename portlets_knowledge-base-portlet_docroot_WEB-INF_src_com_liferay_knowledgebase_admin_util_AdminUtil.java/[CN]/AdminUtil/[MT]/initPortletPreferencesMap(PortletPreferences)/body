{
  Map<String,Object> defaultPreferences=new HashMap<String,Object>();
  defaultPreferences.put("articlesDelta",5);
  defaultPreferences.put("articlesDisplayStyle","full-content");
  defaultPreferences.put("childArticlesDisplayStyle","abstract");
  defaultPreferences.put("enableArticleDescription",false);
  defaultPreferences.put("enableArticleAssetCategories",true);
  defaultPreferences.put("enableArticleAssetTags",true);
  defaultPreferences.put("enableArticleRatings",false);
  defaultPreferences.put("enableArticleComments",true);
  defaultPreferences.put("templatesDelta",5);
  defaultPreferences.put("templatesDisplayStyle","full-content");
  defaultPreferences.put("enableTemplateDescription",false);
  defaultPreferences.put("enableTemplateComments",true);
  defaultPreferences.put("rssDelta",SearchContainer.DEFAULT_DELTA);
  defaultPreferences.put("rssDisplayStyle",RSSUtil.DISPLAY_STYLE_FULL_CONTENT);
  defaultPreferences.put("rssFormat","atom10");
  Map<String,String> preferencesMap=new HashMap<String,String>();
  for (  Map.Entry<String,Object> entry : defaultPreferences.entrySet()) {
    String key=entry.getKey();
    Object value=entry.getValue();
    if (value instanceof Object[]) {
      String[] values=ArrayUtil.toStringArray((Object[])value);
      value=StringUtil.merge(preferences.getValues(key,values));
    }
 else {
      value=preferences.getValue(key,String.valueOf(value));
    }
    preferencesMap.put(key,String.valueOf(value));
  }
  return Collections.unmodifiableMap(preferencesMap);
}
