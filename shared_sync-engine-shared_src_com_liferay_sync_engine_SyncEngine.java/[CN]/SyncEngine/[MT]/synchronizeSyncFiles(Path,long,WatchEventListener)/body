{
  long startTime=System.currentTimeMillis();
  Files.walkFileTree(filePath,new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult preVisitDirectory(    Path filePath,    BasicFileAttributes basicFileAttributes) throws IOException {
      SyncFile syncFile=SyncFileService.fetchSyncFile(FilePathNameUtil.getFilePathName(filePath),syncAccountId);
      if (syncFile != null) {
        syncFile.setLocalSyncTime(System.currentTimeMillis());
        SyncFileService.update(syncFile);
      }
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult visitFile(    Path filePath,    BasicFileAttributes basicFileAttributes){
      SyncFile syncFile=SyncFileService.fetchSyncFile(FilePathNameUtil.getFilePathName(filePath),syncAccountId);
      if (syncFile != null) {
        syncFile.setLocalSyncTime(System.currentTimeMillis());
        SyncFileService.update(syncFile);
      }
      return FileVisitResult.CONTINUE;
    }
  }
);
  List<SyncFile> syncFiles=SyncFileService.findSyncFiles(FilePathNameUtil.getFilePathName(filePath),startTime,syncAccountId);
  for (  SyncFile syncFile : syncFiles) {
    watchEventListener.watchEvent(SyncWatchEvent.EVENT_TYPE_DELETE,java.nio.file.Paths.get(syncFile.getFilePathName()));
  }
}
