{
  String twitterScreenName=user.getContact().getTwitterSn();
  Date now=new Date();
  if (Validator.isNull(twitterScreenName)) {
    throw new FeedTwitterScreenNameException();
  }
  Feed feed=feedPersistence.fetchByTwitterScreenName(twitterScreenName);
  JSONArray jsonArray=null;
  if (feed == null) {
    jsonArray=getUserTimelineJSONArray(twitterScreenName,0);
    long feedId=CounterLocalServiceUtil.increment();
    feed=feedPersistence.create(feedId);
    feed.setTwitterScreenName(twitterScreenName);
    feed.setCreateDate(now);
    feed.setModifiedDate(now);
    feedPersistence.update(feed,false);
    if (jsonArray == null) {
      return;
    }
  }
  if (jsonArray == null) {
    jsonArray=getUserTimelineJSONArray(twitterScreenName,feed.getLastStatusId());
  }
  if ((jsonArray == null) || (jsonArray.length() == 0)) {
    return;
  }
  for (int i=0; i < jsonArray.length(); i++) {
    JSONObject statusJSON=jsonArray.optJSONObject(i);
    SimpleDateFormat sdf=new SimpleDateFormat("EEE MMM d hh:mm:ss Z yyyy");
    Date createDate=null;
    try {
      createDate=sdf.parse(statusJSON.optString("created_at"));
    }
 catch (    ParseException pe) {
      throw new SystemException(pe);
    }
    long statusId=statusJSON.optLong("id");
    String text=statusJSON.optString("text");
    if (feed.getTwitterUserId() <= 0) {
      JSONObject userJSON=statusJSON.optJSONObject("user");
      feed.setTwitterUserId(userJSON.optLong("id"));
    }
    if (feed.getLastStatusId() < statusId) {
      feed.setLastStatusId(statusId);
    }
    JSONObject extraData=new JSONObject();
    JSONUtil.put(extraData,"text",text);
    SocialActivityLocalServiceUtil.addActivity(user.getUserId(),0,createDate,Feed.class.getName(),statusId,TwitterActivityKeys.ADD_STATUS,extraData.toString(),0);
  }
  feed.setModifiedDate(now);
  feedPersistence.update(feed,false);
}
