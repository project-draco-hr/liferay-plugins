{
  Map<Long,Set<String>> semanticsmap=new HashMap();
  Set<String> semanticsset1=new TreeSet();
  semanticsset1.add(ontologyURI1);
  semanticsset1.add(ontologyURI2);
  semanticsmap.put(group1.getPrimaryKey(),semanticsset1);
  Set<String> semanticsset2=new TreeSet();
  semanticsset2.add(ontologyURI1);
  semanticsmap.put(group2.getPrimaryKey(),semanticsset2);
  Set<String> semanticsset3=new TreeSet();
  semanticsset3.add(ontologyURI2);
  semanticsmap.put(group3.getPrimaryKey(),semanticsset3);
  updateCommunityWithSemantics(semanticsmap);
  Set<Long> communityIds=new TreeSet();
  communityIds.add(group1.getPrimaryKey());
  communityIds.add(group2.getPrimaryKey());
  communityIds.add(group3.getPrimaryKey());
  Map<Long,Set<Semantics>> commSemantics=CommunityLocalServiceUtil.getAppliedSemantics(communityIds);
  Set<Map.Entry<Long,Set<Semantics>>> entries=commSemantics.entrySet();
  for (  Map.Entry<Long,Set<Semantics>> entry : entries) {
    long id=entry.getKey();
    Set<Semantics> appliedSemantics=entry.getValue();
    assertEquals(false,appliedSemantics.isEmpty());
  }
  Set<Community> relatedCommunities=CommunityLocalServiceUtil.getRelatedCommunitiesByAppliedSemantics(new Long(group1.getPrimaryKey()));
  assertEquals(false,relatedCommunities.isEmpty());
  relatedCommunities=CommunityLocalServiceUtil.getRelatedCommunitiesByAppliedSemantics(new Long(group2.getPrimaryKey()));
  assertEquals(false,relatedCommunities.isEmpty());
  relatedCommunities=CommunityLocalServiceUtil.getRelatedCommunitiesByAppliedSemantics(new Long(group3.getPrimaryKey()));
  assertEquals(false,relatedCommunities.isEmpty());
  semanticsmap.put(group1.getPrimaryKey(),null);
  semanticsmap.put(group2.getPrimaryKey(),null);
  semanticsmap.put(group3.getPrimaryKey(),null);
  updateCommunityWithSemantics(semanticsmap);
  Set<Community> comm=CommunityLocalServiceUtil.getAllCommunities();
  assertNull(comm);
}
