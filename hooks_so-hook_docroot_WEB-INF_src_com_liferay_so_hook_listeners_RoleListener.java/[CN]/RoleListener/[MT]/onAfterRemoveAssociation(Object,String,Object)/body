{
  try {
    Role role=RoleLocalServiceUtil.getRole((Long)classPK);
    String name=role.getName();
    if (!name.equals(RoleConstants.SOCIAL_OFFICE_USER)) {
      return;
    }
    if (!associationClassName.equals(Group.class.getName())) {
      return;
    }
    Group group=GroupLocalServiceUtil.getGroup((Long)associationClassPK);
    List<User> users=null;
    String className=group.getClassName();
    if (className.equals(UserGroup.class.getName())) {
      users=UserLocalServiceUtil.getUserGroupUsers(group.getClassPK());
    }
 else     if (className.equals(Organization.class.getName())) {
      users=UserLocalServiceUtil.getOrganizationUsers(group.getClassPK());
    }
 else     if (className.equals(Group.class.getName())) {
      users=UserLocalServiceUtil.getGroupUsers(group.getClassPK());
    }
    if (users == null) {
      return;
    }
    for (    User user : users) {
      Group userGroup=user.getGroup();
      if (!SocialOfficeServiceUtil.isSocialOfficeGroup(userGroup.getGroupId())) {
        continue;
      }
      FinderCacheUtil.clearCache(_MAPPING_TABLE_USERS_ROLES_NAME);
      if (UserLocalServiceUtil.hasRoleUser(user.getCompanyId(),RoleConstants.SOCIAL_OFFICE_USER,user.getUserId(),true)) {
        continue;
      }
      LayoutSetPrototypeUtil.removeLayoutSetPrototype(userGroup,false,SocialOfficeConstants.LAYOUT_SET_PROTOTYPE_KEY_USER_PUBLIC);
      LayoutSetPrototypeUtil.removeLayoutSetPrototype(userGroup,true,SocialOfficeConstants.LAYOUT_SET_PROTOTYPE_KEY_USER_PRIVATE);
      SocialOfficeUtil.disableSocialOffice(userGroup);
    }
  }
 catch (  Exception e) {
    throw new ModelListenerException(e);
  }
}
