{
  boolean directory=ParamUtil.getBoolean(resourceRequest,"directory");
  int end=ParamUtil.getInteger(resourceRequest,"end",10);
  String keywords=DAOParamUtil.getLike(resourceRequest,"keywords");
  int maxResultSize=ParamUtil.getInteger(resourceRequest,"maxResultSize",10);
  String searchTab=ParamUtil.getString(resourceRequest,"searchTab");
  int start=ParamUtil.getInteger(resourceRequest,"start");
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  JSONObject optionsJSONObject=JSONFactoryUtil.createJSONObject();
  optionsJSONObject.put("directory",directory);
  optionsJSONObject.put("end",end);
  optionsJSONObject.put("keywords",keywords);
  optionsJSONObject.put("maxResultSize",maxResultSize);
  optionsJSONObject.put("start",start);
  jsonObject.put("options",optionsJSONObject);
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  List<Group> groups=null;
  int groupsCount=0;
  if (searchTab.equals("my-sites")) {
    groups=SitesUtil.getVisibleSites(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,true,start,end);
    groupsCount=SitesUtil.getVisibleSitesCount(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,true);
  }
 else   if (searchTab.equals("my-favorites")) {
    groups=SitesUtil.getFavoriteSitesGroups(themeDisplay.getUserId(),keywords,0,end);
    groupsCount=SitesUtil.getFavoriteSitesGroupsCount(themeDisplay.getUserId(),keywords);
  }
 else {
    groups=SitesUtil.getVisibleSites(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,false,start,end);
    groupsCount=SitesUtil.getVisibleSitesCount(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,false);
  }
  jsonObject.put("count",groupsCount);
  LiferayPortletResponse liferayPortletResponse=(LiferayPortletResponse)resourceResponse;
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  for (  Group group : groups) {
    JSONObject groupJSONObject=JSONFactoryUtil.createJSONObject();
    groupJSONObject.put("description",group.getDescription());
    groupJSONObject.put("name",group.getDescriptiveName(themeDisplay.getLocale()));
    boolean member=GroupLocalServiceUtil.hasUserGroup(themeDisplay.getUserId(),group.getGroupId());
    if ((group.hasPrivateLayouts() && member) || group.hasPublicLayouts()) {
      PortletURL portletURL=liferayPortletResponse.createActionURL(PortletKeys.SITE_REDIRECTOR);
      portletURL.setParameter("struts_action","/my_sites/view");
      portletURL.setParameter("groupId",String.valueOf(group.getGroupId()));
      portletURL.setParameter("privateLayout",String.valueOf(!group.hasPublicLayouts()));
      portletURL.setWindowState(WindowState.NORMAL);
      groupJSONObject.put("url",portletURL.toString());
    }
    boolean socialOfficeGroup=SocialOfficeServiceUtil.isSocialOfficeGroup(group.getGroupId());
    groupJSONObject.put("socialOfficeGroup",socialOfficeGroup);
    PortletURL siteAssignmentsPortletURL=liferayPortletResponse.createActionURL(PortletKeys.SITE_MEMBERSHIPS_ADMIN);
    siteAssignmentsPortletURL.setParameter("struts_action","/sites_admin/edit_site_assignments");
    siteAssignmentsPortletURL.setParameter(Constants.CMD,"group_users");
    siteAssignmentsPortletURL.setParameter("redirect",themeDisplay.getURLCurrent());
    siteAssignmentsPortletURL.setParameter("groupId",String.valueOf(group.getGroupId()));
    siteAssignmentsPortletURL.setWindowState(WindowState.NORMAL);
    PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
    if (!member && (group.getType() == GroupConstants.TYPE_SITE_OPEN)) {
      siteAssignmentsPortletURL.setParameter("addUserIds",String.valueOf(themeDisplay.getUserId()));
      groupJSONObject.put("joinUrl",siteAssignmentsPortletURL.toString());
    }
 else     if (!member && (group.getType() == GroupConstants.TYPE_SITE_RESTRICTED)) {
      if (!MembershipRequestLocalServiceUtil.hasMembershipRequest(themeDisplay.getUserId(),group.getGroupId(),MembershipRequestConstants.STATUS_PENDING)) {
        PortletURL membershipRequestURL=liferayPortletResponse.createActionURL(PortletKeys.SITES_ADMIN);
        membershipRequestURL.setParameter("struts_action","/sites_admin/post_membership_request");
        membershipRequestURL.setParameter("redirect",themeDisplay.getURLCurrent());
        membershipRequestURL.setParameter("groupId",String.valueOf(group.getGroupId()));
        User user=UserLocalServiceUtil.getUser(themeDisplay.getUserId());
        String comments=LanguageUtil.format(themeDisplay.getLocale(),"x-wishes-to-join-x",new Object[]{user.getFullName(),group.getDescriptiveName()});
        membershipRequestURL.setParameter("comments",comments);
        membershipRequestURL.setWindowState(WindowState.NORMAL);
        groupJSONObject.put("requestUrl",membershipRequestURL.toString());
      }
 else {
        groupJSONObject.put("membershipRequested",true);
      }
    }
 else     if (GroupLocalServiceUtil.hasUserGroup(themeDisplay.getUserId(),group.getGroupId())) {
      siteAssignmentsPortletURL.setParameter("removeUserIds",String.valueOf(themeDisplay.getUserId()));
      if ((group.getType() != GroupConstants.TYPE_SITE_PRIVATE) || GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.ASSIGN_MEMBERS)) {
        groupJSONObject.put("leaveUrl",siteAssignmentsPortletURL.toString());
      }
    }
    if (GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.DELETE)) {
      PortletURL deletePortletURL=liferayPortletResponse.createActionURL(PortletKeys.SITES_ADMIN);
      deletePortletURL.setWindowState(WindowState.NORMAL);
      deletePortletURL.setParameter("struts_action","/sites_admin/edit_site");
      deletePortletURL.setParameter(Constants.CMD,Constants.DELETE);
      deletePortletURL.setParameter("redirect",themeDisplay.getURLCurrent());
      deletePortletURL.setParameter("groupId",String.valueOf(group.getGroupId()));
      groupJSONObject.put("deleteURL",deletePortletURL.toString());
    }
    PortletURL favoritePortletURL=resourceResponse.createActionURL();
    favoritePortletURL.setWindowState(WindowState.NORMAL);
    favoritePortletURL.setParameter(ActionRequest.ACTION_NAME,"updateFavorites");
    favoritePortletURL.setParameter("redirect",themeDisplay.getURLCurrent());
    favoritePortletURL.setParameter("groupId",String.valueOf(group.getGroupId()));
    if (!FavoriteSiteLocalServiceUtil.isFavoriteSite(themeDisplay.getUserId(),group.getGroupId())) {
      favoritePortletURL.setParameter(Constants.CMD,Constants.ADD);
      groupJSONObject.put("favoriteURL",favoritePortletURL.toString());
    }
 else {
      favoritePortletURL.setParameter(Constants.CMD,Constants.DELETE);
      groupJSONObject.put("unfavoriteURL",favoritePortletURL.toString());
    }
    jsonArray.put(groupJSONObject);
  }
  jsonObject.put("sites",jsonArray);
  writeJSON(resourceRequest,resourceResponse,jsonObject);
}
