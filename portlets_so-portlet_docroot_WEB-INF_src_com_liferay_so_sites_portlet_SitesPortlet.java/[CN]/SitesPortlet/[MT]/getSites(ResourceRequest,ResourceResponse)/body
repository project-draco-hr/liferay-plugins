{
  boolean directory=ParamUtil.getBoolean(resourceRequest,"directory");
  int end=ParamUtil.getInteger(resourceRequest,"end");
  String keywords=DAOParamUtil.getLike(resourceRequest,"keywords");
  int maxResultSize=ParamUtil.getInteger(resourceRequest,"maxResultSize",10);
  String name=ParamUtil.getString(resourceRequest,"keywords");
  String searchTab=ParamUtil.getString(resourceRequest,"searchTab");
  int start=ParamUtil.getInteger(resourceRequest,"start");
  boolean userGroups=ParamUtil.getBoolean(resourceRequest,"userGroups");
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  JSONObject optionsJSONObject=JSONFactoryUtil.createJSONObject();
  optionsJSONObject.put("directory",directory);
  optionsJSONObject.put("end",end);
  optionsJSONObject.put("keywords",keywords);
  optionsJSONObject.put("maxResultSize",maxResultSize);
  optionsJSONObject.put("start",start);
  optionsJSONObject.put("userGroups",userGroups);
  jsonObject.put("options",optionsJSONObject);
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  List<Group> groups=null;
  int groupsCount=0;
  if (directory) {
    LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
    if (userGroups) {
      params.put("usersGroups",themeDisplay.getUserId());
    }
 else {
      List<Integer> types=new ArrayList<Integer>();
      types.add(GroupConstants.TYPE_SITE_OPEN);
      types.add(GroupConstants.TYPE_SITE_RESTRICTED);
      params.put("types",types);
    }
    groups=GroupLocalServiceUtil.search(themeDisplay.getCompanyId(),keywords,null,params,start,end,new GroupNameComparator(true));
    groupsCount=GroupLocalServiceUtil.searchCount(themeDisplay.getCompanyId(),keywords,null,params);
  }
 else {
    if (searchTab.equals("my-favorites")) {
      groups=SitesUtil.getStarredSites(themeDisplay.getUserId(),name);
      groupsCount=groups.size();
    }
 else     if (searchTab.equals("my-sites")) {
      groups=SitesUtil.getVisibleSites(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,true,maxResultSize);
      groupsCount=SitesUtil.getVisibleSitesCount(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,true);
    }
 else {
      groups=SitesUtil.getVisibleSites(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,false,maxResultSize);
      groupsCount=SitesUtil.getVisibleSitesCount(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords,false);
    }
  }
  jsonObject.put("count",groupsCount);
  LiferayPortletResponse liferayPortletResponse=(LiferayPortletResponse)resourceResponse;
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  for (  Group group : groups) {
    JSONObject groupJSONObject=JSONFactoryUtil.createJSONObject();
    groupJSONObject.put("description",group.getDescription());
    groupJSONObject.put("name",group.getDescriptiveName());
    if (group.hasPrivateLayouts() || group.hasPublicLayouts()) {
      Layout layout=themeDisplay.getLayout();
      PortletURL portletURL=liferayPortletResponse.createActionURL(PortletKeys.MY_SITES);
      portletURL.setWindowState(WindowState.NORMAL);
      portletURL.setParameter("struts_action","/my_sites/view");
      portletURL.setParameter("groupId",String.valueOf(group.getGroupId()));
      portletURL.setParameter("privateLayout",String.valueOf(!group.hasPublicLayouts()));
      groupJSONObject.put("url",portletURL.toString());
    }
    ExpandoBridge expandoBridge=group.getExpandoBridge();
    boolean socialOfficeEnabled=GetterUtil.getBoolean(expandoBridge.getAttribute("socialOfficeEnabled"));
    groupJSONObject.put("socialOfficeEnabled",socialOfficeEnabled);
    Layout layout=themeDisplay.getLayout();
    PortletURL siteAssignmentsPortletURL=liferayPortletResponse.createActionURL(PortletKeys.SITES_ADMIN);
    siteAssignmentsPortletURL.setWindowState(WindowState.NORMAL);
    siteAssignmentsPortletURL.setParameter("struts_action","/sites_admin/edit_site_assignments");
    siteAssignmentsPortletURL.setParameter(Constants.CMD,"group_users");
    siteAssignmentsPortletURL.setParameter("redirect",themeDisplay.getURLCurrent());
    siteAssignmentsPortletURL.setParameter("groupId",String.valueOf(group.getGroupId()));
    if (!GroupLocalServiceUtil.hasUserGroup(themeDisplay.getUserId(),group.getGroupId()) && (group.getType() == GroupConstants.TYPE_SITE_OPEN)) {
      siteAssignmentsPortletURL.setParameter("addUserIds",String.valueOf(themeDisplay.getUserId()));
      groupJSONObject.put("joinUrl",siteAssignmentsPortletURL.toString());
    }
 else     if (GroupLocalServiceUtil.hasUserGroup(themeDisplay.getUserId(),group.getGroupId())) {
      siteAssignmentsPortletURL.setParameter("removeUserIds",String.valueOf(themeDisplay.getUserId()));
      groupJSONObject.put("leaveUrl",siteAssignmentsPortletURL.toString());
    }
    if (GroupPermissionUtil.contains(themeDisplay.getPermissionChecker(),group.getGroupId(),ActionKeys.DELETE)) {
      PortletURL deletePortletURL=liferayPortletResponse.createActionURL(PortletKeys.SITES_ADMIN);
      deletePortletURL.setWindowState(WindowState.NORMAL);
      deletePortletURL.setParameter("struts_action","/sites_admin/edit_site");
      deletePortletURL.setParameter(Constants.CMD,Constants.DELETE);
      deletePortletURL.setParameter("redirect",themeDisplay.getURLCurrent());
      deletePortletURL.setParameter("groupId",String.valueOf(group.getGroupId()));
      groupJSONObject.put("deleteURL",deletePortletURL.toString());
    }
    PortletURL starPortletURL=resourceResponse.createActionURL();
    starPortletURL.setWindowState(WindowState.NORMAL);
    starPortletURL.setParameter(ActionRequest.ACTION_NAME,"updateStars");
    starPortletURL.setParameter("redirect",themeDisplay.getURLCurrent());
    starPortletURL.setParameter("starredGroupId",String.valueOf(group.getGroupId()));
    String starredGroupIds=SitesUtil.getStarredGroupIds(themeDisplay.getUserId());
    if (!StringUtil.contains(starredGroupIds,String.valueOf(group.getGroupId()))) {
      starPortletURL.setParameter(Constants.CMD,Constants.ADD);
      groupJSONObject.put("starURL",starPortletURL.toString());
    }
 else {
      starPortletURL.setParameter(Constants.CMD,Constants.DELETE);
      groupJSONObject.put("unstarURL",starPortletURL.toString());
    }
    jsonArray.put(groupJSONObject);
  }
  jsonObject.put("sites",jsonArray);
  writeJSON(resourceRequest,resourceResponse,jsonObject);
}
