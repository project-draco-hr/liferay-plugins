{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  Map<Locale,String> nameMap=new HashMap<>();
  String name=ParamUtil.getString(actionRequest,"name");
  nameMap.put(themeDisplay.getLocale(),name);
  Map<Locale,String> descriptionMap=new HashMap<>();
  String description=ParamUtil.getString(actionRequest,"description");
  descriptionMap.put(themeDisplay.getLocale(),description);
  long layoutSetPrototypeId=ParamUtil.getLong(actionRequest,"layoutSetPrototypeId");
  int type=ParamUtil.getInteger(actionRequest,"type");
  boolean privateLayout=false;
  if (type == GroupConstants.TYPE_SITE_PRIVATE_RESTRICTED) {
    type=GroupConstants.TYPE_SITE_RESTRICTED;
    privateLayout=true;
  }
 else   if (type == GroupConstants.TYPE_SITE_PUBLIC_RESTRICTED) {
    type=GroupConstants.TYPE_SITE_RESTRICTED;
  }
 else   if (type == GroupConstants.TYPE_SITE_PRIVATE) {
    privateLayout=true;
  }
  ServiceContext serviceContext=ServiceContextFactory.getInstance(Group.class.getName(),actionRequest);
  Group group=GroupServiceUtil.addGroup(GroupConstants.DEFAULT_PARENT_GROUP_ID,GroupConstants.DEFAULT_LIVE_GROUP_ID,nameMap,descriptionMap,type,true,GroupConstants.DEFAULT_MEMBERSHIP_RESTRICTION,StringPool.BLANK,true,true,serviceContext);
  long publicLayoutSetPrototypeId=0;
  long privateLayoutSetPrototypeId=0;
  if (privateLayout) {
    privateLayoutSetPrototypeId=layoutSetPrototypeId;
  }
 else {
    publicLayoutSetPrototypeId=layoutSetPrototypeId;
  }
  PortalClassInvoker.invoke(_updateLayoutSetPrototypesMethodKey,group,publicLayoutSetPrototypeId,privateLayoutSetPrototypeId,!privateLayout,privateLayout);
  LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(group.getGroupId(),privateLayout);
  PortalClassInvoker.invoke(_mergeLayoutSetPrototypeLayoutsMethodKey,group,layoutSet);
  long[] deleteLayoutIds=getLongArray(actionRequest,"deleteLayoutIds");
  List<Layout> layouts=new ArrayList<>(deleteLayoutIds.length);
  for (  long deleteLayoutId : deleteLayoutIds) {
    Layout layout=LayoutLocalServiceUtil.getLayout(group.getGroupId(),privateLayout,deleteLayoutId);
    layouts.add(layout);
  }
  for (  Layout layout : layouts) {
    LayoutLocalServiceUtil.deleteLayout(layout,true,serviceContext);
  }
  setCustomJspServletContextName(group);
}
