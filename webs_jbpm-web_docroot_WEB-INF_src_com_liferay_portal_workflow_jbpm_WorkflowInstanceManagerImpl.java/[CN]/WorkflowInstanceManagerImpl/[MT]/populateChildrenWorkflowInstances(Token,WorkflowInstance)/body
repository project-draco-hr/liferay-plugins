{
  Stack<ObjectValuePair<Token,WorkflowInstance>> objectValuePairs=new Stack<ObjectValuePair<Token,WorkflowInstance>>();
  objectValuePairs.push(new ObjectValuePair<Token,WorkflowInstance>(token,workflowInstance));
  while (!objectValuePairs.isEmpty()) {
    ObjectValuePair<Token,WorkflowInstance> objectValuePair=objectValuePairs.pop();
    Token parentToken=objectValuePair.getKey();
    WorkflowInstance parentWorkflowInstance=objectValuePair.getValue();
    Map<String,Token> children=parentToken.getChildren();
    if (children == null) {
      continue;
    }
    for (    Token childToken : children.values()) {
      WorkflowInstance childWorkflowInstance=WorkflowObjectUtil.createWorkflowInstance(childToken);
      parentWorkflowInstance.addChildWorkflowInstance(childWorkflowInstance);
      childWorkflowInstance.setParentWorkflowInstance(parentWorkflowInstance);
      objectValuePairs.push(new ObjectValuePair<Token,WorkflowInstance>(childToken,childWorkflowInstance));
    }
  }
  Collections.sort(workflowInstance.getChildrenWorkflowInstances(),new WorkflowInstanceStateComparator(true));
}
