{
  try {
    List<WorkflowInstance> workflowInstances=null;
    if (onlyOpen) {
      workflowInstances=WorkflowInstanceUtil.findByC_P_R_F(mutableProcessInstance.getTenantId(),mutableProcessInstance.getPrimaryKey(),cause,false);
    }
 else {
      workflowInstances=WorkflowInstanceUtil.findByC_P_R(mutableProcessInstance.getTenantId(),mutableProcessInstance.getPrimaryKey(),cause);
    }
    return (List<? extends MutableProcessInstance>)WorkflowEntityBridgeUtil.wrapWorkflowInstances(workflowInstances,(WorkflowInstanceBridge)mutableProcessInstance,false);
  }
 catch (  Exception e) {
    throw new ProcessException(e.getMessage(),e);
  }
}
