{
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  Object[] commentsClassNameAndClassPK=ActivitiesUtil.getCommentsClassNameAndClassPK(activitySet);
  String className=(String)commentsClassNameAndClassPK[0];
  long classPK=(Long)commentsClassNameAndClassPK[1];
  MBMessageDisplay mbMessageDisplay=MBMessageLocalServiceUtil.getDiscussionMessageDisplay(themeDisplay.getUserId(),activitySet.getGroupId(),className,classPK,WorkflowConstants.STATUS_APPROVED);
  MBTreeWalker mbTeeWalker=mbMessageDisplay.getTreeWalker();
  List<MBMessage> mbMessages=mbTeeWalker.getMessages();
  mbMessages=ListUtil.sort(mbMessages,new MessageCreateDateComparator(true));
  for (int i=1; i < mbMessages.size(); i++) {
    MBMessage mbMessage=mbMessages.get(i);
    JSONObject messageJSONObject=getJSONObject(mbMessage.getMessageId(),mbMessage.getBody(),mbMessage.getModifiedDate(),mbMessage.getUserId(),mbMessage.getUserName(),themeDisplay);
    jsonArray.put(messageJSONObject);
  }
  jsonObject.put("comments",jsonArray);
  writeJSON(resourceRequest,resourceResponse,jsonObject);
}
