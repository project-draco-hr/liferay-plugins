{
  Method method=getMethod(actionPath);
  if (method == null) {
    if (log.isDebugEnabled()) {
      log.debug("No method found for action " + actionPath);
    }
  }
  if (!hasPermission()) {
    renderError("you-do-not-have-permission-to-access-the-requested-resource");
    method=null;
  }
  if (lifecycle.equals(PortletRequest.ACTION_PHASE)) {
    Class<?> superClass=clazz.getSuperclass();
    Method executeActionMethod=superClass.getDeclaredMethod("executeAction",new Class<?>[]{Method.class});
    try {
      ServiceBeanMethodInvocationFactoryUtil.proceed(this,BaseAlloyControllerImpl.class,executeActionMethod,new Object[]{method},new String[]{"transactionAdvice"});
    }
 catch (    Exception e) {
      log.error(e,e);
      actionRequest.setAttribute(CALLED_PROCESS_ACTION,Boolean.TRUE.toString());
      String message="an-unexpected-system-error-occurred";
      Throwable rootCause=getRootCause(e);
      if (rootCause instanceof AlloyException) {
        message=rootCause.getMessage();
      }
      renderError(message);
      actionRequest.setAttribute(VIEW_PATH,viewPath);
      PortalUtil.copyRequestParameters(actionRequest,actionResponse);
    }
  }
 else   if (lifecycle.equals(PortletRequest.RENDER_PHASE)) {
    executeRender(method);
  }
 else   if (lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
    executeResource(method);
  }
  if (alloyNotificationEventHelper != null) {
    alloyNotificationEventHelper.addUserNotificationEvents(request,controllerPath,actionPath);
  }
}
