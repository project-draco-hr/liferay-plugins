{
  if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS)) {
    start=0;
    end=resourcePrimKeys.length;
  }
  if ((resourcePrimKeys.length == 0) || ((end - start) <= 0)) {
    return new ArrayList<Article>();
  }
  Long[] selResourcePrimKeys=new Long[end - start];
  for (int i=start; (i < end) && (i < resourcePrimKeys.length); i++) {
    selResourcePrimKeys[i - start]=resourcePrimKeys[i];
  }
  Map<String,Object> params=new HashMap<String,Object>();
  params.put("resourcePrimKey",selResourcePrimKeys);
  List<Article> unsortedArticles=null;
  if (checkPermission) {
    unsortedArticles=ArticleServiceUtil.getArticles(params,false,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  }
 else {
    unsortedArticles=ArticleLocalServiceUtil.getArticles(params,false,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  }
  unsortedArticles=ListUtil.copy(unsortedArticles);
  List<Article> articles=new ArrayList<Article>();
  for (  Long resourcePrimKey : selResourcePrimKeys) {
    for (int i=0; i < unsortedArticles.size(); i++) {
      Article article=unsortedArticles.get(i);
      if (article.getResourcePrimKey() == resourcePrimKey) {
        articles.add(article);
        unsortedArticles.remove(article);
        break;
      }
    }
  }
  return articles;
}
