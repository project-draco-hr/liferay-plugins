{
  Layout layout=LayoutLocalServiceUtil.getLayout(plid);
  Group group=layout.getGroup();
  PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.getPortletSetup(layout,portletId,StringPool.BLANK);
  String selectionMethod=jxPreferences.getValue("selection-method","parent-group");
  boolean assetEntryQueryContains=GetterUtil.getBoolean(jxPreferences.getValue("asset-entry-query-contains",null),true);
  boolean assetEntryQueryAndOperator=GetterUtil.getBoolean(jxPreferences.getValue("asset-entry-query-and-operator",null));
  String assetEntryQueryName=jxPreferences.getValue("asset-entry-query-name","asset-categories");
  long[] assetCategoryIds=GetterUtil.getLongValues(jxPreferences.getValues("asset-category-ids",new String[0]));
  String[] assetTagNames=jxPreferences.getValues("asset-tag-names",new String[0]);
  if (selectionMethod.equals("articles")) {
    if ((assetCategoryId <= 0) && Validator.isNull(assetTagName)) {
      return null;
    }
    assetEntryQueryName=StringPool.BLANK;
  }
  long[] allAssetCategoryIds=new long[0];
  long[] anyAssetCategoryIds=new long[0];
  long[] notAllAssetCategoryIds=new long[0];
  long[] notAnyAssetCategoryIds=new long[0];
  if (assetEntryQueryName.equals("asset-categories")) {
    if ((assetCategoryId <= 0) && Validator.isNull(assetTagName) && (assetCategoryIds.length <= 0)) {
      return null;
    }
    if (assetEntryQueryContains && assetEntryQueryAndOperator) {
      allAssetCategoryIds=assetCategoryIds;
    }
 else     if (assetEntryQueryContains && !assetEntryQueryAndOperator) {
      anyAssetCategoryIds=assetCategoryIds;
    }
 else     if (!assetEntryQueryContains && assetEntryQueryAndOperator) {
      notAllAssetCategoryIds=assetCategoryIds;
    }
 else {
      notAnyAssetCategoryIds=assetCategoryIds;
    }
  }
  long[] allAssetTagIds=new long[0];
  long[] anyAssetTagIds=new long[0];
  long[] notAllAssetTagIds=new long[0];
  long[] notAnyAssetTagIds=new long[0];
  if (assetEntryQueryName.equals("asset-tags")) {
    if ((assetCategoryId <= 0) && Validator.isNull(assetTagName) && (assetTagNames.length <= 0)) {
      return null;
    }
    long[] assetTagIds=AssetTagLocalServiceUtil.getTagIds(group.getGroupId(),assetTagNames);
    if ((assetTagIds.length <= 0) && assetEntryQueryContains && (assetCategoryId <= 0)&& Validator.isNull(assetTagName)) {
      return new ArrayList<AssetEntry>();
    }
    if (assetEntryQueryContains && assetEntryQueryAndOperator) {
      allAssetTagIds=assetTagIds;
    }
 else     if (assetEntryQueryContains && !assetEntryQueryAndOperator) {
      anyAssetTagIds=assetTagIds;
    }
 else     if (!assetEntryQueryContains && assetEntryQueryAndOperator) {
      notAllAssetTagIds=assetTagIds;
    }
 else {
      notAnyAssetTagIds=assetTagIds;
    }
  }
  if (assetCategoryId > 0) {
    allAssetCategoryIds=ArrayUtil.append(allAssetCategoryIds,assetCategoryId);
  }
  if (Validator.isNotNull(assetTagName)) {
    long[] assetTagIds=AssetTagLocalServiceUtil.getTagIds(group.getGroupId(),new String[]{assetTagName});
    allAssetTagIds=ArrayUtil.append(allAssetTagIds,assetTagIds);
  }
  long[] groupIds=ArticleLocalServiceUtil.getGroupIds(group.getGroupId());
  AssetEntryQuery assetEntryQuery=new AssetEntryQuery();
  assetEntryQuery.setAllCategoryIds(allAssetCategoryIds);
  assetEntryQuery.setAllTagIds(allAssetTagIds);
  assetEntryQuery.setAnyCategoryIds(anyAssetCategoryIds);
  assetEntryQuery.setAnyTagIds(anyAssetTagIds);
  assetEntryQuery.setClassName(Article.class.getName());
  assetEntryQuery.setGroupIds(groupIds);
  assetEntryQuery.setNotAllCategoryIds(notAllAssetCategoryIds);
  assetEntryQuery.setNotAllTagIds(notAllAssetTagIds);
  assetEntryQuery.setNotAnyCategoryIds(notAnyAssetCategoryIds);
  assetEntryQuery.setNotAnyTagIds(notAnyAssetTagIds);
  return AssetEntryLocalServiceUtil.getEntries(assetEntryQuery);
}
