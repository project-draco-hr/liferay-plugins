{
  HRTimeOffPolicyCacheModel hrTimeOffPolicyCacheModel=new HRTimeOffPolicyCacheModel();
  hrTimeOffPolicyCacheModel.hrTimeOffPolicyId=getHrTimeOffPolicyId();
  hrTimeOffPolicyCacheModel.groupId=getGroupId();
  hrTimeOffPolicyCacheModel.companyId=getCompanyId();
  hrTimeOffPolicyCacheModel.userId=getUserId();
  hrTimeOffPolicyCacheModel.userName=getUserName();
  String userName=hrTimeOffPolicyCacheModel.userName;
  if ((userName != null) && (userName.length() == 0)) {
    hrTimeOffPolicyCacheModel.userName=null;
  }
  Date createDate=getCreateDate();
  if (createDate != null) {
    hrTimeOffPolicyCacheModel.createDate=createDate.getTime();
  }
 else {
    hrTimeOffPolicyCacheModel.createDate=Long.MIN_VALUE;
  }
  Date modifiedDate=getModifiedDate();
  if (modifiedDate != null) {
    hrTimeOffPolicyCacheModel.modifiedDate=modifiedDate.getTime();
  }
 else {
    hrTimeOffPolicyCacheModel.modifiedDate=Long.MIN_VALUE;
  }
  hrTimeOffPolicyCacheModel.hrTimeOffTypeId=getHrTimeOffTypeId();
  hrTimeOffPolicyCacheModel.hrUserId=getHrUserId();
  hrTimeOffPolicyCacheModel.accrueHRTimeOffFrequencyTypeId=getAccrueHRTimeOffFrequencyTypeId();
  hrTimeOffPolicyCacheModel.resetHRTimeOffFrequencyTypeId=getResetHRTimeOffFrequencyTypeId();
  Date effectiveDate=getEffectiveDate();
  if (effectiveDate != null) {
    hrTimeOffPolicyCacheModel.effectiveDate=effectiveDate.getTime();
  }
 else {
    hrTimeOffPolicyCacheModel.effectiveDate=Long.MIN_VALUE;
  }
  hrTimeOffPolicyCacheModel.inactive=getInactive();
  hrTimeOffPolicyCacheModel.hoursAllowed=getHoursAllowed();
  hrTimeOffPolicyCacheModel.hoursBaseAmount=getHoursBaseAmount();
  hrTimeOffPolicyCacheModel.hoursToAccrue=getHoursToAccrue();
  hrTimeOffPolicyCacheModel.carryOverHoursAllowed=getCarryOverHoursAllowed();
  return hrTimeOffPolicyCacheModel;
}
