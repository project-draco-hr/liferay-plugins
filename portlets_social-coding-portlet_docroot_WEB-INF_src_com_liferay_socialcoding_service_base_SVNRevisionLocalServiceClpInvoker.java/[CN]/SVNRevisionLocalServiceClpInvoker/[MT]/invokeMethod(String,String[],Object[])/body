{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.addSVNRevision((com.liferay.socialcoding.model.SVNRevision)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.createSVNRevision(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.deleteSVNRevision(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.deleteSVNRevision((com.liferay.socialcoding.model.SVNRevision)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.fetchSVNRevision(((Long)arguments[0]).longValue());
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevision(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisions(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisionsCount();
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.updateSVNRevision((com.liferay.socialcoding.model.SVNRevision)arguments[0]);
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.updateSVNRevision((com.liferay.socialcoding.model.SVNRevision)arguments[0],((Boolean)arguments[1]).booleanValue());
  }
  if (_methodName58.equals(name) && Arrays.deepEquals(_methodParameterTypes58,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName59.equals(name) && Arrays.deepEquals(_methodParameterTypes59,parameterTypes)) {
    SVNRevisionLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
  }
  if (_methodName64.equals(name) && Arrays.deepEquals(_methodParameterTypes64,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.addSVNRevision((java.lang.String)arguments[0],(java.util.Date)arguments[1],((Long)arguments[2]).longValue(),((Long)arguments[3]).longValue(),(java.lang.String)arguments[4]);
  }
  if (_methodName65.equals(name) && Arrays.deepEquals(_methodParameterTypes65,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getFirstSVNRevision((java.lang.String)arguments[0]);
  }
  if (_methodName66.equals(name) && Arrays.deepEquals(_methodParameterTypes66,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getLastSVNRevision((java.lang.String)arguments[0]);
  }
  if (_methodName67.equals(name) && Arrays.deepEquals(_methodParameterTypes67,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevision(((Long)arguments[0]).longValue());
  }
  if (_methodName68.equals(name) && Arrays.deepEquals(_methodParameterTypes68,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisions(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName69.equals(name) && Arrays.deepEquals(_methodParameterTypes69,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisions((java.lang.String)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName70.equals(name) && Arrays.deepEquals(_methodParameterTypes70,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisions((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue());
  }
  if (_methodName71.equals(name) && Arrays.deepEquals(_methodParameterTypes71,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisionsCount(((Long)arguments[0]).longValue());
  }
  if (_methodName72.equals(name) && Arrays.deepEquals(_methodParameterTypes72,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisionsCount((java.lang.String)arguments[0]);
  }
  if (_methodName73.equals(name) && Arrays.deepEquals(_methodParameterTypes73,parameterTypes)) {
    return SVNRevisionLocalServiceUtil.getSVNRevisionsCount((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  throw new UnsupportedOperationException();
}
