{
  long startTime=System.currentTimeMillis();
  Hits hits=new HitsImpl();
  SolrDocumentList solrDocumentList=queryResponse.getResults();
  long total=solrDocumentList.getNumFound();
  if (allResults && (total > 0)) {
    solrQuery.setRows((int)total);
    queryResponse=_solrServer.query(solrQuery);
    return subset(solrQuery,query,queryConfig,queryResponse,false);
  }
  Map<String,Map<String,List<String>>> highlights=queryResponse.getHighlighting();
  List<Document> listDocuments=new ArrayList<Document>();
  List<Float> listScores=new ArrayList<Float>();
  List<String> listSnippets=new ArrayList<String>();
  float maxScore=-1;
  Set<String> queryTerms=new HashSet<String>();
  int subsetTotal=0;
  for (  SolrDocument solrDocument : solrDocumentList) {
    Document document=new DocumentImpl();
    Collection<String> names=solrDocument.getFieldNames();
    for (    String name : names) {
      Collection<Object> fieldValues=solrDocument.getFieldValues(name);
      Field field=new Field(name,ArrayUtil.toStringArray(fieldValues.toArray(new Object[fieldValues.size()])));
      document.add(field);
    }
    float score=1;
    if (queryConfig.isScoreEnabled()) {
      score=GetterUtil.getFloat(String.valueOf(solrDocument.getFieldValue("score")));
    }
    String snippet;
    if (queryConfig.isHighlightEnabled()) {
      snippet=getSnippet(solrDocument,queryTerms,highlights,queryConfig);
      if (snippet.equals(StringPool.BLANK)) {
        continue;
      }
    }
 else {
      snippet=StringPool.BLANK;
    }
    listDocuments.add(document);
    listScores.add(score);
    listSnippets.add(snippet);
    if (score > maxScore) {
      maxScore=score;
    }
    subsetTotal++;
  }
  Document[] documents=listDocuments.toArray(new Document[subsetTotal]);
  if (queryConfig.isScoreEnabled() && (subsetTotal > 0)) {
    for (    Float score : listScores) {
      score=score / maxScore;
    }
  }
  Float[] scores=listScores.toArray(new Float[subsetTotal]);
  String[] snippets=listSnippets.toArray(new String[subsetTotal]);
  float searchTime=(float)(System.currentTimeMillis() - startTime) / Time.SECOND;
  hits.setDocs(documents);
  hits.setLength(documents.length);
  hits.setQuery(query);
  hits.setQueryTerms(queryTerms.toArray(new String[queryTerms.size()]));
  hits.setScores(scores);
  hits.setSearchTime(searchTime);
  hits.setSnippets(snippets);
  hits.setStart(startTime);
  return hits;
}
