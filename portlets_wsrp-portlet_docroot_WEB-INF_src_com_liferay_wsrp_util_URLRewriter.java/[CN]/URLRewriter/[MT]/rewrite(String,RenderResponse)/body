{
  StringBuffer resultMarkup=new StringBuffer("");
  int markupIndex=0;
  int rewriteStartPos=-1;
  int rewriteEndPos=-1;
  int currentPos=0;
  String exprType=null;
  while (markupIndex < markup.length()) {
    rewriteStartPos=-1;
    rewriteEndPos=-1;
    rewriteStartPos=markup.indexOf(WSRPSpecKeys.COMMON,markupIndex);
    boolean atEnd=rewriteStartPos + WSRPSpecKeys.COMMON.length() - 1 > markup.length() - 2;
    if (!(rewriteStartPos == -1 || atEnd)) {
      exprType=markup.substring(rewriteStartPos + WSRPSpecKeys.COMMON.length(),rewriteStartPos + WSRPSpecKeys.COMMON.length() + 1);
      if (exprType.equals(StringPool.UNDERLINE)) {
        rewriteEndPos=rewriteStartPos + WSRPSpecKeys.COMMON.length() + StringPool.UNDERLINE.length() - 1;
      }
 else       if (exprType.equals(StringPool.QUESTION)) {
        rewriteEndPos=markup.indexOf(WSRPSpecKeys.URL_REWRITE_END,markupIndex);
        if (rewriteEndPos != -1) {
          currentPos=rewriteStartPos;
          while ((currentPos != -1) && (currentPos < rewriteEndPos)) {
            rewriteStartPos=currentPos;
            currentPos=markup.indexOf(WSRPSpecKeys.COMMON + StringPool.QUESTION,rewriteStartPos + WSRPSpecKeys.COMMON.length() + StringPool.QUESTION.length());
          }
          rewriteEndPos=rewriteEndPos + WSRPSpecKeys.URL_REWRITE_END.length() - 1;
        }
      }
    }
    if ((rewriteStartPos != -1) && (rewriteEndPos != -1)) {
      resultMarkup.append(markup.substring(markupIndex,rewriteStartPos));
      _rewriteURL(resultMarkup,markup.substring(rewriteStartPos,rewriteEndPos + 1),res);
      markupIndex=rewriteEndPos + 1;
    }
 else {
      resultMarkup.append(markup.substring(markupIndex,markup.length()));
      markupIndex=markup.length();
    }
  }
  return resultMarkup.toString();
}
