{
  String responseDestination=message.getResponseDestination();
  Map commandmap=(Map)message.getPayload();
  String cmd="";
  Object[] parameters=null;
  Set<Map.Entry> entryset=commandmap.entrySet();
  for (  Map.Entry entry : entryset) {
    cmd=(String)entry.getKey();
    parameters=(Object[])entry.getValue();
    break;
  }
  if (cmd == null) {
    throw new Exception("cmd cannot be null or empty.");
  }
 else   if (cmd.equals("deploy")) {
    String defId=_deploy(parameters);
    message.setPayload(defId);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getCurrentTasksXml")) {
    String currentTasks=_getCurrentTasksXml(parameters);
    message.setPayload(currentTasks);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getDefinitionsCountXml")) {
    String countXml=_getDefinitionsCountXml(parameters);
    message.setPayload(countXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getDefinitionsXml")) {
    String defnXml=_getDefinitionsXml(parameters);
    message.setPayload(defnXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getDefinitionXml")) {
    String defId=_getDefinitionXml(parameters);
    message.setPayload(defId);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getInstancesCountXml")) {
    String instancesXml=_getInstancesCountXml(parameters);
    message.setPayload(instancesXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getInstancesXml")) {
    String instancesXml=_getInstancesXml(parameters);
    message.setPayload(instancesXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getTaskXml")) {
    String taskXml=_getTaskXml(parameters);
    message.setPayload(taskXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getTaskFormElementsXml")) {
    String taskFormElementsXml=_getTaskFormElementsXml(parameters);
    message.setPayload(taskFormElementsXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getTaskTransitionsXml")) {
    String taskTransitionsXml=_getTaskTransitionsXml(parameters);
    message.setPayload(taskTransitionsXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getUserTasksCountXml")) {
    String userTasksCountXml=_getUserTasksCountXml(parameters);
    message.setPayload(userTasksCountXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("getUserTasksXml")) {
    String userTasksXml=_getUserTasksXml(parameters);
    message.setPayload(userTasksXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("signalInstance")) {
    _signalInstance(parameters);
  }
 else   if (cmd.equals("signalToken")) {
    _signalToken(parameters);
  }
 else   if (cmd.equals("startWorkflow")) {
    String workflow=_startWorkflow(parameters);
    message.setPayload(workflow);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("updateTaskXml")) {
    String updateTaskXml=_updateTaskXml(parameters);
    message.setPayload(updateTaskXml);
    _sendResponse(responseDestination,message);
  }
 else   if (cmd.equals("checkoutTasks")) {
  }
 else   if (cmd.equals("saveTasks")) {
  }
 else   if (cmd.equals("completeTasks")) {
  }
 else   if (cmd.equals("getTasks")) {
  }
 else   if (cmd.equals("countTasks")) {
  }
 else   if (cmd.equals("escalateTasks")) {
  }
}
