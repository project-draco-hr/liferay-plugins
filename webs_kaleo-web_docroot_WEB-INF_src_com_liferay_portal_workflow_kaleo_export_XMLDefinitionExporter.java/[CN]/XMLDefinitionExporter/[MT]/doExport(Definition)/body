{
  try {
    Document document=SAXReaderUtil.createDocument();
    Element workflowDefinitionElement=document.addElement("workflow-definition");
    workflowDefinitionElement.addNamespace("","urn:liferay.com:liferay-workflow_" + _version);
    workflowDefinitionElement.addAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
    workflowDefinitionElement.addAttribute("xsi:schemaLocation","urn:liferay.com:liferay-workflow_" + _version + " http://www.liferay.com/dtd/liferay-workflow-definition_"+ _schemaVersion+ ".xsd");
    Element name=workflowDefinitionElement.addElement("name",_namespace);
    name.addText(definition.getName());
    if (Validator.isNotNull(definition.getDescription())) {
      Element description=workflowDefinitionElement.addElement("description",_namespace);
      description.addText(definition.getDescription());
    }
    Element version=workflowDefinitionElement.addElement("version",_namespace);
    version.addText(String.valueOf(definition.getVersion()));
    Collection<Node> nodes=definition.getNodes();
    for (    Node node : nodes) {
      NodeExporter nodeExporter=NodeExporterRegistry.getNodeExporter(node.getNodeType());
      nodeExporter.exportNode(node,workflowDefinitionElement,_namespace);
    }
    return document.formattedString();
  }
 catch (  IOException ie) {
    throw new SystemException("Unable to serialize definition",ie);
  }
}
