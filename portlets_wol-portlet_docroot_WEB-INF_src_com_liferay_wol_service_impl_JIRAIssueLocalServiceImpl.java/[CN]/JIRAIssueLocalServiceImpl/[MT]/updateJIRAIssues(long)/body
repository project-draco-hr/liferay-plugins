{
  Date modifiedDate=getLastModifiedDate(projectId);
  List<JIRAAction> jiraActions=jiraActionFinder.findByCD_P(modifiedDate,projectId);
  for (  JIRAAction jiraAction : jiraActions) {
    long userId=getUserId(jiraAction.getJiraUserId());
    if ((userId <= 0) || Validator.isNotNull(jiraAction.getJiraGroupName())) {
      continue;
    }
    JSONObject extraData=new JSONObject();
    JSONUtil.put(extraData,"jiraActionId",jiraAction.getJiraActionId());
    SocialActivityLocalServiceUtil.addActivity(userId,0,JIRAUtil.getLiferayDate(jiraAction.getCreateDate()),JIRAIssue.class.getName(),jiraAction.getJiraIssueId(),JIRAActivityKeys.ADD_COMMENT,extraData.toString(),0);
  }
  List<JIRAChangeGroup> jiraChangeGroups=jiraChangeGroupFinder.findByCD_P(modifiedDate,projectId);
  for (  JIRAChangeGroup jiraChangeGroup : jiraChangeGroups) {
    long userId=getUserId(jiraChangeGroup.getJiraUserId());
    if (userId <= 0) {
      continue;
    }
    JSONObject extraData=new JSONObject();
    JSONUtil.put(extraData,"jiraChangeGroupId",jiraChangeGroup.getJiraChangeGroupId());
    JSONArray jiraChangeItemsJSONArray=new JSONArray();
    JSONUtil.put(extraData,"jiraChangeItems",jiraChangeItemsJSONArray);
    List<JIRAChangeItem> jiraChangeItems=jiraChangeItemPersistence.findByJiraChangeGroupId(jiraChangeGroup.getJiraChangeGroupId());
    for (    JIRAChangeItem jiraChangeItem : jiraChangeItems) {
      JSONObject jiraChangeItemJSON=new JSONObject();
      JSONUtil.put(jiraChangeItemJSON,"field",jiraChangeItem.getField());
      JSONUtil.put(jiraChangeItemJSON,"oldValue",jiraChangeItem.getOldValue());
      JSONUtil.put(jiraChangeItemJSON,"oldString",jiraChangeItem.getOldString());
      JSONUtil.put(jiraChangeItemJSON,"newValue",jiraChangeItem.getNewValue());
      JSONUtil.put(jiraChangeItemJSON,"newString",jiraChangeItem.getNewString());
      jiraChangeItemsJSONArray.put(jiraChangeItemJSON);
    }
    SocialActivityLocalServiceUtil.addActivity(userId,0,JIRAUtil.getLiferayDate(jiraChangeGroup.getCreateDate()),JIRAIssue.class.getName(),jiraChangeGroup.getJiraIssueId(),JIRAActivityKeys.ADD_CHANGE,extraData.toString(),0);
  }
  List<JIRAIssue> jiraIssues=jiraIssueFinder.findByCD_P(modifiedDate,projectId);
  for (  JIRAIssue jiraIssue : jiraIssues) {
    long userId=getUserId(jiraIssue.getReporterJiraUserId());
    if (userId <= 0) {
      continue;
    }
    SocialActivityLocalServiceUtil.addActivity(userId,0,JIRAUtil.getLiferayDate(jiraIssue.getCreateDate()),JIRAIssue.class.getName(),jiraIssue.getJiraIssueId(),JIRAActivityKeys.ADD_ISSUE,StringPool.BLANK,0);
  }
}
