{
  kaleoTransition=toUnwrappedModel(kaleoTransition);
  boolean isNew=kaleoTransition.isNew();
  KaleoTransitionModelImpl kaleoTransitionModelImpl=(KaleoTransitionModelImpl)kaleoTransition;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,kaleoTransition,merge);
    kaleoTransition.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  EntityCacheUtil.putResult(KaleoTransitionModelImpl.ENTITY_CACHE_ENABLED,KaleoTransitionImpl.class,kaleoTransition.getPrimaryKey(),kaleoTransition);
  if (!isNew && ((kaleoTransition.getKaleoNodeId() != kaleoTransitionModelImpl.getOriginalKaleoNodeId()) || !Validator.equals(kaleoTransition.getName(),kaleoTransitionModelImpl.getOriginalName()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_KNI_N,new Object[]{new Long(kaleoTransitionModelImpl.getOriginalKaleoNodeId()),kaleoTransitionModelImpl.getOriginalName()});
  }
  if (isNew || ((kaleoTransition.getKaleoNodeId() != kaleoTransitionModelImpl.getOriginalKaleoNodeId()) || !Validator.equals(kaleoTransition.getName(),kaleoTransitionModelImpl.getOriginalName()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_KNI_N,new Object[]{new Long(kaleoTransition.getKaleoNodeId()),kaleoTransition.getName()},kaleoTransition);
  }
  if (!isNew && ((kaleoTransition.getKaleoNodeId() != kaleoTransitionModelImpl.getOriginalKaleoNodeId()) || (kaleoTransition.getDefaultTransition() != kaleoTransitionModelImpl.getOriginalDefaultTransition()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_KNI_DT,new Object[]{new Long(kaleoTransitionModelImpl.getOriginalKaleoNodeId()),Boolean.valueOf(kaleoTransitionModelImpl.getOriginalDefaultTransition())});
  }
  if (isNew || ((kaleoTransition.getKaleoNodeId() != kaleoTransitionModelImpl.getOriginalKaleoNodeId()) || (kaleoTransition.getDefaultTransition() != kaleoTransitionModelImpl.getOriginalDefaultTransition()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_KNI_DT,new Object[]{new Long(kaleoTransition.getKaleoNodeId()),Boolean.valueOf(kaleoTransition.getDefaultTransition())},kaleoTransition);
  }
  return kaleoTransition;
}
