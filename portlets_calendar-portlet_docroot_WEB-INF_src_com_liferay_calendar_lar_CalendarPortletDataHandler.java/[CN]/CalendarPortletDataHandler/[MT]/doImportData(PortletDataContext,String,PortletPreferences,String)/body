{
  portletDataContext.importPermissions(CalendarPortletPermission.RESOURCE_NAME,portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  if (portletDataContext.getBooleanParameter(NAMESPACE,"calendars")) {
    Element resourcesElement=portletDataContext.getImportDataGroupElement(CalendarResource.class);
    List<Element> resourceElements=resourcesElement.elements();
    for (    Element resourceElement : resourceElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,resourceElement);
    }
    Element calendarsElement=portletDataContext.getImportDataGroupElement(Calendar.class);
    List<Element> calendarElements=calendarsElement.elements();
    for (    Element calendarElement : calendarElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,calendarElement);
    }
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"bookings")) {
    Element bookingsElement=portletDataContext.getImportDataGroupElement(CalendarBooking.class);
    List<Element> bookingElements=bookingsElement.elements();
    for (    Element bookingElement : bookingElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,bookingElement);
    }
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"notification-templates")) {
    Element notificationTemplatesElement=portletDataContext.getImportDataGroupElement(CalendarNotificationTemplate.class);
    List<Element> notificationTemplateElements=notificationTemplatesElement.elements();
    for (    Element notificationTemplateElement : notificationTemplateElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,notificationTemplateElement);
    }
  }
  return portletPreferences;
}
