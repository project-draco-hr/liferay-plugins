{
  final String token="token";
  final RemoteIssueType remoteIssueType=new RemoteIssueType();
  remoteIssueType.setId("priorityId");
  remoteIssueType.setName("priorityName");
  _testContext.checking(new Expectations(){
{
      one(_mockService).getIssueTypes(token);
      RemoteIssueType[] issueTypes=new RemoteIssueType[]{remoteIssueType};
      will(returnValue(issueTypes));
    }
  }
);
  Collection issueTypes=_proxy.getIssueTypes(token);
  _testContext.assertIsSatisfied();
  Assert.assertEquals(issueTypes.size(),1);
  IssueType issueType=(IssueType)issueTypes.iterator().next();
  Assert.assertEquals(issueType.getIssueTypeID(),remoteIssueType.getId());
  Assert.assertEquals(issueType.getIssueTypeName(),remoteIssueType.getName());
}
