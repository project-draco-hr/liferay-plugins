{
  Document document=null;
  try {
    document=SAXReaderUtil.read(content);
  }
 catch (  DocumentException de) {
    throw new PortalException(de);
  }
  Element rootElement=document.getRootElement();
  Element oldKBStructureContentElement=(Element)rootElement.selectSingleNode("kb-structure-content[@language-id='" + localizedLanguageId + "']");
  if (oldKBStructureContentElement != null) {
    oldKBStructureContentElement.detach();
  }
  Element newKBStructureContentElement=rootElement.addElement("kb-structure-content");
  newKBStructureContentElement.addAttribute("language-id",localizedLanguageId);
  for (  KBStructureField kbStructureField : kbStructureFields) {
    String kbStructureFieldId=kbStructureField.getKbStructureFieldId();
    String kbStructureFieldName=StringEscapeUtils.escapeXml(kbStructureField.getName());
    String kbStructureFieldLabel=StringEscapeUtils.escapeXml(kbStructureField.getLabel());
    String kbStructureFieldType=StringEscapeUtils.escapeXml(kbStructureField.getType());
    if (Validator.isNull(kbStructureFieldId)) {
      kbStructureFieldId=String.valueOf(CounterLocalServiceUtil.increment());
    }
    Element kbStructureFieldElement=newKBStructureContentElement.addElement("kb-structure-field");
    kbStructureFieldElement.addAttribute("kb-structure-field-id",kbStructureFieldId);
    kbStructureFieldElement.addAttribute("name",kbStructureFieldName);
    kbStructureFieldElement.addAttribute("label",kbStructureFieldLabel);
    kbStructureFieldElement.addAttribute("type",kbStructureFieldType);
    List<KBStructureOption> kbStructureOptions=kbStructureField.getKbStructureOptions();
    for (    KBStructureOption kbStructureOption : kbStructureOptions) {
      String kbStructureOptionId=kbStructureOption.getKbStructureOptionId();
      String kbStructureOptionLabel=StringEscapeUtils.escapeXml(kbStructureOption.getLabel());
      String kbStructureOptionValue=StringEscapeUtils.escapeXml(kbStructureOption.getValue());
      if (Validator.isNull(kbStructureOptionId)) {
        kbStructureOptionId=String.valueOf(CounterLocalServiceUtil.increment());
      }
      Element kbStructureOptionElement=kbStructureFieldElement.addElement("kb-structure-option");
      kbStructureOptionElement.addAttribute("kb-structure-option-id",kbStructureOptionId);
      kbStructureOptionElement.addAttribute("label",kbStructureOptionLabel);
      kbStructureOptionElement.addAttribute("value",kbStructureOptionValue);
    }
  }
  Map<String,Element> elements=new TreeMap<String,Element>();
  for (  Element element : rootElement.elements()) {
    String languageId=element.attributeValue("language-id");
    elements.put(languageId,(Element)element.detach());
  }
  String defaultLanguageId=rootElement.attributeValue("default-language-id");
  Element defaultKBStructureContentElement=elements.remove(defaultLanguageId);
  rootElement.add(defaultKBStructureContentElement);
  if (!localizedLanguageId.equals(defaultLanguageId)) {
    for (    Map.Entry<String,Element> entry : elements.entrySet()) {
      rootElement.add(entry.getValue());
    }
  }
 else {
    updateLocalizations(rootElement,defaultKBStructureContentElement,elements);
  }
  try {
    return document.formattedString();
  }
 catch (  IOException ioe) {
    return document.asXML();
  }
}
