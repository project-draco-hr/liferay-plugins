{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.opensocial.model.impl.GadgetImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        GadgetClp newModel=new GadgetClp();
        Method method0=oldModelClass.getMethod("getUuid");
        String value0=(String)method0.invoke(oldModel,(Object[])null);
        newModel.setUuid(value0);
        Method method1=oldModelClass.getMethod("getGadgetId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setGadgetId(value1);
        Method method2=oldModelClass.getMethod("getCompanyId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value2);
        Method method3=oldModelClass.getMethod("getCreateDate");
        Date value3=(Date)method3.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value3);
        Method method4=oldModelClass.getMethod("getModifiedDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value4);
        Method method5=oldModelClass.getMethod("getName");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setName(value5);
        Method method6=oldModelClass.getMethod("getUrl");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setUrl(value6);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.opensocial.model.impl.OAuthConsumerImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        OAuthConsumerClp newModel=new OAuthConsumerClp();
        Method method0=oldModelClass.getMethod("getOauthConsumerId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setOauthConsumerId(value0);
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1);
        Method method2=oldModelClass.getMethod("getCreateDate");
        Date value2=(Date)method2.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value2);
        Method method3=oldModelClass.getMethod("getModifiedDate");
        Date value3=(Date)method3.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value3);
        Method method4=oldModelClass.getMethod("getGadgetId");
        Long value4=(Long)method4.invoke(oldModel,(Object[])null);
        newModel.setGadgetId(value4);
        Method method5=oldModelClass.getMethod("getServiceName");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setServiceName(value5);
        Method method6=oldModelClass.getMethod("getConsumerKey");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setConsumerKey(value6);
        Method method7=oldModelClass.getMethod("getConsumerSecret");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setConsumerSecret(value7);
        Method method8=oldModelClass.getMethod("getKeyType");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setKeyType(value8);
        Method method9=oldModelClass.getMethod("getKeyName");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setKeyName(value9);
        Method method10=oldModelClass.getMethod("getCallbackURL");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setCallbackURL(value10);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.opensocial.model.impl.OAuthTokenImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        OAuthTokenClp newModel=new OAuthTokenClp();
        Method method0=oldModelClass.getMethod("getOauthTokenId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setOauthTokenId(value0);
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1);
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2);
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getGadgetId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setGadgetId(value6);
        Method method7=oldModelClass.getMethod("getServiceName");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setServiceName(value7);
        Method method8=oldModelClass.getMethod("getModuleId");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setModuleId(value8);
        Method method9=oldModelClass.getMethod("getAccessToken");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setAccessToken(value9);
        Method method10=oldModelClass.getMethod("getTokenName");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setTokenName(value10);
        Method method11=oldModelClass.getMethod("getTokenSecret");
        String value11=(String)method11.invoke(oldModel,(Object[])null);
        newModel.setTokenSecret(value11);
        Method method12=oldModelClass.getMethod("getSessionHandle");
        String value12=(String)method12.invoke(oldModel,(Object[])null);
        newModel.setSessionHandle(value12);
        Method method13=oldModelClass.getMethod("getExpiration");
        Long value13=(Long)method13.invoke(oldModel,(Object[])null);
        newModel.setExpiration(value13);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
