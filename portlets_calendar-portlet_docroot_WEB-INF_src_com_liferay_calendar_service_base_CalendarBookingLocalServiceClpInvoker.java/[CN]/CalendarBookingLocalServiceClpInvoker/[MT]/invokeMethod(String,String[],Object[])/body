{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.addCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.createCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.fetchCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsCount();
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName91.equals(name) && Arrays.deepEquals(_methodParameterTypes91,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName92.equals(name) && Arrays.deepEquals(_methodParameterTypes92,parameterTypes)) {
    CalendarBookingLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName97.equals(name) && Arrays.deepEquals(_methodParameterTypes97,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.addCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(long[])arguments[2],((Long)arguments[3]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],((Long)arguments[7]).longValue(),((Long)arguments[8]).longValue(),((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  if (_methodName98.equals(name) && Arrays.deepEquals(_methodParameterTypes98,parameterTypes)) {
    CalendarBookingLocalServiceUtil.checkCalendarBookings();
    return null;
  }
  if (_methodName99.equals(name) && Arrays.deepEquals(_methodParameterTypes99,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName100.equals(name) && Arrays.deepEquals(_methodParameterTypes100,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName101.equals(name) && Arrays.deepEquals(_methodParameterTypes101,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookingInstance((com.liferay.calendar.model.CalendarBooking)arguments[0],((Long)arguments[1]).longValue(),((Boolean)arguments[2]).booleanValue());
    return null;
  }
  if (_methodName102.equals(name) && Arrays.deepEquals(_methodParameterTypes102,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Boolean)arguments[2]).booleanValue());
    return null;
  }
  if (_methodName103.equals(name) && Arrays.deepEquals(_methodParameterTypes103,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookings(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName104.equals(name) && Arrays.deepEquals(_methodParameterTypes104,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.fetchCalendarBooking((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName105.equals(name) && Arrays.deepEquals(_methodParameterTypes105,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName106.equals(name) && Arrays.deepEquals(_methodParameterTypes106,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName107.equals(name) && Arrays.deepEquals(_methodParameterTypes107,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName108.equals(name) && Arrays.deepEquals(_methodParameterTypes108,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue());
  }
  if (_methodName109.equals(name) && Arrays.deepEquals(_methodParameterTypes109,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Integer)arguments[3]).intValue());
  }
  if (_methodName110.equals(name) && Arrays.deepEquals(_methodParameterTypes110,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsCount(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName111.equals(name) && Arrays.deepEquals(_methodParameterTypes111,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName112.equals(name) && Arrays.deepEquals(_methodParameterTypes112,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName113.equals(name) && Arrays.deepEquals(_methodParameterTypes113,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(int[])arguments[9],((Integer)arguments[10]).intValue(),((Integer)arguments[11]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[12]);
  }
  if (_methodName114.equals(name) && Arrays.deepEquals(_methodParameterTypes114,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],((Long)arguments[8]).longValue(),((Long)arguments[9]).longValue(),((Boolean)arguments[10]).booleanValue(),(int[])arguments[11],((Boolean)arguments[12]).booleanValue(),((Integer)arguments[13]).intValue(),((Integer)arguments[14]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[15]);
  }
  if (_methodName115.equals(name) && Arrays.deepEquals(_methodParameterTypes115,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),(int[])arguments[8]);
  }
  if (_methodName116.equals(name) && Arrays.deepEquals(_methodParameterTypes116,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],((Long)arguments[8]).longValue(),((Long)arguments[9]).longValue(),(int[])arguments[10],((Boolean)arguments[11]).booleanValue());
  }
  if (_methodName117.equals(name) && Arrays.deepEquals(_methodParameterTypes117,parameterTypes)) {
    CalendarBookingLocalServiceUtil.updateAsset(((Long)arguments[0]).longValue(),(com.liferay.calendar.model.CalendarBooking)arguments[1],(long[])arguments[2],(java.lang.String[])arguments[3],(long[])arguments[4]);
    return null;
  }
  if (_methodName118.equals(name) && Arrays.deepEquals(_methodParameterTypes118,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(long[])arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],((Long)arguments[7]).longValue(),((Long)arguments[8]).longValue(),((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],((Integer)arguments[15]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[16]);
  }
  if (_methodName119.equals(name) && Arrays.deepEquals(_methodParameterTypes119,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(java.lang.String)arguments[9],((Long)arguments[10]).longValue(),(java.lang.String)arguments[11],((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],((Integer)arguments[14]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  if (_methodName120.equals(name) && Arrays.deepEquals(_methodParameterTypes120,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(long[])arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],((Long)arguments[7]).longValue(),((Long)arguments[8]).longValue(),((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Boolean)arguments[11]).booleanValue(),((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],((Long)arguments[14]).longValue(),(java.lang.String)arguments[15],((Integer)arguments[16]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[17]);
  }
  if (_methodName121.equals(name) && Arrays.deepEquals(_methodParameterTypes121,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(java.lang.String)arguments[9],((Boolean)arguments[10]).booleanValue(),((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],((Integer)arguments[15]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[16]);
  }
  if (_methodName122.equals(name) && Arrays.deepEquals(_methodParameterTypes122,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateStatus(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  throw new UnsupportedOperationException();
}
