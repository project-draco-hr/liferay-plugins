{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.addCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.createCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.fetchCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsCount();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0],((Boolean)arguments[1]).booleanValue());
  }
  if (_methodName55.equals(name) && Arrays.deepEquals(_methodParameterTypes55,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName56.equals(name) && Arrays.deepEquals(_methodParameterTypes56,parameterTypes)) {
    CalendarBookingLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
  }
  if (_methodName61.equals(name) && Arrays.deepEquals(_methodParameterTypes61,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.addCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(long[])arguments[2],((Long)arguments[3]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],(java.util.Date)arguments[7],(java.util.Date)arguments[8],((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  if (_methodName62.equals(name) && Arrays.deepEquals(_methodParameterTypes62,parameterTypes)) {
    CalendarBookingLocalServiceUtil.checkCalendarBookings();
  }
  if (_methodName63.equals(name) && Arrays.deepEquals(_methodParameterTypes63,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName64.equals(name) && Arrays.deepEquals(_methodParameterTypes64,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName65.equals(name) && Arrays.deepEquals(_methodParameterTypes65,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName66.equals(name) && Arrays.deepEquals(_methodParameterTypes66,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName67.equals(name) && Arrays.deepEquals(_methodParameterTypes67,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName68.equals(name) && Arrays.deepEquals(_methodParameterTypes68,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName69.equals(name) && Arrays.deepEquals(_methodParameterTypes69,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),(java.util.Date)arguments[1],(java.util.Date)arguments[2]);
  }
  if (_methodName70.equals(name) && Arrays.deepEquals(_methodParameterTypes70,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsCount(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName71.equals(name) && Arrays.deepEquals(_methodParameterTypes71,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName72.equals(name) && Arrays.deepEquals(_methodParameterTypes72,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName73.equals(name) && Arrays.deepEquals(_methodParameterTypes73,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.util.Date)arguments[6],(java.util.Date)arguments[7],(int[])arguments[8],((Integer)arguments[9]).intValue(),((Integer)arguments[10]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[11]);
  }
  if (_methodName74.equals(name) && Arrays.deepEquals(_methodParameterTypes74,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],(java.util.Date)arguments[8],(java.util.Date)arguments[9],(int[])arguments[10],((Boolean)arguments[11]).booleanValue(),((Integer)arguments[12]).intValue(),((Integer)arguments[13]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[14]);
  }
  if (_methodName75.equals(name) && Arrays.deepEquals(_methodParameterTypes75,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.util.Date)arguments[6],(java.util.Date)arguments[7],(int[])arguments[8]);
  }
  if (_methodName76.equals(name) && Arrays.deepEquals(_methodParameterTypes76,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],(java.util.Date)arguments[8],(java.util.Date)arguments[9],(int[])arguments[10],((Boolean)arguments[11]).booleanValue());
  }
  if (_methodName77.equals(name) && Arrays.deepEquals(_methodParameterTypes77,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(long[])arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],(java.util.Date)arguments[7],(java.util.Date)arguments[8],((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],((Integer)arguments[15]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[16]);
  }
  if (_methodName78.equals(name) && Arrays.deepEquals(_methodParameterTypes78,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],(java.util.Date)arguments[6],(java.util.Date)arguments[7],((Boolean)arguments[8]).booleanValue(),(java.lang.String)arguments[9],((Long)arguments[10]).longValue(),(java.lang.String)arguments[11],((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],((Integer)arguments[14]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  if (_methodName79.equals(name) && Arrays.deepEquals(_methodParameterTypes79,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateStatus(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  throw new UnsupportedOperationException();
}
