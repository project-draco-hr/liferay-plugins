{
  UploadPortletRequest upr=PortalUtil.getUploadPortletRequest(req);
  Enumeration keys=upr.getParameterNames();
  while (keys.hasMoreElements()) {
    String name=(String)keys.nextElement();
    if (isReservedParam(name)) {
      continue;
    }
    if (upr.isFormField(name)) {
      addFormField(params,name,req.getParameterValues(name));
    }
 else {
      UploadContext uploadContext=new UploadContext();
      String partContentType=upr.getContentType(name);
      uploadContext.setMimeType(partContentType);
      StringMaker sm=new StringMaker();
      sm.append("form-data; ");
      sm.append("name=");
      sm.append(name);
      sm.append("; filename=");
      sm.append(upr.getFileName(name));
      NamedString mimeAttr=new NamedString();
      mimeAttr.setName("Content-Disposition");
      mimeAttr.setValue(sm.toString());
      List<NamedString> mimeAttrs=uploadContext.getMimeAttributes();
      mimeAttrs.add(mimeAttr);
      File file=upr.getFile(name);
      byte[] fileBytes=null;
      try {
        fileBytes=FileUtil.getBytes(file);
      }
 catch (      IOException e) {
        throw new IllegalStateException("Error reading multi-part file");
      }
      if (fileBytes == null) {
        continue;
      }
      uploadContext.setUploadData(fileBytes);
      uploadContexts.add(uploadContext);
    }
  }
}
