{
  Matcher rewriteMatcher=_rewritePattern.matcher(content);
  StringBuffer sb=new StringBuffer();
  while (rewriteMatcher.find()) {
    String namespace=rewriteMatcher.group(1);
    String url=rewriteMatcher.group(2);
    String extensionURL1=rewriteMatcher.group(3);
    String extensionURL2=rewriteMatcher.group(4);
    String replacement=null;
    String rewrittenUrl=null;
    Map<String,String> parameterMap=new HashMap<String,String>();
    if (Validator.isNotNull(namespace)) {
      rewriteMatcher.appendReplacement(sb,portletResponse.getNamespace());
    }
 else     if (Validator.isNotNull(url)) {
      Matcher parameterMatcher=_parameterPattern.matcher(url);
      while (parameterMatcher.find()) {
        String name=parameterMatcher.group(1);
        String value=parameterMatcher.group(2);
        if (Validator.isNull(value) || value.equals(StringPool.DOUBLE_QUOTE)) {
          continue;
        }
        parameterMap.put(name,HttpUtil.decodeURL(value));
      }
      rewrittenUrl=rewriteURL(portletRequest,portletResponse,parameterMap);
      rewriteMatcher.appendReplacement(sb,rewrittenUrl);
    }
 else     if (Validator.isNotNull(extensionURL1)) {
      parameterMap.put("wsrp-urlType","render");
      parameterMap.put("wsrp-windowState","wsrp:normal");
      rewrittenUrl=rewriteURL(portletRequest,portletResponse,parameterMap);
      replacement="location.href = '" + rewrittenUrl + "'";
      rewriteMatcher.appendReplacement(sb,replacement);
    }
 else     if (Validator.isNotNull(extensionURL2)) {
      parameterMap.put("wsrp-urlType","render");
      parameterMap.put("wsrp-windowState","wsrp:normal");
      rewrittenUrl=rewriteURL(portletRequest,portletResponse,parameterMap);
      replacement="href=\"" + rewrittenUrl + "\"";
      rewriteMatcher.appendReplacement(sb,replacement);
    }
  }
  rewriteMatcher.appendTail(sb);
  return sb.toString();
}
