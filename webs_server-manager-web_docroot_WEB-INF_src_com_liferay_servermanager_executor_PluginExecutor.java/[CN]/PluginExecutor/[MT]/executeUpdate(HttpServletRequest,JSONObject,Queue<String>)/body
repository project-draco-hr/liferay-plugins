{
  String context=arguments.poll();
  List<File> deployDirs=getDeployDirectories(context);
  for (  File deployDir : deployDirs) {
    if (!deployDir.exists()) {
      responseJSONObject.put(JSONKeys.ERROR,"Context directory " + deployDir.getAbsolutePath() + " does not exist");
      responseJSONObject.put(JSONKeys.STATUS,1);
      return;
    }
  }
  File tempFile=getTempFile(request,responseJSONObject);
  if (tempFile == null) {
    return;
  }
  for (  File deployDirectory : deployDirs) {
    FileUtil.unzip(tempFile,deployDirectory);
  }
  File partialAppDeletePropsFile=new File(deployDirs.get(0),"META-INF/liferay-partialapp-delete.props");
  if (!partialAppDeletePropsFile.exists()) {
    return;
  }
  BufferedReader bufferedReader=new BufferedReader(new FileReader(partialAppDeletePropsFile));
  String line=null;
  while ((line=bufferedReader.readLine()) != null) {
    for (    File deployDirectory : deployDirs) {
      File staleFile=new File(deployDirectory,line.trim());
      if (!staleFile.exists()) {
        continue;
      }
      boolean success=FileUtils.deleteQuietly(staleFile);
      if (success) {
        continue;
      }
      String message="Unable to delete file " + staleFile.getAbsolutePath();
      _log.error(message);
      responseJSONObject.put(JSONKeys.ERROR,message);
    }
  }
  FileUtils.deleteQuietly(partialAppDeletePropsFile);
  if (_log.isInfoEnabled()) {
    _log.info("Successfully updated " + context);
  }
}
