{
  try {
    KaleoTaskInstanceToken kaleoTaskInstanceToken=KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceToken(workflowTaskInstanceId);
    KaleoTask kaleoTask=kaleoTaskInstanceToken.getKaleoTask();
    List<KaleoTaskAssignment> kaleoTaskAssignments=KaleoTaskAssignmentLocalServiceUtil.getKaleoTaskAssignments(kaleoTask.getKaleoTaskId(),Role.class.getName());
    PrimitiveLongSet pooledActors=new PrimitiveLongSet();
    for (    KaleoTaskAssignment kaleoTaskAssignment : kaleoTaskAssignments) {
      long roleId=kaleoTaskAssignment.getAssigneeClassPK();
      Role role=RoleLocalServiceUtil.getRole(roleId);
      if ((role.getType() == RoleConstants.TYPE_SITE) || (role.getType() == RoleConstants.TYPE_ORGANIZATION)) {
        List<UserGroupRole> userGroupRoles=UserGroupRoleLocalServiceUtil.getUserGroupRolesByGroupAndRole(kaleoTaskInstanceToken.getGroupId(),roleId);
        for (        UserGroupRole userGroupRole : userGroupRoles) {
          pooledActors.add(userGroupRole.getUserId());
        }
      }
 else {
        long[] userIds=UserLocalServiceUtil.getRoleUserIds(roleId);
        pooledActors.addAll(userIds);
      }
    }
    return pooledActors.getArray();
  }
 catch (  Exception e) {
    throw new WorkflowException(e);
  }
}
