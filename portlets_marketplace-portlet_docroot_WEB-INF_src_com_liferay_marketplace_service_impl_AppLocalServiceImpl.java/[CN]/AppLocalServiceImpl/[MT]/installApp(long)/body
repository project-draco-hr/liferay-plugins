{
  App app=appPersistence.findByRemoteAppId(remoteAppId);
  if (!DLStoreUtil.hasFile(app.getCompanyId(),CompanyConstants.SYSTEM,app.getFilePath())) {
    throw new NoSuchFileException();
  }
  String tmpDir=SystemProperties.get(SystemProperties.TMP_DIR) + StringPool.SLASH + Time.getTimestamp();
  try {
    File liferayPackageFile=DLStoreUtil.getFile(app.getCompanyId(),CompanyConstants.SYSTEM,app.getFilePath());
    ZipFile zipFile=new ZipFile(liferayPackageFile);
    Enumeration<ZipEntry> enu=(Enumeration<ZipEntry>)zipFile.entries();
    while (enu.hasMoreElements()) {
      ZipEntry zipEntry=enu.nextElement();
      String fileName=zipEntry.getName();
      if (_log.isInfoEnabled()) {
        _log.info("Extracting " + fileName + " from app "+ app.getAppId());
      }
      InputStream inputStream=zipFile.getInputStream(zipEntry);
      File pluginPackageFile=new File(tmpDir + StringPool.SLASH + fileName);
      FileUtil.write(pluginPackageFile,inputStream);
      String contextName=getContextName(fileName);
      AutoDeploymentContext autoDeploymentContext=new AutoDeploymentContext();
      autoDeploymentContext.setContext(contextName);
      autoDeploymentContext.setFileToDeploy(pluginPackageFile);
      DeployManagerUtil.deploy(autoDeploymentContext);
      moduleLocalService.addModule(app.getUserId(),app.getAppId(),contextName);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    FileUtil.deltree(tmpDir);
  }
}
