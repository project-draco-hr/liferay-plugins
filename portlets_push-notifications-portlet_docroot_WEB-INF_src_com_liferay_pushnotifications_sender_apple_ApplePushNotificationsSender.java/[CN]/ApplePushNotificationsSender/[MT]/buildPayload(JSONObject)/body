{
  PayloadBuilder builder=PayloadBuilder.newPayload();
  String body=payloadJSONObject.getString(PushNotificationsConstants.KEY_BODY);
  if (Validator.isNotNull(body)) {
    builder.alertBody(body);
  }
  String bodyLocalizedKey=payloadJSONObject.getString(PushNotificationsConstants.KEY_BODY_LOCALIZED);
  if (Validator.isNotNull(bodyLocalizedKey)) {
    builder.localizedKey(bodyLocalizedKey);
  }
  JSONArray bodyLocalizedArguments=payloadJSONObject.getJSONArray(PushNotificationsConstants.KEY_BODY_LOCALIZED_ARGUMENTS);
  if (Validator.isNotNull(bodyLocalizedArguments)) {
    List<String> argumentsList=new ArrayList<String>();
    for (int i=0; i < bodyLocalizedArguments.length(); i++) {
      argumentsList.add(bodyLocalizedArguments.getString(i));
    }
    builder.localizedArguments(argumentsList);
  }
  String sound=payloadJSONObject.getString(PushNotificationsConstants.KEY_SOUND);
  if (Validator.isNotNull(sound)) {
    builder.sound(sound);
  }
  payloadJSONObject.remove(PushNotificationsConstants.KEY_BODY);
  payloadJSONObject.remove(PushNotificationsConstants.KEY_BODY_LOCALIZED);
  payloadJSONObject.remove(PushNotificationsConstants.KEY_BODY_LOCALIZED_ARGUMENTS);
  payloadJSONObject.remove(PushNotificationsConstants.KEY_SOUND);
  builder.customField(PushNotificationsConstants.KEY_PAYLOAD,payloadJSONObject.toString());
  return builder.build();
}
