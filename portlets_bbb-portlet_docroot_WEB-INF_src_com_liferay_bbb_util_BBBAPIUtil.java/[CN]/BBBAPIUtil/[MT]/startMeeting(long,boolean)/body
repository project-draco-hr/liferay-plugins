{
  BBBMeeting bbbMeeting=BBBMeetingLocalServiceUtil.getBBBMeeting(bbbMeetingId);
  if (bbbMeeting.getStatus() != BBBMeetingConstants.STATUS_SCHEDULED) {
    return bbbMeeting;
  }
  StringBundler sb=new StringBundler(15);
  sb.append(BBBConstants.API_PARAMETER_MEETING_ID);
  sb.append(StringPool.EQUAL);
  sb.append(bbbMeeting.getBbbMeetingId());
  sb.append(StringPool.AMPERSAND);
  sb.append(BBBConstants.API_PARAMETER_NAME);
  sb.append(StringPool.EQUAL);
  sb.append(HtmlUtil.escapeURL(bbbMeeting.getName()));
  sb.append(StringPool.AMPERSAND);
  sb.append(BBBConstants.API_PARAMETER_WELCOME);
  sb.append(StringPool.EQUAL);
  String welcomeMessage=ContentUtil.get("com/liferay/bbb/dependencies/meeting_welcome_message.tmpl");
  sb.append(HtmlUtil.escapeURL(welcomeMessage));
  if (recordMeeting) {
    sb.append(StringPool.AMPERSAND);
    sb.append(BBBConstants.API_PARAMETER_RECORD);
    sb.append(StringPool.EQUAL);
    sb.append(StringPool.TRUE);
  }
  bbbMeeting.setBbbServerId(getBbbServerId());
  Document document=execute(bbbMeeting,BBBConstants.API_METHOD_CREATE,sb.toString());
  Element element=document.getRootElement();
  String returnCode=getText(element,BBBConstants.API_RESPONSE_RETURN_CODE);
  if (returnCode.equals(BBBConstants.API_RESPONSE_FAILED)) {
    throw new SystemException();
  }
  bbbMeeting.setAttendeePassword(getText(element,BBBConstants.API_PARAMETER_ATTENDEE_PW));
  bbbMeeting.setModeratorPassword(getText(element,BBBConstants.API_PARAMETER_MODERATOR_PW));
  bbbMeeting.setStatus(BBBMeetingConstants.STATUS_IN_PROGRESS);
  BBBMeetingLocalServiceUtil.updateBBBMeeting(bbbMeeting);
  return bbbMeeting;
}
