{
  if (Validator.isNull(titleMap) || titleMap.isEmpty()) {
    throw new CalendarBookingTitleException();
  }
  if (!Validator.isDate(startDateMonth,startDateDay,startDateYear)) {
    throw new EventStartDateException();
  }
  if (!Validator.isDate(endDateMonth,endDateDay,endDateYear)) {
    throw new EventEndDateException();
  }
  TimeZone timeZone=TimeZone.getDefault();
  java.util.Calendar startDate=CalendarFactoryUtil.getCalendar(timeZone,locale);
  startDate.set(java.util.Calendar.MONTH,startDateMonth);
  startDate.set(java.util.Calendar.DATE,startDateDay);
  startDate.set(java.util.Calendar.YEAR,startDateYear);
  startDate.set(java.util.Calendar.HOUR_OF_DAY,startDateHour);
  startDate.set(java.util.Calendar.MINUTE,startDateMinute);
  startDate.set(java.util.Calendar.SECOND,0);
  startDate.set(java.util.Calendar.MILLISECOND,0);
  java.util.Calendar endDate=CalendarFactoryUtil.getCalendar(timeZone,locale);
  endDate.set(java.util.Calendar.MONTH,endDateMonth);
  endDate.set(java.util.Calendar.DATE,endDateDay);
  endDate.set(java.util.Calendar.YEAR,endDateYear);
  endDate.set(java.util.Calendar.HOUR_OF_DAY,endDateHour);
  endDate.set(java.util.Calendar.MINUTE,endDateMinute);
  endDate.set(java.util.Calendar.SECOND,0);
  endDate.set(java.util.Calendar.MILLISECOND,0);
  if (startDate.after(endDate)) {
    throw new CalendarBookingDurationException();
  }
}
