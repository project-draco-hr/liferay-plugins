{
  Class oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals(KBFeedbackStatsClp.class.getName())) {
    KBFeedbackStatsClp oldCplModel=(KBFeedbackStatsClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class newModelClass=Class.forName("com.liferay.kb.knowledgebase.model.impl.KBFeedbackStatsImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setFeedbackStatsId",new Class[]{Long.TYPE});
        Long value0=new Long(oldCplModel.getFeedbackStatsId());
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setArticleResourcePrimKey",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getArticleResourcePrimKey());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setAverageScore",new Class[]{Double.TYPE});
        Double value2=new Double(oldCplModel.getAverageScore());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setTotalScoreEntries",new Class[]{Integer.TYPE});
        Integer value3=new Integer(oldCplModel.getTotalScoreEntries());
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setTotalVotes",new Class[]{Integer.TYPE});
        Integer value4=new Integer(oldCplModel.getTotalVotes());
        method4.invoke(newModel,value4);
        Method method5=newModelClass.getMethod("setYesVotes",new Class[]{Integer.TYPE});
        Integer value5=new Integer(oldCplModel.getYesVotes());
        method5.invoke(newModel,value5);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
