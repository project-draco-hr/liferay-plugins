{
  int workflowAction=serviceContext.getWorkflowAction();
  if (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {
    return super.addPage(userId,nodeId,title,content,summary,minorEdit,serviceContext);
  }
  WikiPage page=super.addPage(userId,nodeId,title,version,content,summary,minorEdit,format,head,parentTitle,redirectTitle,serviceContext);
  AkismetData akismetData=updateAkismetData(page,serviceContext);
  if (!isWikiEnabled(userId,nodeId,serviceContext)) {
    return page;
  }
  String akismetContent=page.getTitle() + "\n\n" + page.getContent();
  if (!AkismetUtil.isSpam(userId,akismetContent,akismetData)) {
    return super.updateStatus(userId,page.getResourcePrimKey(),WorkflowConstants.STATUS_APPROVED,serviceContext);
  }
  boolean notificationEnabled=false;
  try {
    notificationEnabled=NotificationThreadLocal.isEnabled();
    NotificationThreadLocal.setEnabled(false);
    page.setSummary(AkismetConstants.WIKI_PAGE_PENDING_APPROVAL);
    page.setStatus(WorkflowConstants.STATUS_APPROVED);
    return super.updateWikiPage(page);
  }
  finally {
    NotificationThreadLocal.setEnabled(notificationEnabled);
  }
}
