{
  WorkflowInstance workflowInstance=WorkflowInstanceManagerUtil.startWorkflowInstance(USER.getUserId(),_workflowDefinition.getName(),_workflowDefinition.getVersion(),null,null);
  long rootWorkflowInstanceId=workflowInstance.getWorkflowInstanceId();
  List<WorkflowLog> logsForRoot=WorkflowLogManagerUtil.getWorkflowLogs(rootWorkflowInstanceId,false,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowLogCreateDateComparator(true));
  assertTrue(logsForRoot.size() > 0);
  for (  WorkflowLog log : logsForRoot) {
    assertEquals(rootWorkflowInstanceId,log.getWorkflowInstanceId());
  }
  List<WorkflowLog> logsForAll=WorkflowLogManagerUtil.getWorkflowLogs(rootWorkflowInstanceId,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowLogCreateDateComparator(true));
  assertTrue(logsForAll.size() > 0);
  assertTrue(logsForAll.size() > logsForRoot.size());
  workflowInstance=WorkflowInstanceManagerUtil.getWorkflowInstance(workflowInstance.getWorkflowInstanceId());
  List<WorkflowInstance> childrenWorkflowInstances=workflowInstance.getChildren();
  assertEquals(3,childrenWorkflowInstances.size());
  long childWorkflowInstanceId1=childrenWorkflowInstances.get(0).getWorkflowInstanceId();
  List<WorkflowLog> logsForChild1=WorkflowLogManagerUtil.getWorkflowLogs(childWorkflowInstanceId1,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowLogCreateDateComparator(true));
  assertTrue(logsForChild1.size() > 0);
  for (  WorkflowLog log : logsForChild1) {
    assertEquals(childWorkflowInstanceId1,log.getWorkflowInstanceId());
  }
  long childWorkflowInstanceId2=childrenWorkflowInstances.get(1).getWorkflowInstanceId();
  List<WorkflowLog> logsForChild2=WorkflowLogManagerUtil.getWorkflowLogs(childWorkflowInstanceId2,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowLogCreateDateComparator(true));
  assertTrue(logsForChild2.size() > 0);
  for (  WorkflowLog log : logsForChild2) {
    assertEquals(childWorkflowInstanceId2,log.getWorkflowInstanceId());
  }
  long childWorkflowInstanceId3=childrenWorkflowInstances.get(2).getWorkflowInstanceId();
  List<WorkflowLog> logsForChild3=WorkflowLogManagerUtil.getWorkflowLogs(childWorkflowInstanceId3,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new WorkflowLogCreateDateComparator(true));
  assertTrue(logsForChild3.size() > 0);
  for (  WorkflowLog log : logsForChild3) {
    assertEquals(childWorkflowInstanceId3,log.getWorkflowInstanceId());
  }
  assertEquals(logsForAll.size(),logsForRoot.size() + logsForChild1.size() + logsForChild2.size()+ logsForChild3.size());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(rootWorkflowInstanceId);
}
