{
  final String searchTreePath=StringUtil.quote(String.valueOf(parentSyncDLObject.getTypePK()),StringPool.SLASH);
  ActionableDynamicQuery actionableDynamicQuery=getActionableDynamicQuery();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      dynamicQuery.add(RestrictionsFactoryUtil.like("treePath",StringUtil.quote(searchTreePath,StringPool.PERCENT)));
    }
  }
);
  actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<SyncDLObject>(){
    @Override public void performAction(    SyncDLObject dependentSyncDLObject) throws PortalException {
      String treePath=dependentSyncDLObject.getTreePath();
      String oldParentTreePath=treePath.substring(0,treePath.indexOf(searchTreePath) + searchTreePath.length());
      treePath=StringUtil.replaceFirst(treePath,oldParentTreePath,parentSyncDLObject.getTreePath());
      dependentSyncDLObject.setUserId(parentSyncDLObject.getUserId());
      dependentSyncDLObject.setUserName(parentSyncDLObject.getUserName());
      dependentSyncDLObject.setTreePath(treePath);
      syncDLObjectPersistence.update(dependentSyncDLObject);
    }
  }
);
  actionableDynamicQuery.performActions();
}
