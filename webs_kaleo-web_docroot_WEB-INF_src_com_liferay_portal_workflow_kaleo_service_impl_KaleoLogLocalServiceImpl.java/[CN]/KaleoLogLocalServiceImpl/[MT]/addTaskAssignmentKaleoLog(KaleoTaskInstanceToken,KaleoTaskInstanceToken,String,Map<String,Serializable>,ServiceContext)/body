{
  KaleoInstanceToken kaleoInstanceToken=newKaleoTaskInstanceToken.getKaleoInstanceToken();
  KaleoLog kaleoLog=createKaleoLog(kaleoInstanceToken,LogType.TASK_ASSIGNMENT,serviceContext);
  kaleoLog.setKaleoTaskInstanceTokenId(newKaleoTaskInstanceToken.getKaleoTaskInstanceTokenId());
  KaleoNode currentKaleoNode=kaleoInstanceToken.getCurrentKaleoNode();
  kaleoLog.setKaleoDefinitionId(currentKaleoNode.getKaleoDefinitionId());
  kaleoLog.setKaleoNodeId(currentKaleoNode.getKaleoNodeId());
  kaleoLog.setKaleoNodeName(currentKaleoNode.getName());
  if (previousKaleoTaskInstanceToken != null) {
    kaleoLog.setPreviousAssigneeClassName(previousKaleoTaskInstanceToken.getAssigneeClassName());
    kaleoLog.setPreviousAssigneeClassPK(previousKaleoTaskInstanceToken.getAssigneeClassPK());
  }
  kaleoLog.setCurrentAssigneeClassName(newKaleoTaskInstanceToken.getAssigneeClassName());
  kaleoLog.setCurrentAssigneeClassPK(newKaleoTaskInstanceToken.getAssigneeClassPK());
  kaleoLog.setComment(comment);
  kaleoLog.setWorkflowContext(WorkflowContextUtil.convert(workflowContext));
  kaleoLogPersistence.update(kaleoLog,false);
  return kaleoLog;
}
