{
  Portlet portlet=_portletsPool.get(wsrpConsumerPortlet.getWsrpConsumerPortletId());
  if (portlet != null) {
    return portlet;
  }
  WSRPConsumer wsrpConsumer=wsrpConsumerPersistence.findByPrimaryKey(wsrpConsumerPortlet.getWsrpConsumerId());
  WSRPConsumerManager wsrpConsumerManager=WSRPConsumerManagerFactory.getWSRPConsumerManager(wsrpConsumer);
  PortletDescription portletDescription=wsrpConsumerManager.getPortletDescription(wsrpConsumerPortlet.getPortletHandle());
  StringBuilder sb=new StringBuilder();
  sb.append(ConsumerPortlet.PORTLET_NAME_PREFIX);
  sb.append(wsrpConsumerPortlet.getCompanyId());
  sb.append(StringPool.UNDERLINE);
  sb.append(wsrpConsumerPortlet.getWsrpConsumerPortletId());
  String portletId=PortalUtil.getJsSafePortletId(sb.toString());
  portlet=PortletLocalServiceUtil.newPortlet(wsrpConsumerPortlet.getCompanyId(),portletId);
  portlet.setTimestamp(System.currentTimeMillis());
  PortletApp portletApp=PortletLocalServiceUtil.getPortletApp(ClpSerializer.SERVLET_CONTEXT_NAME);
  portlet.setPortletApp(portletApp);
  portlet.setPortletName(portletId);
  portlet.setDisplayName(portletId);
  portlet.setPortletClass(ConsumerPortlet.class.getName());
  portlet.setFriendlyURLMapperClass(_FRIENDLY_URL_MAPPER);
  Map<String,String> initParams=portlet.getInitParams();
  initParams.put(InvokerPortlet.INIT_INVOKER_PORTLET_NAME,_CONSUMER_PORTLET_NAME);
  MarkupType[] markupTypes=portletDescription.getMarkupTypes();
  for (  MarkupType markupType : markupTypes) {
    Set<String> mimeTypePortletModes=new HashSet<String>();
    for (    String portletMode : markupType.getModes()) {
      portletMode=portletMode.toLowerCase();
      if (portletMode.startsWith("wsrp:")) {
        portletMode=portletMode.substring(5);
      }
      mimeTypePortletModes.add(portletMode);
    }
    portlet.getPortletModes().put(markupType.getMimeType(),mimeTypePortletModes);
    Set<String> mimeTypeWindowStates=new HashSet<String>();
    for (    String windowState : markupType.getWindowStates()) {
      windowState=windowState.toLowerCase();
      if (windowState.startsWith("wsrp:")) {
        windowState=windowState.substring(5);
      }
      mimeTypeWindowStates.add(windowState);
    }
    portlet.getWindowStates().put(markupType.getMimeType(),mimeTypeWindowStates);
  }
  String title=wsrpConsumerPortlet.getName();
  String shortTitle=getLocalizedStringValue(portletDescription.getShortTitle(),title);
  String keywords=StringUtil.merge(getLocalizedStringValues(portletDescription.getKeywords()),StringPool.SPACE);
  PortletInfo portletInfo=new PortletInfo(title,shortTitle,keywords);
  portlet.setPortletInfo(portletInfo);
  MessageElement[] messageElements=ExtensionUtil.getMessageElements(portletDescription.getExtensions());
  if (messageElements != null) {
    for (    MessageElement messageElement : messageElements) {
      setExtension(portlet,messageElement);
    }
  }
  _portletsPool.put(wsrpConsumerPortlet.getWsrpConsumerPortletId(),portlet);
  PortletBag portletBag=PortletBagPool.get(_CONSUMER_PORTLET_ID);
  portletBag=(PortletBag)portletBag.clone();
  portletBag.setPortletName(portletId);
  portletBag.setPortletInstance(new ConsumerPortlet());
  PortletBagPool.put(portletId,portletBag);
  return portlet;
}
