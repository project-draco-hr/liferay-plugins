{
  KaleoTaskAssignmentInstanceClp oldCplModel=(KaleoTaskAssignmentInstanceClp)oldModel;
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  try {
    currentThread.setContextClassLoader(_classLoader);
    try {
      Class<?> newModelClass=Class.forName("com.liferay.portal.workflow.kaleo.model.impl.KaleoTaskAssignmentInstanceImpl",true,_classLoader);
      Object newModel=newModelClass.newInstance();
      Method method0=newModelClass.getMethod("setKaleoTaskAssignmentInstanceId",new Class[]{Long.TYPE});
      Long value0=new Long(oldCplModel.getKaleoTaskAssignmentInstanceId());
      method0.invoke(newModel,value0);
      Method method1=newModelClass.getMethod("setGroupId",new Class[]{Long.TYPE});
      Long value1=new Long(oldCplModel.getGroupId());
      method1.invoke(newModel,value1);
      Method method2=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
      Long value2=new Long(oldCplModel.getCompanyId());
      method2.invoke(newModel,value2);
      Method method3=newModelClass.getMethod("setUserId",new Class[]{Long.TYPE});
      Long value3=new Long(oldCplModel.getUserId());
      method3.invoke(newModel,value3);
      Method method4=newModelClass.getMethod("setUserName",new Class[]{String.class});
      String value4=oldCplModel.getUserName();
      method4.invoke(newModel,value4);
      Method method5=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
      Date value5=oldCplModel.getCreateDate();
      method5.invoke(newModel,value5);
      Method method6=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
      Date value6=oldCplModel.getModifiedDate();
      method6.invoke(newModel,value6);
      Method method7=newModelClass.getMethod("setKaleoDefinitionId",new Class[]{Long.TYPE});
      Long value7=new Long(oldCplModel.getKaleoDefinitionId());
      method7.invoke(newModel,value7);
      Method method8=newModelClass.getMethod("setKaleoInstanceId",new Class[]{Long.TYPE});
      Long value8=new Long(oldCplModel.getKaleoInstanceId());
      method8.invoke(newModel,value8);
      Method method9=newModelClass.getMethod("setKaleoInstanceTokenId",new Class[]{Long.TYPE});
      Long value9=new Long(oldCplModel.getKaleoInstanceTokenId());
      method9.invoke(newModel,value9);
      Method method10=newModelClass.getMethod("setKaleoTaskInstanceTokenId",new Class[]{Long.TYPE});
      Long value10=new Long(oldCplModel.getKaleoTaskInstanceTokenId());
      method10.invoke(newModel,value10);
      Method method11=newModelClass.getMethod("setKaleoTaskId",new Class[]{Long.TYPE});
      Long value11=new Long(oldCplModel.getKaleoTaskId());
      method11.invoke(newModel,value11);
      Method method12=newModelClass.getMethod("setKaleoTaskName",new Class[]{String.class});
      String value12=oldCplModel.getKaleoTaskName();
      method12.invoke(newModel,value12);
      Method method13=newModelClass.getMethod("setAssigneeClassName",new Class[]{String.class});
      String value13=oldCplModel.getAssigneeClassName();
      method13.invoke(newModel,value13);
      Method method14=newModelClass.getMethod("setAssigneeClassPK",new Class[]{Long.TYPE});
      Long value14=new Long(oldCplModel.getAssigneeClassPK());
      method14.invoke(newModel,value14);
      Method method15=newModelClass.getMethod("setCompleted",new Class[]{Boolean.TYPE});
      Boolean value15=new Boolean(oldCplModel.getCompleted());
      method15.invoke(newModel,value15);
      Method method16=newModelClass.getMethod("setCompletionDate",new Class[]{Date.class});
      Date value16=oldCplModel.getCompletionDate();
      method16.invoke(newModel,value16);
      return newModel;
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  finally {
    currentThread.setContextClassLoader(contextClassLoader);
  }
  return oldModel;
}
