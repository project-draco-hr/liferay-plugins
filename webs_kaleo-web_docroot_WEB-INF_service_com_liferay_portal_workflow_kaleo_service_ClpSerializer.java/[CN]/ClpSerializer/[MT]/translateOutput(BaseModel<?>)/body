{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoActionImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoActionClp newModel=new KaleoActionClp();
        Method method0=oldModelClass.getMethod("getKaleoActionId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoActionId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoNodeId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeId(value7.longValue());
        Method method8=oldModelClass.getMethod("getKaleoNodeName");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeName(value8);
        Method method9=oldModelClass.getMethod("getName");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setName(value9);
        Method method10=oldModelClass.getMethod("getDescription");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setDescription(value10);
        Method method11=oldModelClass.getMethod("getExecutionType");
        String value11=(String)method11.invoke(oldModel,(Object[])null);
        newModel.setExecutionType(value11);
        Method method12=oldModelClass.getMethod("getScript");
        String value12=(String)method12.invoke(oldModel,(Object[])null);
        newModel.setScript(value12);
        Method method13=oldModelClass.getMethod("getScriptLanguage");
        String value13=(String)method13.invoke(oldModel,(Object[])null);
        newModel.setScriptLanguage(value13);
        Method method14=oldModelClass.getMethod("getPriority");
        Integer value14=(Integer)method14.invoke(oldModel,(Object[])null);
        newModel.setPriority(value14.intValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoDefinitionImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoDefinitionClp newModel=new KaleoDefinitionClp();
        Method method0=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getName");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setName(value6);
        Method method7=oldModelClass.getMethod("getTitle");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setTitle(value7);
        Method method8=oldModelClass.getMethod("getDescription");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setDescription(value8);
        Method method9=oldModelClass.getMethod("getVersion");
        Integer value9=(Integer)method9.invoke(oldModel,(Object[])null);
        newModel.setVersion(value9.intValue());
        Method method10=oldModelClass.getMethod("getActive");
        Boolean value10=(Boolean)method10.invoke(oldModel,(Object[])null);
        newModel.setActive(value10.booleanValue());
        Method method11=oldModelClass.getMethod("getStartKaleoNodeId");
        Long value11=(Long)method11.invoke(oldModel,(Object[])null);
        newModel.setStartKaleoNodeId(value11.longValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoInstanceImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoInstanceClp newModel=new KaleoInstanceClp();
        Method method0=oldModelClass.getMethod("getKaleoInstanceId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoInstanceId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoDefinitionName");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionName(value7);
        Method method8=oldModelClass.getMethod("getKaleoDefinitionVersion");
        Integer value8=(Integer)method8.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionVersion(value8.intValue());
        Method method9=oldModelClass.getMethod("getRootKaleoInstanceTokenId");
        Long value9=(Long)method9.invoke(oldModel,(Object[])null);
        newModel.setRootKaleoInstanceTokenId(value9.longValue());
        Method method10=oldModelClass.getMethod("getClassName");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setClassName(value10);
        Method method11=oldModelClass.getMethod("getClassPK");
        Long value11=(Long)method11.invoke(oldModel,(Object[])null);
        newModel.setClassPK(value11.longValue());
        Method method12=oldModelClass.getMethod("getCompleted");
        Boolean value12=(Boolean)method12.invoke(oldModel,(Object[])null);
        newModel.setCompleted(value12.booleanValue());
        Method method13=oldModelClass.getMethod("getCompletionDate");
        Date value13=(Date)method13.invoke(oldModel,(Object[])null);
        newModel.setCompletionDate(value13);
        Method method14=oldModelClass.getMethod("getContext");
        String value14=(String)method14.invoke(oldModel,(Object[])null);
        newModel.setContext(value14);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoInstanceTokenImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoInstanceTokenClp newModel=new KaleoInstanceTokenClp();
        Method method0=oldModelClass.getMethod("getKaleoInstanceTokenId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoInstanceTokenId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoInstanceId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoInstanceId(value6.longValue());
        Method method7=oldModelClass.getMethod("getParentKaleoInstanceTokenId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setParentKaleoInstanceTokenId(value7.longValue());
        Method method8=oldModelClass.getMethod("getCurrentKaleoNodeId");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setCurrentKaleoNodeId(value8.longValue());
        Method method9=oldModelClass.getMethod("getCurrentKaleoNodeName");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setCurrentKaleoNodeName(value9);
        Method method10=oldModelClass.getMethod("getCompleted");
        Boolean value10=(Boolean)method10.invoke(oldModel,(Object[])null);
        newModel.setCompleted(value10.booleanValue());
        Method method11=oldModelClass.getMethod("getCompletionDate");
        Date value11=(Date)method11.invoke(oldModel,(Object[])null);
        newModel.setCompletionDate(value11);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoLogImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoLogClp newModel=new KaleoLogClp();
        Method method0=oldModelClass.getMethod("getKaleoLogId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoLogId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoInstanceId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoInstanceId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoInstanceTokenId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoInstanceTokenId(value7.longValue());
        Method method8=oldModelClass.getMethod("getKaleoTaskInstanceTokenId");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setKaleoTaskInstanceTokenId(value8.longValue());
        Method method9=oldModelClass.getMethod("getKaleoNodeId");
        Long value9=(Long)method9.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeId(value9.longValue());
        Method method10=oldModelClass.getMethod("getKaleoNodeName");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeName(value10);
        Method method11=oldModelClass.getMethod("getTerminalKaleoNode");
        Boolean value11=(Boolean)method11.invoke(oldModel,(Object[])null);
        newModel.setTerminalKaleoNode(value11.booleanValue());
        Method method12=oldModelClass.getMethod("getKaleoActionId");
        Long value12=(Long)method12.invoke(oldModel,(Object[])null);
        newModel.setKaleoActionId(value12.longValue());
        Method method13=oldModelClass.getMethod("getKaleoActionName");
        String value13=(String)method13.invoke(oldModel,(Object[])null);
        newModel.setKaleoActionName(value13);
        Method method14=oldModelClass.getMethod("getKaleoActionDescription");
        String value14=(String)method14.invoke(oldModel,(Object[])null);
        newModel.setKaleoActionDescription(value14);
        Method method15=oldModelClass.getMethod("getPreviousKaleoNodeId");
        Long value15=(Long)method15.invoke(oldModel,(Object[])null);
        newModel.setPreviousKaleoNodeId(value15.longValue());
        Method method16=oldModelClass.getMethod("getPreviousKaleoNodeName");
        String value16=(String)method16.invoke(oldModel,(Object[])null);
        newModel.setPreviousKaleoNodeName(value16);
        Method method17=oldModelClass.getMethod("getPreviousAssigneeClassName");
        String value17=(String)method17.invoke(oldModel,(Object[])null);
        newModel.setPreviousAssigneeClassName(value17);
        Method method18=oldModelClass.getMethod("getPreviousAssigneeClassPK");
        Long value18=(Long)method18.invoke(oldModel,(Object[])null);
        newModel.setPreviousAssigneeClassPK(value18.longValue());
        Method method19=oldModelClass.getMethod("getCurrentAssigneeClassName");
        String value19=(String)method19.invoke(oldModel,(Object[])null);
        newModel.setCurrentAssigneeClassName(value19);
        Method method20=oldModelClass.getMethod("getCurrentAssigneeClassPK");
        Long value20=(Long)method20.invoke(oldModel,(Object[])null);
        newModel.setCurrentAssigneeClassPK(value20.longValue());
        Method method21=oldModelClass.getMethod("getType");
        String value21=(String)method21.invoke(oldModel,(Object[])null);
        newModel.setType(value21);
        Method method22=oldModelClass.getMethod("getComment");
        String value22=(String)method22.invoke(oldModel,(Object[])null);
        newModel.setComment(value22);
        Method method23=oldModelClass.getMethod("getStartDate");
        Date value23=(Date)method23.invoke(oldModel,(Object[])null);
        newModel.setStartDate(value23);
        Method method24=oldModelClass.getMethod("getEndDate");
        Date value24=(Date)method24.invoke(oldModel,(Object[])null);
        newModel.setEndDate(value24);
        Method method25=oldModelClass.getMethod("getDuration");
        Long value25=(Long)method25.invoke(oldModel,(Object[])null);
        newModel.setDuration(value25.longValue());
        Method method26=oldModelClass.getMethod("getContext");
        String value26=(String)method26.invoke(oldModel,(Object[])null);
        newModel.setContext(value26);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoNodeImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoNodeClp newModel=new KaleoNodeClp();
        Method method0=oldModelClass.getMethod("getKaleoNodeId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value6.longValue());
        Method method7=oldModelClass.getMethod("getName");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setName(value7);
        Method method8=oldModelClass.getMethod("getDescription");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setDescription(value8);
        Method method9=oldModelClass.getMethod("getType");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setType(value9);
        Method method10=oldModelClass.getMethod("getInitial");
        Boolean value10=(Boolean)method10.invoke(oldModel,(Object[])null);
        newModel.setInitial(value10.booleanValue());
        Method method11=oldModelClass.getMethod("getTerminal");
        Boolean value11=(Boolean)method11.invoke(oldModel,(Object[])null);
        newModel.setTerminal(value11.booleanValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoNotificationImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoNotificationClp newModel=new KaleoNotificationClp();
        Method method0=oldModelClass.getMethod("getKaleoNotificationId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoNotificationId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoNodeId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeId(value7.longValue());
        Method method8=oldModelClass.getMethod("getKaleoNodeName");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeName(value8);
        Method method9=oldModelClass.getMethod("getName");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setName(value9);
        Method method10=oldModelClass.getMethod("getDescription");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setDescription(value10);
        Method method11=oldModelClass.getMethod("getExecutionType");
        String value11=(String)method11.invoke(oldModel,(Object[])null);
        newModel.setExecutionType(value11);
        Method method12=oldModelClass.getMethod("getTemplate");
        String value12=(String)method12.invoke(oldModel,(Object[])null);
        newModel.setTemplate(value12);
        Method method13=oldModelClass.getMethod("getTemplateLanguage");
        String value13=(String)method13.invoke(oldModel,(Object[])null);
        newModel.setTemplateLanguage(value13);
        Method method14=oldModelClass.getMethod("getNotificationTypes");
        String value14=(String)method14.invoke(oldModel,(Object[])null);
        newModel.setNotificationTypes(value14);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoNotificationRecipientImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoNotificationRecipientClp newModel=new KaleoNotificationRecipientClp();
        Method method0=oldModelClass.getMethod("getKaleoNotificationRecipientId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoNotificationRecipientId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoNotificationId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoNotificationId(value6.longValue());
        Method method7=oldModelClass.getMethod("getRecipientClassName");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setRecipientClassName(value7);
        Method method8=oldModelClass.getMethod("getRecipientClassPK");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setRecipientClassPK(value8.longValue());
        Method method9=oldModelClass.getMethod("getAddress");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setAddress(value9);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoTaskImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoTaskClp newModel=new KaleoTaskClp();
        Method method0=oldModelClass.getMethod("getKaleoTaskId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoTaskId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoNodeId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeId(value7.longValue());
        Method method8=oldModelClass.getMethod("getName");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setName(value8);
        Method method9=oldModelClass.getMethod("getDescription");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setDescription(value9);
        Method method10=oldModelClass.getMethod("getDueDateDuration");
        Double value10=(Double)method10.invoke(oldModel,(Object[])null);
        newModel.setDueDateDuration(value10.doubleValue());
        Method method11=oldModelClass.getMethod("getDueDateScale");
        String value11=(String)method11.invoke(oldModel,(Object[])null);
        newModel.setDueDateScale(value11);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoTaskAssignmentImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoTaskAssignmentClp newModel=new KaleoTaskAssignmentClp();
        Method method0=oldModelClass.getMethod("getKaleoTaskAssignmentId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoTaskAssignmentId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoNodeId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeId(value7.longValue());
        Method method8=oldModelClass.getMethod("getKaleoTaskId");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setKaleoTaskId(value8.longValue());
        Method method9=oldModelClass.getMethod("getAssigneeClassName");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setAssigneeClassName(value9);
        Method method10=oldModelClass.getMethod("getAssigneeClassPK");
        Long value10=(Long)method10.invoke(oldModel,(Object[])null);
        newModel.setAssigneeClassPK(value10.longValue());
        Method method11=oldModelClass.getMethod("getDefaultAssignment");
        Boolean value11=(Boolean)method11.invoke(oldModel,(Object[])null);
        newModel.setDefaultAssignment(value11.booleanValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoTaskInstanceTokenImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoTaskInstanceTokenClp newModel=new KaleoTaskInstanceTokenClp();
        Method method0=oldModelClass.getMethod("getKaleoTaskInstanceTokenId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoTaskInstanceTokenId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoInstanceId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoInstanceId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoInstanceTokenId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoInstanceTokenId(value7.longValue());
        Method method8=oldModelClass.getMethod("getKaleoTaskId");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setKaleoTaskId(value8.longValue());
        Method method9=oldModelClass.getMethod("getKaleoTaskName");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setKaleoTaskName(value9);
        Method method10=oldModelClass.getMethod("getAssigneeClassName");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setAssigneeClassName(value10);
        Method method11=oldModelClass.getMethod("getAssigneeClassPK");
        Long value11=(Long)method11.invoke(oldModel,(Object[])null);
        newModel.setAssigneeClassPK(value11.longValue());
        Method method12=oldModelClass.getMethod("getCompletionUserId");
        Long value12=(Long)method12.invoke(oldModel,(Object[])null);
        newModel.setCompletionUserId(value12.longValue());
        Method method13=oldModelClass.getMethod("getCompleted");
        Boolean value13=(Boolean)method13.invoke(oldModel,(Object[])null);
        newModel.setCompleted(value13.booleanValue());
        Method method14=oldModelClass.getMethod("getCompletionDate");
        Date value14=(Date)method14.invoke(oldModel,(Object[])null);
        newModel.setCompletionDate(value14);
        Method method15=oldModelClass.getMethod("getDueDate");
        Date value15=(Date)method15.invoke(oldModel,(Object[])null);
        newModel.setDueDate(value15);
        Method method16=oldModelClass.getMethod("getContext");
        String value16=(String)method16.invoke(oldModel,(Object[])null);
        newModel.setContext(value16);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.portal.workflow.kaleo.model.impl.KaleoTransitionImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        KaleoTransitionClp newModel=new KaleoTransitionClp();
        Method method0=oldModelClass.getMethod("getKaleoTransitionId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setKaleoTransitionId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getKaleoDefinitionId");
        Long value6=(Long)method6.invoke(oldModel,(Object[])null);
        newModel.setKaleoDefinitionId(value6.longValue());
        Method method7=oldModelClass.getMethod("getKaleoNodeId");
        Long value7=(Long)method7.invoke(oldModel,(Object[])null);
        newModel.setKaleoNodeId(value7.longValue());
        Method method8=oldModelClass.getMethod("getName");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setName(value8);
        Method method9=oldModelClass.getMethod("getDescription");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setDescription(value9);
        Method method10=oldModelClass.getMethod("getSourceKaleoNodeId");
        Long value10=(Long)method10.invoke(oldModel,(Object[])null);
        newModel.setSourceKaleoNodeId(value10.longValue());
        Method method11=oldModelClass.getMethod("getSourceKaleoNodeName");
        String value11=(String)method11.invoke(oldModel,(Object[])null);
        newModel.setSourceKaleoNodeName(value11);
        Method method12=oldModelClass.getMethod("getTargetKaleoNodeId");
        Long value12=(Long)method12.invoke(oldModel,(Object[])null);
        newModel.setTargetKaleoNodeId(value12.longValue());
        Method method13=oldModelClass.getMethod("getTargetKaleoNodeName");
        String value13=(String)method13.invoke(oldModel,(Object[])null);
        newModel.setTargetKaleoNodeName(value13);
        Method method14=oldModelClass.getMethod("getDefaultTransition");
        Boolean value14=(Boolean)method14.invoke(oldModel,(Object[])null);
        newModel.setDefaultTransition(value14.booleanValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
