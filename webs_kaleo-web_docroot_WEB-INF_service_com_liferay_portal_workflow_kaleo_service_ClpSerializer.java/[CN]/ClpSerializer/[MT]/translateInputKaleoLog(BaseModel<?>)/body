{
  KaleoLogClp oldCplModel=(KaleoLogClp)oldModel;
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  try {
    currentThread.setContextClassLoader(_classLoader);
    try {
      Class<?> newModelClass=Class.forName("com.liferay.portal.workflow.kaleo.model.impl.KaleoLogImpl",true,_classLoader);
      Object newModel=newModelClass.newInstance();
      Method method0=newModelClass.getMethod("setKaleoLogId",new Class[]{Long.TYPE});
      Long value0=new Long(oldCplModel.getKaleoLogId());
      method0.invoke(newModel,value0);
      Method method1=newModelClass.getMethod("setGroupId",new Class[]{Long.TYPE});
      Long value1=new Long(oldCplModel.getGroupId());
      method1.invoke(newModel,value1);
      Method method2=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
      Long value2=new Long(oldCplModel.getCompanyId());
      method2.invoke(newModel,value2);
      Method method3=newModelClass.getMethod("setUserId",new Class[]{Long.TYPE});
      Long value3=new Long(oldCplModel.getUserId());
      method3.invoke(newModel,value3);
      Method method4=newModelClass.getMethod("setUserName",new Class[]{String.class});
      String value4=oldCplModel.getUserName();
      method4.invoke(newModel,value4);
      Method method5=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
      Date value5=oldCplModel.getCreateDate();
      method5.invoke(newModel,value5);
      Method method6=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
      Date value6=oldCplModel.getModifiedDate();
      method6.invoke(newModel,value6);
      Method method7=newModelClass.getMethod("setKaleoClassName",new Class[]{String.class});
      String value7=oldCplModel.getKaleoClassName();
      method7.invoke(newModel,value7);
      Method method8=newModelClass.getMethod("setKaleoClassPK",new Class[]{Long.TYPE});
      Long value8=new Long(oldCplModel.getKaleoClassPK());
      method8.invoke(newModel,value8);
      Method method9=newModelClass.getMethod("setKaleoDefinitionId",new Class[]{Long.TYPE});
      Long value9=new Long(oldCplModel.getKaleoDefinitionId());
      method9.invoke(newModel,value9);
      Method method10=newModelClass.getMethod("setKaleoInstanceId",new Class[]{Long.TYPE});
      Long value10=new Long(oldCplModel.getKaleoInstanceId());
      method10.invoke(newModel,value10);
      Method method11=newModelClass.getMethod("setKaleoInstanceTokenId",new Class[]{Long.TYPE});
      Long value11=new Long(oldCplModel.getKaleoInstanceTokenId());
      method11.invoke(newModel,value11);
      Method method12=newModelClass.getMethod("setKaleoTaskInstanceTokenId",new Class[]{Long.TYPE});
      Long value12=new Long(oldCplModel.getKaleoTaskInstanceTokenId());
      method12.invoke(newModel,value12);
      Method method13=newModelClass.getMethod("setKaleoNodeName",new Class[]{String.class});
      String value13=oldCplModel.getKaleoNodeName();
      method13.invoke(newModel,value13);
      Method method14=newModelClass.getMethod("setTerminalKaleoNode",new Class[]{Boolean.TYPE});
      Boolean value14=new Boolean(oldCplModel.getTerminalKaleoNode());
      method14.invoke(newModel,value14);
      Method method15=newModelClass.getMethod("setKaleoActionId",new Class[]{Long.TYPE});
      Long value15=new Long(oldCplModel.getKaleoActionId());
      method15.invoke(newModel,value15);
      Method method16=newModelClass.getMethod("setKaleoActionName",new Class[]{String.class});
      String value16=oldCplModel.getKaleoActionName();
      method16.invoke(newModel,value16);
      Method method17=newModelClass.getMethod("setKaleoActionDescription",new Class[]{String.class});
      String value17=oldCplModel.getKaleoActionDescription();
      method17.invoke(newModel,value17);
      Method method18=newModelClass.getMethod("setPreviousKaleoNodeId",new Class[]{Long.TYPE});
      Long value18=new Long(oldCplModel.getPreviousKaleoNodeId());
      method18.invoke(newModel,value18);
      Method method19=newModelClass.getMethod("setPreviousKaleoNodeName",new Class[]{String.class});
      String value19=oldCplModel.getPreviousKaleoNodeName();
      method19.invoke(newModel,value19);
      Method method20=newModelClass.getMethod("setPreviousAssigneeClassName",new Class[]{String.class});
      String value20=oldCplModel.getPreviousAssigneeClassName();
      method20.invoke(newModel,value20);
      Method method21=newModelClass.getMethod("setPreviousAssigneeClassPK",new Class[]{Long.TYPE});
      Long value21=new Long(oldCplModel.getPreviousAssigneeClassPK());
      method21.invoke(newModel,value21);
      Method method22=newModelClass.getMethod("setCurrentAssigneeClassName",new Class[]{String.class});
      String value22=oldCplModel.getCurrentAssigneeClassName();
      method22.invoke(newModel,value22);
      Method method23=newModelClass.getMethod("setCurrentAssigneeClassPK",new Class[]{Long.TYPE});
      Long value23=new Long(oldCplModel.getCurrentAssigneeClassPK());
      method23.invoke(newModel,value23);
      Method method24=newModelClass.getMethod("setType",new Class[]{String.class});
      String value24=oldCplModel.getType();
      method24.invoke(newModel,value24);
      Method method25=newModelClass.getMethod("setComment",new Class[]{String.class});
      String value25=oldCplModel.getComment();
      method25.invoke(newModel,value25);
      Method method26=newModelClass.getMethod("setStartDate",new Class[]{Date.class});
      Date value26=oldCplModel.getStartDate();
      method26.invoke(newModel,value26);
      Method method27=newModelClass.getMethod("setEndDate",new Class[]{Date.class});
      Date value27=oldCplModel.getEndDate();
      method27.invoke(newModel,value27);
      Method method28=newModelClass.getMethod("setDuration",new Class[]{Long.TYPE});
      Long value28=new Long(oldCplModel.getDuration());
      method28.invoke(newModel,value28);
      Method method29=newModelClass.getMethod("setWorkflowContext",new Class[]{String.class});
      String value29=oldCplModel.getWorkflowContext();
      method29.invoke(newModel,value29);
      return newModel;
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  finally {
    currentThread.setContextClassLoader(contextClassLoader);
  }
  return oldModel;
}
