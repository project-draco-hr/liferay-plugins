{
  HRTaskCacheModel hrTaskCacheModel=new HRTaskCacheModel();
  hrTaskCacheModel.hrTaskId=getHrTaskId();
  hrTaskCacheModel.groupId=getGroupId();
  hrTaskCacheModel.companyId=getCompanyId();
  hrTaskCacheModel.userId=getUserId();
  hrTaskCacheModel.userName=getUserName();
  String userName=hrTaskCacheModel.userName;
  if ((userName != null) && (userName.length() == 0)) {
    hrTaskCacheModel.userName=null;
  }
  Date createDate=getCreateDate();
  if (createDate != null) {
    hrTaskCacheModel.createDate=createDate.getTime();
  }
 else {
    hrTaskCacheModel.createDate=Long.MIN_VALUE;
  }
  Date modifiedDate=getModifiedDate();
  if (modifiedDate != null) {
    hrTaskCacheModel.modifiedDate=modifiedDate.getTime();
  }
 else {
    hrTaskCacheModel.modifiedDate=Long.MIN_VALUE;
  }
  hrTaskCacheModel.hrBillabilityId=getHrBillabilityId();
  hrTaskCacheModel.hrProjectId=getHrProjectId();
  hrTaskCacheModel.hrTaskStatusId=getHrTaskStatusId();
  hrTaskCacheModel.parentHRTaskId=getParentHRTaskId();
  hrTaskCacheModel.name=getName();
  String name=hrTaskCacheModel.name;
  if ((name != null) && (name.length() == 0)) {
    hrTaskCacheModel.name=null;
  }
  hrTaskCacheModel.description=getDescription();
  String description=hrTaskCacheModel.description;
  if ((description != null) && (description.length() == 0)) {
    hrTaskCacheModel.description=null;
  }
  Date estimatedStartDate=getEstimatedStartDate();
  if (estimatedStartDate != null) {
    hrTaskCacheModel.estimatedStartDate=estimatedStartDate.getTime();
  }
 else {
    hrTaskCacheModel.estimatedStartDate=Long.MIN_VALUE;
  }
  Date estimatedEndDate=getEstimatedEndDate();
  if (estimatedEndDate != null) {
    hrTaskCacheModel.estimatedEndDate=estimatedEndDate.getTime();
  }
 else {
    hrTaskCacheModel.estimatedEndDate=Long.MIN_VALUE;
  }
  hrTaskCacheModel.estimatedHours=getEstimatedHours();
  hrTaskCacheModel.estimatedHoursCost=getEstimatedHoursCost();
  hrTaskCacheModel.estimatedHoursCostCurrencyCode=getEstimatedHoursCostCurrencyCode();
  String estimatedHoursCostCurrencyCode=hrTaskCacheModel.estimatedHoursCostCurrencyCode;
  if ((estimatedHoursCostCurrencyCode != null) && (estimatedHoursCostCurrencyCode.length() == 0)) {
    hrTaskCacheModel.estimatedHoursCostCurrencyCode=null;
  }
  hrTaskCacheModel.estimatedExpenses=getEstimatedExpenses();
  hrTaskCacheModel.estimatedExpensesCurrencyCode=getEstimatedExpensesCurrencyCode();
  String estimatedExpensesCurrencyCode=hrTaskCacheModel.estimatedExpensesCurrencyCode;
  if ((estimatedExpensesCurrencyCode != null) && (estimatedExpensesCurrencyCode.length() == 0)) {
    hrTaskCacheModel.estimatedExpensesCurrencyCode=null;
  }
  Date actualStartDate=getActualStartDate();
  if (actualStartDate != null) {
    hrTaskCacheModel.actualStartDate=actualStartDate.getTime();
  }
 else {
    hrTaskCacheModel.actualStartDate=Long.MIN_VALUE;
  }
  Date actualEndDate=getActualEndDate();
  if (actualEndDate != null) {
    hrTaskCacheModel.actualEndDate=actualEndDate.getTime();
  }
 else {
    hrTaskCacheModel.actualEndDate=Long.MIN_VALUE;
  }
  hrTaskCacheModel.actualHours=getActualHours();
  hrTaskCacheModel.actualHoursCost=getActualHoursCost();
  hrTaskCacheModel.actualHoursCostCurrencyCode=getActualHoursCostCurrencyCode();
  String actualHoursCostCurrencyCode=hrTaskCacheModel.actualHoursCostCurrencyCode;
  if ((actualHoursCostCurrencyCode != null) && (actualHoursCostCurrencyCode.length() == 0)) {
    hrTaskCacheModel.actualHoursCostCurrencyCode=null;
  }
  hrTaskCacheModel.actualExpenses=getActualExpenses();
  hrTaskCacheModel.actualExpensesCurrencyCode=getActualExpensesCurrencyCode();
  String actualExpensesCurrencyCode=hrTaskCacheModel.actualExpensesCurrencyCode;
  if ((actualExpensesCurrencyCode != null) && (actualExpensesCurrencyCode.length() == 0)) {
    hrTaskCacheModel.actualExpensesCurrencyCode=null;
  }
  return hrTaskCacheModel;
}
