{
  long groupId=ParamUtil.getLong(actionRequest,"groupId");
  long[] receiverUserIds=getLongArray(actionRequest,"receiverUserIds");
  String[] receiverEmailAddresses=getStringArray(actionRequest,"receiverEmailAddresses");
  long invitedRoleId=ParamUtil.getLong(actionRequest,"invitedRoleId");
  long invitedTeamId=ParamUtil.getLong(actionRequest,"invitedTeamId");
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  if (!UserLocalServiceUtil.hasGroupUser(groupId,themeDisplay.getUserId())) {
    return;
  }
  ServiceContext serviceContext=ServiceContextFactory.getInstance(actionRequest);
  PortletURL portletURL=PortletURLFactoryUtil.create(actionRequest,PortletKeys.SITE_REDIRECTOR,themeDisplay.getPlid(),PortletRequest.RENDER_PHASE);
  portletURL.setParameter("struts_action","/my_sites/view");
  portletURL.setParameter("groupId",String.valueOf(groupId));
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  portletURL.setParameter("privateLayout",String.valueOf(!group.hasPublicLayouts()));
  portletURL.setWindowState(LiferayWindowState.NORMAL);
  String createAccountURL=PortalUtil.getCreateAccountURL(PortalUtil.getHttpServletRequest(actionRequest),themeDisplay);
  serviceContext.setAttribute("createAccountURL",createAccountURL);
  createAccountURL=HttpUtil.addParameter(createAccountURL,"redirect",portletURL.toString());
  String loginURL=themeDisplay.getPortalURL() + themeDisplay.getURLSignIn();
  loginURL=HttpUtil.addParameter(loginURL,"redirect",portletURL.toString());
  serviceContext.setAttribute("loginURL",loginURL);
  MemberRequestLocalServiceUtil.addMemberRequests(themeDisplay.getUserId(),groupId,receiverUserIds,invitedRoleId,invitedTeamId,serviceContext);
  MemberRequestLocalServiceUtil.addMemberRequests(themeDisplay.getUserId(),groupId,receiverEmailAddresses,invitedRoleId,invitedTeamId,serviceContext);
}
