{
  assetSharingEntry=toUnwrappedModel(assetSharingEntry);
  boolean isNew=assetSharingEntry.isNew();
  AssetSharingEntryModelImpl assetSharingEntryModelImpl=(AssetSharingEntryModelImpl)assetSharingEntry;
  Session session=null;
  try {
    session=openSession();
    if (assetSharingEntry.isNew()) {
      session.save(assetSharingEntry);
      assetSharingEntry.setNew(false);
    }
 else {
      session.merge(assetSharingEntry);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !AssetSharingEntryModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((assetSharingEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetSharingEntryModelImpl.getOriginalClassNameId(),assetSharingEntryModelImpl.getOriginalClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
      args=new Object[]{assetSharingEntryModelImpl.getClassNameId(),assetSharingEntryModelImpl.getClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
    }
    if ((assetSharingEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_S_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetSharingEntryModelImpl.getOriginalSharedToClassNameId(),assetSharingEntryModelImpl.getOriginalSharedToClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_S_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_S_S,args);
      args=new Object[]{assetSharingEntryModelImpl.getSharedToClassNameId(),assetSharingEntryModelImpl.getSharedToClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_S_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_S_S,args);
    }
    if ((assetSharingEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetSharingEntryModelImpl.getOriginalClassNameId(),assetSharingEntryModelImpl.getOriginalClassPK(),assetSharingEntryModelImpl.getOriginalSharedToClassNameId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_S,args);
      args=new Object[]{assetSharingEntryModelImpl.getClassNameId(),assetSharingEntryModelImpl.getClassPK(),assetSharingEntryModelImpl.getSharedToClassNameId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_S,args);
    }
    if ((assetSharingEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetSharingEntryModelImpl.getOriginalClassNameId(),assetSharingEntryModelImpl.getOriginalSharedToClassNameId(),assetSharingEntryModelImpl.getOriginalSharedToClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_S_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S_S,args);
      args=new Object[]{assetSharingEntryModelImpl.getClassNameId(),assetSharingEntryModelImpl.getSharedToClassNameId(),assetSharingEntryModelImpl.getSharedToClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_S_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S_S,args);
    }
  }
  EntityCacheUtil.putResult(AssetSharingEntryModelImpl.ENTITY_CACHE_ENABLED,AssetSharingEntryImpl.class,assetSharingEntry.getPrimaryKey(),assetSharingEntry,false);
  assetSharingEntry.resetOriginalValues();
  return assetSharingEntry;
}
