{
  JSONObject webRTCJSONObject=JSONFactoryUtil.createJSONObject();
  JSONArray webRTCClientsJSONArray=JSONFactoryUtil.createJSONArray();
  for (  Long userId : _webRTCManager.getAvailableWebRTCClientIds()) {
    if (userId != pollerRequest.getUserId()) {
      webRTCClientsJSONArray.put(userId);
    }
  }
  webRTCJSONObject.put("clients",webRTCClientsJSONArray);
  WebRTCClient webRTCClient=_webRTCManager.getWebRTCClient(pollerRequest.getUserId());
  if (webRTCClient != null) {
    JSONArray webRTCMailsJSONArray=JSONFactoryUtil.createJSONArray();
    List<WebRTCMail> webRTCMails=webRTCClient.getOutgoingWebRTCMailbox().popWebRTCMails();
    for (    WebRTCMail webRTCMail : webRTCMails) {
      String messageType=webRTCMail.getMessageType();
      String messageJSON=webRTCMail.getMessageJSON();
      long sourceUserId=webRTCMail.getSourceUserId();
      JSONObject mailJSONObject=JSONFactoryUtil.createJSONObject();
      mailJSONObject.put("type",messageType);
      mailJSONObject.put("msg",messageJSON);
      mailJSONObject.put("source_user_id",sourceUserId);
      webRTCMailsJSONArray.put(mailJSONObject);
    }
    webRTCJSONObject.put("mails",webRTCMailsJSONArray);
  }
  pollerResponse.setParameter("webrtc",webRTCJSONObject);
}
