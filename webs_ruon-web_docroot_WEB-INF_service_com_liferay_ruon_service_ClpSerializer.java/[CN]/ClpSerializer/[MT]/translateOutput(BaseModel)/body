{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.ruon.model.impl.NetworkImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        NetworkClp newModel=new NetworkClp();
        Method method0=oldModelClass.getMethod("getNetworkId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setNetworkId(value0.longValue());
        Method method1=oldModelClass.getMethod("getName");
        String value1=(String)method1.invoke(oldModel,(Object[])null);
        newModel.setName(value1);
        Method method2=oldModelClass.getMethod("getTtl");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setTtl(value2.longValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.ruon.model.impl.PresenceImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        PresenceClp newModel=new PresenceClp();
        Method method0=oldModelClass.getMethod("getPresenceId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setPresenceId(value0.longValue());
        Method method1=oldModelClass.getMethod("getUserId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setUserId(value1.longValue());
        Method method2=oldModelClass.getMethod("getModifiedDate");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value2.longValue());
        Method method3=oldModelClass.getMethod("getNetworkId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setNetworkId(value3.longValue());
        Method method4=oldModelClass.getMethod("getOnline");
        Boolean value4=(Boolean)method4.invoke(oldModel,(Object[])null);
        newModel.setOnline(value4.booleanValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
