{
  ProcessSession processSession=ProcessSystemUtil.getCurrentSession();
  Assert.notNull(processSession,"No process session while reading workflow entities.");
  setId(workflowInstance.getPrimaryKey());
  setTenantId(workflowInstance.getCompanyId());
  Class<?> setupId=WorkflowEntityBridgeUtil.getSetupClassForName(workflowInstance.getSetupId());
  setSetupId(setupId);
  setBusinessId(workflowInstance.getFriendlyId());
  setRelationType(workflowInstance.getRelationClassName());
  long relationPK=workflowInstance.getRelationClassPK();
  if (relationPK == 0) {
    setRelationId(null);
  }
 else {
    setRelationId(relationPK);
  }
  ProcessModel processModel=processSession.getService().getProcessModel(workflowInstance.getWorkflowDefinitionId());
  setProcessModelId(processModel.getProcessModelId());
  setProcessModelVersion(processModel.getProcessModelVersion());
  setNestedProcessModelIds(workflowInstance.getNestedWorkflowDefinitionIds());
  setNestedProcessVersions(workflowInstance.getNestedWorkflowDefinitionVersions());
  setNestedRelatedElements(workflowInstance.getNestedRelatedElements());
  setCreatedAt(workflowInstance.getCreateDate());
  setModifiedAt(workflowInstance.getModifiedDate());
  setFinishedAt(workflowInstance.getFinishedDated());
  setParent(parentWorkflowInstanceBridge);
  setCurrentElement(workflowInstance.getCurrentElementName());
  setRelatedElement(workflowInstance.getRelatedElementName());
  setFinished(workflowInstance.getFinished());
  setActive(workflowInstance.getActive());
  setXmlAttributeMap(workflowInstance.getAttributes());
  postLoad();
  if (loadChildren) {
    List<ProcessInstance> processInstances=(List<ProcessInstance>)WorkflowEntityBridgeUtil.transferLoadedObjects(workflowInstance.getChildren(),this,loadChildren);
    setChildren(processInstances);
  }
}
