{
  long userIdLong=GetterUtil.getLong(userId.getUserId(securityToken));
  User user=UserLocalServiceUtil.getUserById(userIdLong);
  Group group=user.getGroup();
  long groupIdLong=group.getGroupId();
  Http.Options options=new Http.Options();
  options.setLocation(mediaItem.getUrl());
  byte[] byteArray=HttpUtil.URLtoByteArray(options);
  String fileName=getFileName(mediaItem,options);
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddCommunityPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  String extension=FileUtil.getExtension(fileName);
  serviceContext.setAttribute("extension",extension);
  serviceContext.setAttribute("sourceFileName",fileName);
  serviceContext.setExpandoBridgeAttributes(SerializerUtil.toExpandoAttributes(mediaItem,_MEDIA_ITEM_FIELDS,user.getCompanyId(),DLFileEntry.class.getName()));
  serviceContext.setScopeGroupId(groupIdLong);
  if (mediaItemId == null) {
    long albumIdLong=GetterUtil.getLong(albumId);
    DLAppServiceUtil.addFileEntry(groupIdLong,albumIdLong,fileName,mediaItem.getDescription(),StringPool.BLANK,byteArray,serviceContext);
  }
 else {
    long mediaItemIdLong=GetterUtil.getLong(mediaItemId);
    FileEntry fileEntry=DLAppLocalServiceUtil.getFileEntry(mediaItemIdLong);
    serviceContext.setCreateDate(fileEntry.getCreateDate());
    serviceContext.setModifiedDate(fileEntry.getModifiedDate());
    DLAppServiceUtil.updateFileEntry(fileEntry.getFileEntryId(),fileName,mediaItem.getTitle(),mediaItem.getDescription(),StringPool.BLANK,false,byteArray,serviceContext);
  }
}
