{
  long userIdLong=GetterUtil.getLong(userId.getUserId(securityToken));
  User user=UserLocalServiceUtil.getUserById(userIdLong);
  Group group=user.getGroup();
  long groupIdLong=group.getGroupId();
  Http.Options options=new Http.Options();
  options.setLocation(mediaItem.getUrl());
  byte[] byteArray=HttpUtil.URLtoByteArray(options);
  String fileName=getFileName(mediaItem,options);
  JSONObject extraSettingsJSONObject=JSONFactoryUtil.createJSONObject();
  extraSettingsJSONObject.put("DURATION",mediaItem.getDuration());
  SerializerUtil.copyProperties(mediaItem,extraSettingsJSONObject,_MEDIA_ITEM_FIELDS);
  if (mediaItemId == null) {
    long albumIdLong=GetterUtil.getLong(albumId);
    ServiceContext serviceContext=new ServiceContext();
    serviceContext.setAddCommunityPermissions(true);
    serviceContext.setAddGuestPermissions(true);
    serviceContext.setScopeGroupId(groupIdLong);
    DLAppLocalServiceUtil.addFileEntry(userIdLong,groupIdLong,albumIdLong,fileName,mediaItem.getDescription(),StringPool.BLANK,extraSettingsJSONObject.toString(),byteArray,serviceContext);
  }
 else {
    long mediaItemIdLong=GetterUtil.getLong(mediaItemId);
    DLFileEntry dlFileEntry=DLAppLocalServiceUtil.getFileEntry(mediaItemIdLong);
    ServiceContext serviceContext=new ServiceContext();
    serviceContext.setAddCommunityPermissions(true);
    serviceContext.setAddGuestPermissions(true);
    serviceContext.setCreateDate(dlFileEntry.getCreateDate());
    serviceContext.setModifiedDate(dlFileEntry.getModifiedDate());
    serviceContext.setScopeGroupId(groupIdLong);
    DLAppLocalServiceUtil.updateFileEntry(userIdLong,dlFileEntry.getFileEntryId(),fileName,mediaItem.getTitle(),mediaItem.getDescription(),StringPool.BLANK,false,extraSettingsJSONObject.toString(),byteArray,serviceContext);
  }
}
