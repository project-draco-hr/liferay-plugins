{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  long groupId=PortalUtil.getScopeGroupId(actionRequest);
  String className=ParamUtil.getString(actionRequest,"className");
  long classPK=ParamUtil.getLong(actionRequest,"classPK");
  long messageId=ParamUtil.getLong(actionRequest,"messageId");
  long parentMessageId=ParamUtil.getLong(actionRequest,"parentMessageId");
  String subject=ParamUtil.getString(actionRequest,"subject");
  String body=ParamUtil.getString(actionRequest,"body");
  Function<String,ServiceContext> serviceContextFunction=new ServiceContextFunction(actionRequest);
  DiscussionPermission discussionPermission=CommentManagerUtil.getDiscussionPermission(themeDisplay.getPermissionChecker());
  User user=themeDisplay.getUser();
  if (cmd.equals(Constants.DELETE)) {
    discussionPermission.checkDeletePermission(className,classPK,messageId,user.getUserId());
    CommentManagerUtil.deleteComment(messageId);
  }
 else   if (messageId <= 0) {
    discussionPermission.checkAddPermission(themeDisplay.getCompanyId(),groupId,className,classPK,user.getUserId());
    CommentManagerUtil.addComment(user.getUserId(),className,classPK,user.getFullName(),parentMessageId,subject,body,serviceContextFunction);
  }
 else {
    discussionPermission.checkUpdatePermission(className,classPK,messageId,user.getUserId());
    CommentManagerUtil.updateComment(user.getUserId(),className,classPK,messageId,subject,body,serviceContextFunction);
  }
}
