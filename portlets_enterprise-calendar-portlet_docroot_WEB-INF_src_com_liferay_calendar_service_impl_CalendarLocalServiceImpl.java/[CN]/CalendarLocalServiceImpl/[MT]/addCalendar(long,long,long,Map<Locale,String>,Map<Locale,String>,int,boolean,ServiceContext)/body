{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  validate(nameMap);
  long calendarId=counterLocalService.increment();
  Calendar calendar=calendarPersistence.create(calendarId);
  calendar.setUuid(serviceContext.getUuid());
  calendar.setGroupId(groupId);
  calendar.setCompanyId(user.getCompanyId());
  calendar.setUserId(user.getUserId());
  calendar.setUserName(user.getFullName());
  calendar.setCreateDate(serviceContext.getCreateDate(now));
  calendar.setModifiedDate(serviceContext.getModifiedDate(now));
  calendar.setCalendarResourceId(calendarResourceId);
  calendar.setNameMap(nameMap);
  calendar.setDescriptionMap(descriptionMap);
  if (color <= 0) {
    color=PortletPropsValues.CALENDAR_COLOR_DEFAULT;
  }
  calendar.setColor(color);
  calendar.setDefaultCalendar(defaultCalendar);
  calendarPersistence.update(calendar,false);
  resourceLocalService.addModelResources(calendar,serviceContext);
  if (defaultCalendar) {
    List<Calendar> calendarResourceCalendars=getCalendarResourceCalendars(groupId,calendarResourceId);
    for (    Calendar calendarResourceCalendar : calendarResourceCalendars) {
      updateDefaultCalendar(calendarResourceCalendar,calendar.equals(calendarResourceCalendar));
    }
    CalendarResource calendarResource=calendarResourceLocalService.fetchCalendarResource(calendarResourceId);
    if (calendarResource != null) {
      calendarResource.setDefaultCalendarId(calendarId);
      calendarResourcePersistence.update(calendarResource,false);
    }
  }
  return calendar;
}
