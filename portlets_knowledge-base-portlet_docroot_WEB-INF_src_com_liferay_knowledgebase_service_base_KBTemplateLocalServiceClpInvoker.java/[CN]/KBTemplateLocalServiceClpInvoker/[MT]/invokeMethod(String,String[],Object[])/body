{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return KBTemplateLocalServiceUtil.addKBTemplate((com.liferay.knowledgebase.model.KBTemplate)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return KBTemplateLocalServiceUtil.createKBTemplate(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return KBTemplateLocalServiceUtil.deleteKBTemplate(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return KBTemplateLocalServiceUtil.deleteKBTemplate((com.liferay.knowledgebase.model.KBTemplate)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return KBTemplateLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return KBTemplateLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return KBTemplateLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return KBTemplateLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return KBTemplateLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return KBTemplateLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return KBTemplateLocalServiceUtil.fetchKBTemplate(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return KBTemplateLocalServiceUtil.fetchKBTemplateByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getKBTemplate(((Long)arguments[0]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getIndexableActionableDynamicQuery();
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getExportActionableDynamicQuery((com.liferay.portlet.exportimport.lar.PortletDataContext)arguments[0]);
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return KBTemplateLocalServiceUtil.deletePersistedModel((com.liferay.portal.model.PersistedModel)arguments[0]);
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName19.equals(name) && Arrays.deepEquals(_methodParameterTypes19,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getKBTemplatesByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName20.equals(name) && Arrays.deepEquals(_methodParameterTypes20,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getKBTemplatesByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.knowledgebase.model.KBTemplate>)arguments[4]);
  }
  if (_methodName21.equals(name) && Arrays.deepEquals(_methodParameterTypes21,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getKBTemplateByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName22.equals(name) && Arrays.deepEquals(_methodParameterTypes22,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getKBTemplates(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName23.equals(name) && Arrays.deepEquals(_methodParameterTypes23,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getKBTemplatesCount();
  }
  if (_methodName24.equals(name) && Arrays.deepEquals(_methodParameterTypes24,parameterTypes)) {
    return KBTemplateLocalServiceUtil.updateKBTemplate((com.liferay.knowledgebase.model.KBTemplate)arguments[0]);
  }
  if (_methodName81.equals(name) && Arrays.deepEquals(_methodParameterTypes81,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getOSGiServiceIdentifier();
  }
  if (_methodName86.equals(name) && Arrays.deepEquals(_methodParameterTypes86,parameterTypes)) {
    return KBTemplateLocalServiceUtil.addKBTemplate(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName87.equals(name) && Arrays.deepEquals(_methodParameterTypes87,parameterTypes)) {
    KBTemplateLocalServiceUtil.deleteGroupKBTemplates(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName88.equals(name) && Arrays.deepEquals(_methodParameterTypes88,parameterTypes)) {
    return KBTemplateLocalServiceUtil.deleteKBTemplate((com.liferay.knowledgebase.model.KBTemplate)arguments[0]);
  }
  if (_methodName89.equals(name) && Arrays.deepEquals(_methodParameterTypes89,parameterTypes)) {
    return KBTemplateLocalServiceUtil.deleteKBTemplate(((Long)arguments[0]).longValue());
  }
  if (_methodName90.equals(name) && Arrays.deepEquals(_methodParameterTypes90,parameterTypes)) {
    KBTemplateLocalServiceUtil.deleteKBTemplates((long[])arguments[0]);
    return null;
  }
  if (_methodName91.equals(name) && Arrays.deepEquals(_methodParameterTypes91,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getGroupKBTemplates(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.knowledgebase.model.KBTemplate>)arguments[3]);
  }
  if (_methodName92.equals(name) && Arrays.deepEquals(_methodParameterTypes92,parameterTypes)) {
    return KBTemplateLocalServiceUtil.getGroupKBTemplatesCount(((Long)arguments[0]).longValue());
  }
  if (_methodName93.equals(name) && Arrays.deepEquals(_methodParameterTypes93,parameterTypes)) {
    return KBTemplateLocalServiceUtil.search(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],(java.util.Date)arguments[3],(java.util.Date)arguments[4],((Boolean)arguments[5]).booleanValue(),((Integer)arguments[6]).intValue(),((Integer)arguments[7]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.knowledgebase.model.KBTemplate>)arguments[8]);
  }
  if (_methodName94.equals(name) && Arrays.deepEquals(_methodParameterTypes94,parameterTypes)) {
    return KBTemplateLocalServiceUtil.updateKBTemplate(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName95.equals(name) && Arrays.deepEquals(_methodParameterTypes95,parameterTypes)) {
    KBTemplateLocalServiceUtil.updateKBTemplateResources((com.liferay.knowledgebase.model.KBTemplate)arguments[0],(java.lang.String[])arguments[1],(java.lang.String[])arguments[2]);
    return null;
  }
  throw new UnsupportedOperationException();
}
