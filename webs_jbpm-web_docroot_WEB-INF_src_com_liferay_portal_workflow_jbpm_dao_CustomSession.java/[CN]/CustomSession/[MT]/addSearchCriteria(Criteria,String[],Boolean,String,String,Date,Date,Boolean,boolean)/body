{
  if (actorIds != null) {
    if ((pooledActors != null) && pooledActors.booleanValue()) {
      Criteria subcriteria=criteria.createCriteria("pooledActors");
      subcriteria.add(Restrictions.in("actorId",actorIds));
      criteria.add(Restrictions.isNull("actorId"));
    }
 else {
      criteria.add(Restrictions.in("actorId",actorIds));
    }
  }
  Junction kewordsJunction;
  if (andOperator) {
    kewordsJunction=Restrictions.conjunction();
  }
 else {
    kewordsJunction=Restrictions.disjunction();
  }
  if (taskName != null) {
    kewordsJunction.add(Restrictions.like("name",taskName));
  }
  if (assetType != null) {
    criteria.createAlias("processInstance","processInstance");
    criteria.createAlias("processInstance.instances","instances");
    criteria.createAlias("instances.tokenVariableMaps","varMaps");
    criteria.createAlias("varMaps.variableInstances","varInstances");
    Criterion typeCriterion=Restrictions.and(Restrictions.eq("varInstances.name",ContextConstants.ENTRY_TYPE),Restrictions.like("varInstances.value",assetType));
    kewordsJunction.add(typeCriterion);
  }
  if ((dueDateGT != null) && (dueDateLT != null)) {
    kewordsJunction.add(Restrictions.between("dueDate",dueDateGT,dueDateLT));
  }
  criteria.add(kewordsJunction);
  if (completed != null) {
    if (completed.booleanValue()) {
      criteria.add(Restrictions.isNotNull("end"));
    }
 else {
      criteria.add(Restrictions.isNull("end"));
    }
  }
}
