{
  if (allDay) {
    startDateHour=0;
    startDateMinute=0;
    endDateHour=23;
    endDateMinute=59;
    durationHour=23;
    durationMinute=59;
  }
  Date startDate=PortalUtil.getDate(startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,TimeZoneUtil.getDefault(),null);
  Date endDate=PortalUtil.getDate(endDateMonth,endDateDay,endDateYear,endDateHour,endDateMinute,TimeZoneUtil.getDefault(),null);
  validate(titleMap,startDateMonth,startDateDay,startDateYear,endDateMonth,endDateDay,endDateYear,durationHour,durationMinute,allDay);
  CalendarEvent calendarEvent=calendarEventPersistence.findByPrimaryKey(calendarEventId);
  calendarEvent.setModifiedDate(serviceContext.getModifiedDate(null));
  calendarEvent.setTitleMap(titleMap);
  calendarEvent.setDescriptionMap(descriptionMap);
  calendarEvent.setLocation(location);
  calendarEvent.setStartDate(startDate);
  calendarEvent.setEndDate(endDate);
  calendarEvent.setDurationHour(durationHour);
  calendarEvent.setDurationMinute(durationMinute);
  calendarEvent.setAllDay(allDay);
  calendarEvent.setRecurrence(recurrence);
  calendarEvent.setType(type);
  calendarEvent.setRemindBy(remindBy);
  calendarEvent.setFirstReminder(firstReminder);
  calendarEvent.setSecondReminder(secondReminder);
  calendarEvent.setExpandoBridgeAttributes(serviceContext);
  calendarEventPersistence.update(calendarEvent,false);
  if ((serviceContext.getGroupPermissions() != null) || (serviceContext.getGuestPermissions() != null)) {
    updateCalendarEventResources(calendarEvent,serviceContext.getGroupPermissions(),serviceContext.getGuestPermissions());
  }
  calendarBookingLocalService.updateCalendarBookings(calendarEventId,serviceContext);
  return calendarEvent;
}
