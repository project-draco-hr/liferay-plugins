{
  Object[] finderArgs=new Object[]{new Long(companyId),new Long(parentKaleoInstanceTokenId),completionDate};
  List<KaleoInstanceToken> list=(List<KaleoInstanceToken>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_PKITI_CD,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(5);
      query.append(_SQL_SELECT_KALEOINSTANCETOKEN_WHERE);
      query.append(_FINDER_COLUMN_C_PKITI_CD_COMPANYID_2);
      query.append(_FINDER_COLUMN_C_PKITI_CD_PARENTKALEOINSTANCETOKENID_2);
      if (completionDate == null) {
        query.append(_FINDER_COLUMN_C_PKITI_CD_COMPLETIONDATE_1);
      }
 else {
        query.append(_FINDER_COLUMN_C_PKITI_CD_COMPLETIONDATE_2);
      }
      query.append(KaleoInstanceTokenModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      qPos.add(parentKaleoInstanceTokenId);
      if (completionDate != null) {
        qPos.add(CalendarUtil.getTimestamp(completionDate));
      }
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<KaleoInstanceToken>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_C_PKITI_CD,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}
