{
  KBArticle kbArticle=kbArticlePersistence.findByPrimaryKey(kbArticleId);
  List<KBArticle> kbArticles=kbArticlePersistence.findByG_P_L(kbArticle.getGroupId(),kbArticle.getParentResourcePrimKey(),true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new KBArticlePriorityComparator(true));
  int pos=kbArticles.indexOf(kbArticle);
  KBArticle[] previousAndNextKBArticles={null,kbArticle,null};
  if (pos > 0) {
    previousAndNextKBArticles[0]=kbArticles.get(pos - 1);
  }
  if (pos < (kbArticles.size() - 1)) {
    previousAndNextKBArticles[2]=kbArticles.get(pos + 1);
  }
  KBArticle previousKBArticle=getPreviousKBArticle(kbArticle,previousAndNextKBArticles[0]);
  KBArticle nextKBArticle=getNextKBArticle(kbArticle,previousAndNextKBArticles[2]);
  return new KBArticle[]{previousKBArticle,kbArticle,nextKBArticle};
}
