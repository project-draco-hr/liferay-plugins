{
  try {
    DLStoreUtil.addDirectory(serviceContext.getCompanyId(),CompanyConstants.SYSTEM,kbArticle.getAttachmentsDirName());
  }
 catch (  DuplicateDirectoryException dde) {
    _log.error("Directory already exists for " + dde.getMessage());
  }
  if (Validator.isNull(dirName) || !DLStoreUtil.hasDirectory(serviceContext.getCompanyId(),CompanyConstants.SYSTEM,dirName)) {
    return;
  }
  String[] fileNames=DLStoreUtil.getFileNames(serviceContext.getCompanyId(),CompanyConstants.SYSTEM,dirName);
  if (fileNames.length > 0) {
    PortletFileRepositoryUtil.deletePortletFileEntries(serviceContext.getScopeGroupId(),kbArticle.getAttachmentsFolderId());
  }
  for (  String fileName : fileNames) {
    InputStream inputStream=null;
    try {
      inputStream=DLStoreUtil.getFileAsStream(serviceContext.getCompanyId(),CompanyConstants.SYSTEM,fileName);
      String shortFileName=FileUtil.getShortFileName(fileName);
      PortletFileRepositoryUtil.addPortletFileEntry(serviceContext.getScopeGroupId(),userId,KBArticle.class.getName(),kbArticle.getClassPK(),PortletKeys.KNOWLEDGE_BASE_ARTICLE,kbArticle.getAttachmentsFolderId(),inputStream,shortFileName);
    }
  finally {
      StreamUtil.cleanUp(inputStream);
    }
  }
  Ticket ticket=ticketLocalService.fetchTicket(StringUtil.extractLast(dirName,StringPool.SLASH));
  if (ticket != null) {
    ticketLocalService.deleteTicket(ticket);
  }
}
