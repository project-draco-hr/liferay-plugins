{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  validate(title);
  long articleId=counterLocalService.increment();
  long resourcePrimKey=kbArticleResourceLocalService.getArticleResourcePrimKey(groupId,title);
  KBArticle article=kbArticlePersistence.create(articleId);
  article.setUuid(uuid);
  article.setResourcePrimKey(resourcePrimKey);
  article.setCompanyId(user.getCompanyId());
  article.setUserId(user.getUserId());
  article.setUserName(user.getFullName());
  article.setModifiedDate(now);
  article.setGroupId(groupId);
  article.setTitle(title);
  article.setVersion(version);
  article.setContent(content);
  article.setSummary(summary);
  article.setHead(head);
  article.setParentTitle(parentTitle);
  kbArticlePersistence.update(article,false);
  addArticleResources(article.getGroupId(),article,true,true);
  if (!minorEdit && NotificationThreadLocal.isNotificationEnabled()) {
    try {
      notifySubscribers(groupId,article,prefs,themeDisplay,false);
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
  }
  updateTagsAsset(userId,article,tagsEntries);
  try {
    Indexer.addArticle(article.getCompanyId(),groupId,title,content,description,tagsEntries);
  }
 catch (  SearchException se) {
    _log.error("Indexing " + articleId,se);
  }
  return article;
}
