{
  validateTitle(newTitle);
  if (isUsedTitle(groupId,newTitle)) {
    KBArticle article=getArticle(groupId,newTitle);
    if (((article.getVersion() == KBArticleImpl.DEFAULT_VERSION) && (article.getContent().equals(KBArticleImpl.MOVED))) || !strict) {
      deleteArticle(groupId,newTitle);
    }
 else {
      throw new PortalException(newTitle);
    }
  }
  List<KBArticle> articleVersions=kbArticlePersistence.findByG_T(groupId,title);
  if (articleVersions.size() == 0) {
    return;
  }
  for (  KBArticle article : articleVersions) {
    article.setTitle(newTitle);
    kbArticlePersistence.update(article,false);
  }
  List<KBArticle> children=kbArticlePersistence.findByG_P(groupId,title);
  for (  KBArticle article : children) {
    article.setParentTitle(newTitle);
    kbArticlePersistence.update(article,false);
  }
  KBArticle article=articleVersions.get(articleVersions.size() - 1);
  KBArticleResource kbArticleResource=kbArticleResourcePersistence.findByPrimaryKey(article.getResourcePrimKey());
  kbArticleResource.setTitle(newTitle);
  kbArticleResourcePersistence.update(kbArticleResource,false);
  String uuid=null;
  double version=KBArticleImpl.DEFAULT_VERSION;
  boolean head=true;
  String parentTitle=article.getParentTitle();
  String content=StringPool.BLANK;
  String summary=KBArticleImpl.MOVED + " to " + title;
  String[] tagsEntries=null;
  addArticle(uuid,userId,groupId,title,version,content,StringPool.BLANK,summary,false,head,parentTitle,tagsEntries,prefs,themeDisplay);
  updateTagsAsset(userId,article,tagsEntries);
  try {
    Indexer.updateArticle(article.getCompanyId(),groupId,newTitle,content,article.getDescription(),tagsEntries);
  }
 catch (  SearchException se) {
    _log.error("Indexing " + newTitle,se);
  }
}
