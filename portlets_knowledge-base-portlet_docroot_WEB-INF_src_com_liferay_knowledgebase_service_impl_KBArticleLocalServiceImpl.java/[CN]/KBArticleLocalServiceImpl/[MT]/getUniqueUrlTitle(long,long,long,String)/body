{
  String urlTitle=KnowledgeBaseUtil.getUrlTitle(kbArticleId,title);
  String uniqueUrlTitle=urlTitle;
  int urlTitleMaxLength=ModelHintsUtil.getMaxLength(KBArticle.class.getName(),"urlTitle");
  if (kbFolderId == KBFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    int kbArticlesCount=kbArticlePersistence.countByG_KBFI_UT_ST(groupId,kbFolderId,uniqueUrlTitle,_STATUSES);
    for (int i=1; kbArticlesCount > 0; i++) {
      String suffix=StringPool.DASH + i;
      if ((urlTitle + suffix).length() <= urlTitleMaxLength) {
        uniqueUrlTitle=urlTitle + suffix;
      }
 else {
        String prefix=uniqueUrlTitle;
        if (uniqueUrlTitle.length() > suffix.length()) {
          prefix=uniqueUrlTitle.substring(0,uniqueUrlTitle.length() - suffix.length());
        }
        uniqueUrlTitle=prefix + suffix;
      }
      kbArticlesCount=kbArticlePersistence.countByG_KBFI_UT_ST(groupId,kbFolderId,uniqueUrlTitle,_STATUSES);
    }
    return uniqueUrlTitle;
  }
  KBFolder kbFolder=kbFolderPersistence.findByPrimaryKey(kbFolderId);
  int kbArticlesCount=kbArticleFinder.countByUrlTitle(groupId,kbFolder.getUrlTitle(),uniqueUrlTitle,_STATUSES);
  for (int i=1; kbArticlesCount > 0; i++) {
    String suffix=StringPool.DASH + i;
    if ((urlTitle + suffix).length() <= urlTitleMaxLength) {
      uniqueUrlTitle=urlTitle + suffix;
    }
 else {
      String prefix=uniqueUrlTitle;
      if (uniqueUrlTitle.length() > suffix.length()) {
        prefix=uniqueUrlTitle.substring(0,uniqueUrlTitle.length() - suffix.length());
      }
      uniqueUrlTitle=prefix + suffix;
    }
    kbArticlesCount=kbArticleFinder.countByUrlTitle(groupId,kbFolder.getUrlTitle(),uniqueUrlTitle,_STATUSES);
  }
  return uniqueUrlTitle;
}
