{
  if (Validator.isNull(serviceContext.getLayoutFullURL())) {
    return;
  }
  PortletPreferences preferences=ServiceContextUtil.getPortletPreferences(serviceContext);
  if (preferences == null) {
    long ownerId=kbArticle.getGroupId();
    int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
    long plid=PortletKeys.PREFS_PLID_SHARED;
    String portletId=PortletKeys.KNOWLEDGE_BASE_ADMIN;
    String defaultPreferences=null;
    preferences=portletPreferencesLocalService.getPreferences(kbArticle.getCompanyId(),ownerId,ownerType,plid,portletId,defaultPreferences);
  }
  if (serviceContext.isCommandAdd() && !AdminUtil.getEmailKBArticleAddedEnabled(preferences)) {
    return;
  }
  if (serviceContext.isCommandUpdate() && !AdminUtil.getEmailKBArticleUpdatedEnabled(preferences)) {
    return;
  }
  String fromName=AdminUtil.getEmailFromName(preferences);
  String fromAddress=AdminUtil.getEmailFromAddress(preferences);
  String kbArticleContent=StringUtil.replace(kbArticle.getContent(),new String[]{"href=\"/","src=\"/"},new String[]{"href=\"" + serviceContext.getPortalURL() + "/","src=\"" + serviceContext.getPortalURL() + "/"});
  Map<String,String> kbArticleDiffs=getEmailKBArticleDiffs(kbArticle);
  for (  String key : kbArticleDiffs.keySet()) {
    String value=StringUtil.replace(kbArticleDiffs.get(key),new String[]{"href=\"/","src=\"/"},new String[]{"href=\"" + serviceContext.getPortalURL() + "/","src=\"" + serviceContext.getPortalURL() + "/"});
    kbArticleDiffs.put(key,value);
  }
  String subject=null;
  String body=null;
  if (serviceContext.isCommandAdd()) {
    subject=AdminUtil.getEmailKBArticleAddedSubject(preferences);
    body=AdminUtil.getEmailKBArticleUpdatedBody(preferences);
  }
 else {
    subject=AdminUtil.getEmailKBArticleUpdatedSubject(preferences);
    body=AdminUtil.getEmailKBArticleUpdatedBody(preferences);
  }
  String portletId=serviceContext.getPortletPreferencesIds().getPortletId();
  long groupId=kbArticle.getGroupId();
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  if (group.isLayout()) {
    groupId=group.getParentGroupId();
  }
  SubscriptionSender subscriptionSender=new AdminSubscriptionSender(kbArticle,serviceContext);
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(kbArticle.getCompanyId());
  subscriptionSender.setContextAttributes("[$ARTICLE_CONTENT$]",kbArticleContent,"[$ARTICLE_CONTENT_DIFF$]",kbArticleDiffs.get("content"),"[$ARTICLE_TITLE$]",kbArticle.getTitle(),"[$ARTICLE_TITLE_DIFF$]",kbArticleDiffs.get("title"));
  subscriptionSender.setContextUserPrefix("ARTICLE");
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setGroupId(groupId);
  subscriptionSender.setScopeGroupId(serviceContext.getScopeGroupId());
  subscriptionSender.setPortletId(portletId);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("kb_article",kbArticle.getKbArticleId());
  subscriptionSender.setReplyToAddress(fromAddress);
  subscriptionSender.setSubject(subject);
  subscriptionSender.setUserId(kbArticle.getUserId());
  subscriptionSender.addPersistedSubscribers(KBArticle.class.getName(),kbArticle.getGroupId());
  subscriptionSender.addPersistedSubscribers(KBArticle.class.getName(),kbArticle.getResourcePrimKey());
  while (!kbArticle.isRoot()) {
    kbArticle=getLatestKBArticle(kbArticle.getParentResourcePrimKey(),WorkflowConstants.STATUS_APPROVED);
    subscriptionSender.addPersistedSubscribers(KBArticle.class.getName(),kbArticle.getResourcePrimKey());
  }
  subscriptionSender.flushNotificationsAsync();
}
