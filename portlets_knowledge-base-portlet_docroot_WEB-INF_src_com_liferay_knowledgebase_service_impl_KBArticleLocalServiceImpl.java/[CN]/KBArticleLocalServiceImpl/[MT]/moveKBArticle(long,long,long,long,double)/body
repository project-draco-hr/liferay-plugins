{
  validate(priority);
  updatePermissionFields(resourcePrimKey,parentResourceClassNameId,parentResourcePrimKey);
  List<KBArticle> kbArticles=getKBArticleVersions(resourcePrimKey,WorkflowConstants.STATUS_ANY,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new KBArticleVersionComparator());
  for (  KBArticle kbArticle : kbArticles) {
    kbArticle.setParentResourceClassNameId(parentResourceClassNameId);
    kbArticle.setParentResourcePrimKey(parentResourcePrimKey);
    kbArticle.setPriority(priority);
    kbArticlePersistence.update(kbArticle);
  }
  long kbFolderClassNameId=classNameLocalService.getClassNameId(KBFolderConstants.getClassName());
  if (parentResourceClassNameId == kbFolderClassNameId) {
    List<KBArticle> descendantKBArticles=getAllDescendantKBArticles(resourcePrimKey,WorkflowConstants.STATUS_ANY,null);
    for (    KBArticle kbArticle : descendantKBArticles) {
      kbArticle.setKbFolderId(parentResourcePrimKey);
      kbArticlePersistence.update(kbArticle);
    }
  }
  KBArticle kbArticle=getLatestKBArticle(resourcePrimKey,WorkflowConstants.STATUS_ANY);
  JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
  extraDataJSONObject.put("title",kbArticle.getTitle());
  if (kbArticle.isApproved() || !kbArticle.isFirstVersion()) {
    socialActivityLocalService.addActivity(userId,kbArticle.getGroupId(),KBArticle.class.getName(),resourcePrimKey,AdminActivityKeys.MOVE_KB_ARTICLE,extraDataJSONObject.toString(),0);
  }
}
