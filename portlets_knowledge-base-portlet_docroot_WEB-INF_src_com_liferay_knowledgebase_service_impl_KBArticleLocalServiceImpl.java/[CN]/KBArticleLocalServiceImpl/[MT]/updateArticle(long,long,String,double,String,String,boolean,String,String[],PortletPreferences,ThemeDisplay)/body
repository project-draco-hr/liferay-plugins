{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  KBArticle article=null;
  try {
    article=getArticle(groupId,title);
  }
 catch (  NoSuchArticleException nspe) {
    return addArticle(null,userId,groupId,title,KBArticleImpl.DEFAULT_VERSION,content,description,minorEdit,true,parentTitle,tagsEntries,prefs,themeDisplay);
  }
  double oldVersion=article.getVersion();
  if ((version > 0) && (version != oldVersion)) {
    throw new ArticleVersionException();
  }
  long resourcePrimKey=article.getResourcePrimKey();
  article.setHead(false);
  article.setModifiedDate(now);
  kbArticlePersistence.update(article,false);
  double newVersion=MathUtil.format(oldVersion + 0.1,1,1);
  long articleId=counterLocalService.increment();
  article=kbArticlePersistence.create(articleId);
  article.setResourcePrimKey(resourcePrimKey);
  article.setCompanyId(user.getCompanyId());
  article.setUserId(user.getUserId());
  article.setUserName(user.getFullName());
  article.setModifiedDate(now);
  article.setGroupId(groupId);
  article.setTitle(title);
  article.setVersion(newVersion);
  article.setContent(content);
  article.setDescription(description);
  article.setHead(true);
  if (Validator.isNotNull(parentTitle)) {
    article.setParentTitle(parentTitle);
  }
  kbArticlePersistence.update(article,false);
  if (!minorEdit && NotificationThreadLocal.isNotificationEnabled()) {
    try {
      notifySubscribers(groupId,article,prefs,themeDisplay,true);
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
  }
  updateTagsAsset(userId,article,tagsEntries);
  try {
    Indexer.updateArticle(article.getCompanyId(),groupId,title,content,description,tagsEntries);
  }
 catch (  SearchException se) {
    _log.error("Indexing " + article.getPrimaryKey(),se);
  }
  return article;
}
