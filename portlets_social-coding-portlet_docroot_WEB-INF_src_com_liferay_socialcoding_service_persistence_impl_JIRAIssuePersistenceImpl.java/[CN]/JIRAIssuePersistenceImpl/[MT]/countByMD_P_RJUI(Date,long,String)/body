{
  FinderPath finderPath=FINDER_PATH_WITH_PAGINATION_COUNT_BY_MD_P_RJUI;
  Object[] finderArgs=new Object[]{modifiedDate,projectId,reporterJiraUserId};
  Long count=(Long)finderCache.getResult(finderPath,finderArgs,this);
  if (count == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_COUNT_JIRAISSUE_WHERE);
    boolean bindModifiedDate=false;
    if (modifiedDate == null) {
      query.append(_FINDER_COLUMN_MD_P_RJUI_MODIFIEDDATE_1);
    }
 else {
      bindModifiedDate=true;
      query.append(_FINDER_COLUMN_MD_P_RJUI_MODIFIEDDATE_2);
    }
    query.append(_FINDER_COLUMN_MD_P_RJUI_PROJECTID_2);
    boolean bindReporterJiraUserId=false;
    if (reporterJiraUserId == null) {
      query.append(_FINDER_COLUMN_MD_P_RJUI_REPORTERJIRAUSERID_1);
    }
 else     if (reporterJiraUserId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_MD_P_RJUI_REPORTERJIRAUSERID_3);
    }
 else {
      bindReporterJiraUserId=true;
      query.append(_FINDER_COLUMN_MD_P_RJUI_REPORTERJIRAUSERID_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (bindModifiedDate) {
        qPos.add(new Timestamp(modifiedDate.getTime()));
      }
      qPos.add(projectId);
      if (bindReporterJiraUserId) {
        qPos.add(reporterJiraUserId);
      }
      count=(Long)q.uniqueResult();
      finderCache.putResult(finderPath,finderArgs,count);
    }
 catch (    Exception e) {
      finderCache.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return count.intValue();
}
