{
  FinderPath finderPath=FINDER_PATH_COUNT_BY_P_AJUI_S;
  Object[] finderArgs=new Object[]{projectId,assigneeJiraUserId,status};
  Long count=(Long)FinderCacheUtil.getResult(finderPath,finderArgs,this);
  if (count == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_COUNT_JIRAISSUE_WHERE);
    query.append(_FINDER_COLUMN_P_AJUI_S_PROJECTID_2);
    boolean bindAssigneeJiraUserId=false;
    if (assigneeJiraUserId == null) {
      query.append(_FINDER_COLUMN_P_AJUI_S_ASSIGNEEJIRAUSERID_1);
    }
 else     if (assigneeJiraUserId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_P_AJUI_S_ASSIGNEEJIRAUSERID_3);
    }
 else {
      bindAssigneeJiraUserId=true;
      query.append(_FINDER_COLUMN_P_AJUI_S_ASSIGNEEJIRAUSERID_2);
    }
    boolean bindStatus=false;
    if (status == null) {
      query.append(_FINDER_COLUMN_P_AJUI_S_STATUS_1);
    }
 else     if (status.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_P_AJUI_S_STATUS_3);
    }
 else {
      bindStatus=true;
      query.append(_FINDER_COLUMN_P_AJUI_S_STATUS_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(projectId);
      if (bindAssigneeJiraUserId) {
        qPos.add(assigneeJiraUserId);
      }
      if (bindStatus) {
        qPos.add(status);
      }
      count=(Long)q.uniqueResult();
      FinderCacheUtil.putResult(finderPath,finderArgs,count);
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return count.intValue();
}
