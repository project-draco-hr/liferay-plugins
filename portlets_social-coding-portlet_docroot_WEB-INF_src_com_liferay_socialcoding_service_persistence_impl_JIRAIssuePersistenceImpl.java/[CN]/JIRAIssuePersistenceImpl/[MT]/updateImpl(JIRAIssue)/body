{
  jiraIssue=toUnwrappedModel(jiraIssue);
  boolean isNew=jiraIssue.isNew();
  JIRAIssueModelImpl jiraIssueModelImpl=(JIRAIssueModelImpl)jiraIssue;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (jiraIssue.getCreateDate() == null)) {
    if (serviceContext == null) {
      jiraIssue.setCreateDate(now);
    }
 else {
      jiraIssue.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!jiraIssueModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      jiraIssue.setModifiedDate(now);
    }
 else {
      jiraIssue.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (jiraIssue.isNew()) {
      session.save(jiraIssue);
      jiraIssue.setNew(false);
    }
 else {
      jiraIssue=(JIRAIssue)session.merge(jiraIssue);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !JIRAIssueModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PROJECTID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalProjectId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_PROJECTID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PROJECTID,args);
      args=new Object[]{jiraIssueModelImpl.getProjectId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_PROJECTID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PROJECTID,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPORTERJIRAUSERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalReporterJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_REPORTERJIRAUSERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPORTERJIRAUSERID,args);
      args=new Object[]{jiraIssueModelImpl.getReporterJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_REPORTERJIRAUSERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPORTERJIRAUSERID,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ASSIGNEEJIRAUSERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalAssigneeJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_ASSIGNEEJIRAUSERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ASSIGNEEJIRAUSERID,args);
      args=new Object[]{jiraIssueModelImpl.getAssigneeJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_ASSIGNEEJIRAUSERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ASSIGNEEJIRAUSERID,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalProjectId(),jiraIssueModelImpl.getOriginalReporterJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_RJUI,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI,args);
      args=new Object[]{jiraIssueModelImpl.getProjectId(),jiraIssueModelImpl.getReporterJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_RJUI,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalProjectId(),jiraIssueModelImpl.getOriginalAssigneeJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_AJUI,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI,args);
      args=new Object[]{jiraIssueModelImpl.getProjectId(),jiraIssueModelImpl.getAssigneeJiraUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_AJUI,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalProjectId(),jiraIssueModelImpl.getOriginalReporterJiraUserId(),jiraIssueModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_RJUI_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI_S,args);
      args=new Object[]{jiraIssueModelImpl.getProjectId(),jiraIssueModelImpl.getReporterJiraUserId(),jiraIssueModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_RJUI_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI_S,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalProjectId(),jiraIssueModelImpl.getOriginalAssigneeJiraUserId(),jiraIssueModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_AJUI_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI_S,args);
      args=new Object[]{jiraIssueModelImpl.getProjectId(),jiraIssueModelImpl.getAssigneeJiraUserId(),jiraIssueModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_P_AJUI_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI_S,args);
    }
  }
  entityCache.putResult(JIRAIssueModelImpl.ENTITY_CACHE_ENABLED,JIRAIssueImpl.class,jiraIssue.getPrimaryKey(),jiraIssue,false);
  jiraIssue.resetOriginalValues();
  return jiraIssue;
}
