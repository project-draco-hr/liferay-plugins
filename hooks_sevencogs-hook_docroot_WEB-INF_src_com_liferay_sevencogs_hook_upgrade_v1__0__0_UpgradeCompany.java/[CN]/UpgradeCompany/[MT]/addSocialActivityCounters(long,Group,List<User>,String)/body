{
  String userMessagePosts=getString(fileName);
  String[] counters=StringUtil.splitLines(userMessagePosts);
  int totalValue=0;
  for (  String counter : counters) {
    String[] array=StringUtil.split(counter);
    int endPeriod=SocialCounterPeriodUtil.getEndPeriod(GetterUtil.getInteger(array[5]));
    if (endPeriod < 0) {
      continue;
    }
    long classNameId=PortalUtil.getClassNameId(array[1]);
    long classPK=0;
    if (array[2].equals("$RND_USER$")) {
      int rndUser=getRandomNumber(0,3);
      User user=users.get(rndUser);
      classPK=user.getUserId();
    }
 else     if (array[2].startsWith("$USER_")) {
      String screenName=StringUtil.replace(array[2],new String[]{"$","USER_"},new String[]{"",""});
      for (      User user : users) {
        if (screenName.equalsIgnoreCase(user.getScreenName())) {
          classPK=user.getUserId();
        }
      }
    }
 else     if (array[2].equals("$RND_ASSET$")) {
      AssetEntryQuery query=new AssetEntryQuery();
      query.setClassName(array[1]);
      query.setGroupIds(new long[]{group.getGroupId()});
      List<AssetEntry> assetEntries=AssetEntryLocalServiceUtil.getEntries(query);
      if (assetEntries.size() > 0) {
        int index=getRandomNumber(0,assetEntries.size() - 1);
        AssetEntry assetEntry=assetEntries.get(index);
        classPK=assetEntry.getClassPK();
      }
 else {
        classPK=12345;
      }
    }
 else {
      classPK=GetterUtil.getLong(array[2]);
    }
    int ownerType=SocialActivityCounterConstants.TYPE_ACTOR;
    if (array[0].startsWith("asset.") || array[0].equals("popularity")) {
      ownerType=SocialActivityCounterConstants.TYPE_ASSET;
    }
 else     if (array[0].startsWith("creator.") || array[0].equals("contribution")) {
      ownerType=SocialActivityCounterConstants.TYPE_CREATOR;
    }
    int currentValue=0;
    if (array[3].equals("$RND$")) {
      currentValue=getRandomNumber(0,100);
    }
 else {
      currentValue=GetterUtil.getInteger(array[3]);
    }
    SocialActivityCounter latestActivityCounter=SocialActivityCounterLocalServiceUtil.fetchLatestActivityCounter(group.getGroupId(),classNameId,classPK,array[0],ownerType);
    if (latestActivityCounter != null) {
      totalValue=latestActivityCounter.getTotalValue() + currentValue;
    }
    SocialActivityCounter activityCounter=latestActivityCounter;
    int startPeriod=SocialCounterPeriodUtil.getStartPeriod(GetterUtil.getInteger(array[4]));
    if ((latestActivityCounter == null) || (latestActivityCounter.getStartPeriod() != startPeriod)) {
      long activityCounterId=CounterLocalServiceUtil.increment();
      activityCounter=SocialActivityCounterLocalServiceUtil.createSocialActivityCounter(activityCounterId);
      activityCounter.setCompanyId(group.getCompanyId());
      activityCounter.setGroupId(group.getGroupId());
      activityCounter.setClassNameId(classNameId);
      activityCounter.setClassPK(classPK);
      activityCounter.setName(array[0]);
      activityCounter.setOwnerType(ownerType);
      activityCounter.setCurrentValue(currentValue);
      activityCounter.setTotalValue(totalValue);
      activityCounter.setStartPeriod(startPeriod);
      if (array[5].equals("0")) {
        endPeriod=-1;
      }
      activityCounter.setEndPeriod(endPeriod);
    }
 else {
      activityCounter.setCurrentValue(activityCounter.getCurrentValue() + currentValue);
      activityCounter.setTotalValue(totalValue);
    }
    SocialActivityCounterLocalServiceUtil.updateSocialActivityCounter(activityCounter);
  }
}
