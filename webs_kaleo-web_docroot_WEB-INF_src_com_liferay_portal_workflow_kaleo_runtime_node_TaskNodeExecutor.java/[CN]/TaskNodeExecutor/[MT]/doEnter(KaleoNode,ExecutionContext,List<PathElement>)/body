{
  Map<String,Serializable> workflowContext=executionContext.getWorkflowContext();
  ServiceContext serviceContext=executionContext.getServiceContext();
  KaleoInstanceToken kaleoInstanceToken=executionContext.getKaleoInstanceToken();
  KaleoTask kaleoTask=kaleoTaskLocalService.getKaleoNodeKaleoTask(currentKaleoNode.getKaleoNodeId());
  Date dueDate=null;
  if (kaleoTask.getDueDateDuration() > 0) {
    DueDateDuration dueDateDuration=new DueDateDuration(kaleoTask.getDueDateDuration(),DurationScale.parse(kaleoTask.getDueDateScale()));
    dueDate=_dueDateCalculator.getDueDate(new Date(),dueDateDuration);
  }
  Collection<KaleoTaskAssignment> kaleoTaskAssignments=_taskAssignmentSelector.calculateTaskAssignments(kaleoTask.getKaleoTaskAssignments(),executionContext);
  KaleoTaskInstanceToken kaleoTaskInstanceToken=kaleoTaskInstanceTokenLocalService.addKaleoTaskInstanceToken(kaleoInstanceToken.getKaleoInstanceTokenId(),kaleoTask.getKaleoTaskId(),kaleoTask.getName(),kaleoTaskAssignments,dueDate,workflowContext,serviceContext);
  executionContext.setKaleoTaskInstanceToken(kaleoTaskInstanceToken);
  ActionExecutorUtil.executeKaleoActions(currentKaleoNode.getKaleoNodeId(),ExecutionType.ON_ASSIGNMENT,executionContext);
  NotificationUtil.sendKaleoNotifications(currentKaleoNode.getKaleoNodeId(),ExecutionType.ON_ASSIGNMENT,executionContext);
  kaleoLogLocalService.addTaskAssignmentKaleoLog(null,kaleoTaskInstanceToken,"Assigned initial task.",workflowContext,serviceContext);
}
