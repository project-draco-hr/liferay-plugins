{
  Map<String,Serializable> context=executionContext.getContext();
  ServiceContext serviceContext=executionContext.getServiceContext();
  KaleoInstanceToken kaleoInstanceToken=executionContext.getKaleoInstanceToken();
  KaleoTask kaleoTask=kaleoTaskLocalService.getKaleoNodeKaleoTask(currentKaleoNode.getKaleoNodeId());
  Date dueDate=null;
  if (kaleoTask.getDueDateDuration() > 0) {
    DueDateDuration dueDateDuration=new DueDateDuration(kaleoTask.getDueDateDuration(),DurationScale.parse(kaleoTask.getDueDateScale()));
    dueDate=_dueDateCalculator.getDueDate(new Date(),dueDateDuration);
  }
  KaleoTaskInstanceToken kaleoTaskInstanceToken=kaleoTaskInstanceTokenLocalService.addKaleoTaskInstanceToken(kaleoInstanceToken.getKaleoInstanceTokenId(),kaleoTask.getKaleoTaskId(),dueDate,context,serviceContext);
  executionContext.setKaleoTaskInstanceToken(kaleoTaskInstanceToken);
  KaleoTaskAssignment kaleoTaskAssignment=kaleoTask.getDefaultKaleoTaskAssignment();
  KaleoTaskInstanceAssignment kaleoTaskInstanceAssignment=kaleoTaskInstanceAssignmentLocalService.addKaleoTaskInstanceAssignment(kaleoTaskInstanceToken,kaleoTaskAssignment.getKaleoTaskAssignmentId(),context);
  executionContext.setKaleoTaskInstanceAssigment(kaleoTaskInstanceAssignment);
  ActionExecutorUtil.executeKaleoActions(currentKaleoNode.getKaleoNodeId(),ActionType.ON_ASSIGNMENT,executionContext);
  NotificationUtil.sendKaleoNotifications(currentKaleoNode.getKaleoNodeId(),ActionType.ON_ASSIGNMENT,executionContext);
  kaleoLogLocalService.addTaskAssignmentKaleoLog(kaleoTaskInstanceToken,null,kaleoTaskInstanceAssignment,"Assigned initial task.",context,serviceContext);
}
