{
  User user=userPersistence.findByPrimaryKey(userId);
  Date expirationDate=null;
  if (!neverExpire) {
    expirationDate=PortalUtil.getDate(expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,user.getTimeZone(),PollsQuestionExpirationDateException.class);
  }
  validate(titleMap,descriptionMap,pollsChoices);
  PollsQuestion pollsQuestion=pollsQuestionPersistence.findByPrimaryKey(pollsQuestionId);
  pollsQuestion.setModifiedDate(serviceContext.getModifiedDate(null));
  pollsQuestion.setTitleMap(titleMap);
  pollsQuestion.setDescriptionMap(descriptionMap);
  pollsQuestion.setExpirationDate(expirationDate);
  pollsQuestionPersistence.update(pollsQuestion);
  if (pollsChoices != null) {
    int oldChoicesCount=pollsChoicePersistence.countByPollsQuestionId(pollsQuestionId);
    if (oldChoicesCount > pollsChoices.size()) {
      throw new PollsQuestionChoiceException();
    }
    for (    PollsChoice pollsChoice : pollsChoices) {
      pollsChoice=pollsChoicePersistence.fetchByPQI_N(pollsQuestionId,pollsChoice.getName());
      if (pollsChoice == null) {
        pollsChoiceLocalService.addPollsChoice(pollsQuestionId,pollsChoice.getName(),pollsChoice.getDescription(),new ServiceContext());
      }
 else {
        pollsChoiceLocalService.updatePollsChoice(pollsChoice.getPollsChoiceId(),pollsQuestionId,pollsChoice.getName(),pollsChoice.getDescription());
      }
    }
  }
  return pollsQuestion;
}
