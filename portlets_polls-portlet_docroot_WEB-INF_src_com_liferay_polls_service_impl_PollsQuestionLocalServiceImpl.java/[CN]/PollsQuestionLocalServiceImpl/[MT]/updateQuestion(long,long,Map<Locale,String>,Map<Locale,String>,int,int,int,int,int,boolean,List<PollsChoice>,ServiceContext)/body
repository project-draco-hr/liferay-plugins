{
  User user=userPersistence.findByPrimaryKey(userId);
  Date expirationDate=null;
  if (!neverExpire) {
    expirationDate=PortalUtil.getDate(expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,user.getTimeZone(),PollsQuestionExpirationDateException.class);
  }
  validate(titleMap,descriptionMap,choices);
  PollsQuestion question=pollsQuestionPersistence.findByPrimaryKey(questionId);
  question.setModifiedDate(serviceContext.getModifiedDate(null));
  question.setTitleMap(titleMap);
  question.setDescriptionMap(descriptionMap);
  question.setExpirationDate(expirationDate);
  pollsQuestionPersistence.update(question);
  if (choices != null) {
    int oldChoicesCount=pollsChoicePersistence.countByPollsQuestionId(questionId);
    if (oldChoicesCount > choices.size()) {
      throw new PollsQuestionChoiceException();
    }
    for (    PollsChoice choice : choices) {
      String choiceName=choice.getName();
      String choiceDescription=choice.getDescription();
      choice=pollsChoicePersistence.fetchByPQI_N(questionId,choiceName);
      if (choice == null) {
        pollsChoiceLocalService.addChoice(questionId,choiceName,choiceDescription,new ServiceContext());
      }
 else {
        pollsChoiceLocalService.updateChoice(choice.getPollsChoiceId(),questionId,choiceName,choiceDescription);
      }
    }
  }
  return question;
}
