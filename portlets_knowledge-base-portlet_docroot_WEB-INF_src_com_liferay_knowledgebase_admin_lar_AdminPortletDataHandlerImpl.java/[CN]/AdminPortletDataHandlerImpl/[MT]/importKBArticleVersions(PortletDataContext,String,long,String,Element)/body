{
  Map<Long,Long> kbTemplatePKs=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(KBTemplate.class);
  Element versionsElement=kbArticleElement.element("versions");
  List<Element> kbArticleElements=versionsElement.elements("kb-article");
  KBArticle importedKBArticle=null;
  for (  Element curKBArticleElement : kbArticleElements) {
    KBArticle curKBArticle=(KBArticle)portletDataContext.getZipEntryAsObject(curKBArticleElement.attributeValue("path"));
    long curUserId=portletDataContext.getUserId(curKBArticle.getUserUuid());
    long curKBTemplateId=MapUtil.getLong(kbTemplatePKs,curKBArticle.getKbTemplateId());
    String curDirName=StringPool.BLANK;
    if (curKBArticle.isMain()) {
      curDirName=dirName;
    }
    ServiceContext serviceContext=portletDataContext.createServiceContext(curKBArticleElement,curKBArticle,_NAMESPACE);
    if (importedKBArticle == null) {
      serviceContext.setUuid(uuid);
      importedKBArticle=KBArticleLocalServiceUtil.addKBArticle(curUserId,parentResourcePrimKey,curKBArticle.getTitle(),curKBArticle.getContent(),curKBArticle.getDescription(),curKBTemplateId,curDirName,serviceContext);
    }
 else {
      importedKBArticle=KBArticleLocalServiceUtil.updateKBArticle(curUserId,importedKBArticle.getResourcePrimKey(),curKBArticle.getTitle(),curKBArticle.getContent(),curKBArticle.getDescription(),curKBTemplateId,curDirName,serviceContext);
    }
  }
  return importedKBArticle;
}
