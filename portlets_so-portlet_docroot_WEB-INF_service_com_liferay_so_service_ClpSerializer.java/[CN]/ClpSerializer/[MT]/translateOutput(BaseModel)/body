{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.so.model.impl.MemberRequestImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        MemberRequestClp newModel=new MemberRequestClp();
        Method method0=oldModelClass.getMethod("getMemberRequestId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setMemberRequestId(value0.longValue());
        Method method1=oldModelClass.getMethod("getGroupId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setGroupId(value1.longValue());
        Method method2=oldModelClass.getMethod("getCompanyId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setUserId(value3.longValue());
        Method method4=oldModelClass.getMethod("getUserName");
        String value4=(String)method4.invoke(oldModel,(Object[])null);
        newModel.setUserName(value4);
        Method method5=oldModelClass.getMethod("getCreateDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value5);
        Method method6=oldModelClass.getMethod("getModifiedDate");
        Date value6=(Date)method6.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value6);
        Method method7=oldModelClass.getMethod("getKey");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setKey(value7);
        Method method8=oldModelClass.getMethod("getReceiverUserId");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setReceiverUserId(value8.longValue());
        Method method9=oldModelClass.getMethod("getStatus");
        Integer value9=(Integer)method9.invoke(oldModel,(Object[])null);
        newModel.setStatus(value9.intValue());
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.so.model.impl.ProjectsEntryImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        ProjectsEntryClp newModel=new ProjectsEntryClp();
        Method method0=oldModelClass.getMethod("getProjectsEntryId");
        Long value0=(Long)method0.invoke(oldModel,(Object[])null);
        newModel.setProjectsEntryId(value0.longValue());
        Method method1=oldModelClass.getMethod("getCompanyId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value1.longValue());
        Method method2=oldModelClass.getMethod("getUserId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setUserId(value2.longValue());
        Method method3=oldModelClass.getMethod("getUserName");
        String value3=(String)method3.invoke(oldModel,(Object[])null);
        newModel.setUserName(value3);
        Method method4=oldModelClass.getMethod("getCreateDate");
        Date value4=(Date)method4.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value4);
        Method method5=oldModelClass.getMethod("getModifiedDate");
        Date value5=(Date)method5.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value5);
        Method method6=oldModelClass.getMethod("getTitle");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setTitle(value6);
        Method method7=oldModelClass.getMethod("getDescription");
        String value7=(String)method7.invoke(oldModel,(Object[])null);
        newModel.setDescription(value7);
        Method method8=oldModelClass.getMethod("getStartDate");
        Date value8=(Date)method8.invoke(oldModel,(Object[])null);
        newModel.setStartDate(value8);
        Method method9=oldModelClass.getMethod("getEndDate");
        Date value9=(Date)method9.invoke(oldModel,(Object[])null);
        newModel.setEndDate(value9);
        Method method10=oldModelClass.getMethod("getData");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setData(value10);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
