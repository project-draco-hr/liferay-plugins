{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.addBBBParticipant((com.liferay.bbb.model.BBBParticipant)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.createBBBParticipant(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.deleteBBBParticipant(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.deleteBBBParticipant((com.liferay.bbb.model.BBBParticipant)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.fetchBBBParticipant(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getBBBParticipant(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.deletePersistedModel((com.liferay.portal.model.PersistedModel)arguments[0]);
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getBBBParticipants(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getBBBParticipantsCount();
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.updateBBBParticipant((com.liferay.bbb.model.BBBParticipant)arguments[0]);
  }
  if (_methodName53.equals(name) && Arrays.deepEquals(_methodParameterTypes53,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName54.equals(name) && Arrays.deepEquals(_methodParameterTypes54,parameterTypes)) {
    BBBParticipantLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName59.equals(name) && Arrays.deepEquals(_methodParameterTypes59,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.addBBBParticipant(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(java.lang.String)arguments[3],(java.lang.String)arguments[4],((Integer)arguments[5]).intValue(),((Integer)arguments[6]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[7]);
  }
  if (_methodName60.equals(name) && Arrays.deepEquals(_methodParameterTypes60,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.deleteBBBParticipant((com.liferay.bbb.model.BBBParticipant)arguments[0]);
  }
  if (_methodName61.equals(name) && Arrays.deepEquals(_methodParameterTypes61,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.fetchBBBParticipant(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  if (_methodName62.equals(name) && Arrays.deepEquals(_methodParameterTypes62,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getBBBParticipants(((Long)arguments[0]).longValue());
  }
  if (_methodName63.equals(name) && Arrays.deepEquals(_methodParameterTypes63,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.getBBBParticipantsCount(((Long)arguments[0]).longValue());
  }
  if (_methodName64.equals(name) && Arrays.deepEquals(_methodParameterTypes64,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.updateBBBParticipant(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(java.lang.String)arguments[3],((Integer)arguments[4]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  if (_methodName65.equals(name) && Arrays.deepEquals(_methodParameterTypes65,parameterTypes)) {
    return BBBParticipantLocalServiceUtil.updateStatus(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  throw new UnsupportedOperationException();
}
