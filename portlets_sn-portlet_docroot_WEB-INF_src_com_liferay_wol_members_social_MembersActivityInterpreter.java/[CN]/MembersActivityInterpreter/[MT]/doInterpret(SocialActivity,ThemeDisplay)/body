{
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  User creatorUser=UserLocalServiceUtil.getUserById(activity.getUserId());
  int activityType=activity.getType();
  String link=StringPool.BLANK;
  if (activityType == MembersActivityKeys.ADD_MEMBER) {
    StringBuilder sb=new StringBuilder();
    sb.append(themeDisplay.getURLPortal());
    sb.append(themeDisplay.getPathFriendlyURLPublic());
    sb.append(StringPool.SLASH);
    sb.append(creatorUser.getScreenName());
    sb.append("/profile");
    link=sb.toString();
  }
  Organization organization=OrganizationLocalServiceUtil.getOrganization(activity.getClassPK());
  Group group=organization.getGroup();
  String title=StringPool.BLANK;
  if (activityType == MembersActivityKeys.ADD_MEMBER) {
    StringBuilder sb=new StringBuilder();
    sb.append("<a href=\"");
    sb.append(link);
    sb.append("\">");
    sb.append(creatorUserName);
    sb.append("</a>");
    String creatorUserNameURL=sb.toString();
    sb=new StringBuilder();
    sb.append("<a href=\"");
    sb.append(themeDisplay.getURLPortal());
    sb.append(themeDisplay.getPathFriendlyURLPublic());
    sb.append(group.getFriendlyURL());
    sb.append("/profile\">");
    sb.append(organization.getName());
    sb.append("</a>");
    String organizationNameURL=sb.toString();
    title=themeDisplay.translate("activity-wol-summary-join-organization",new Object[]{creatorUserNameURL,organizationNameURL});
  }
  String body=StringPool.BLANK;
  return new SocialActivityFeedEntry(link,title,body);
}
