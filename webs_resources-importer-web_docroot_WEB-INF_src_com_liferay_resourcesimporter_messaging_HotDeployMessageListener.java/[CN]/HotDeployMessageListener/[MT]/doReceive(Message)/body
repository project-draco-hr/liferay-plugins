{
  String command=message.getString("command");
  if (!command.equals("deploy")) {
    return;
  }
  String servletContextName=message.getString("servletContextName");
  ServletContext servletContext=ServletContextPool.get(servletContextName);
  URL resourcesDirURL=servletContext.getResource(_RESOURCES_DIR);
  if (resourcesDirURL == null) {
    return;
  }
  Properties pluginProperties=getPluginProperties(servletContext);
  String targetClassName=pluginProperties.getProperty("resources-importer-target-class-name",LayoutSetPrototype.class.getName());
  String targetValue=pluginProperties.getProperty("resources-importer-target-value");
  if (Validator.isNull(targetValue)) {
    targetValue=TextFormatter.format(servletContextName,TextFormatter.J);
  }
  String resourcesDir=pluginProperties.getProperty("resources-importer-external-dir");
  Set<String> resourcePaths=servletContext.getResourcePaths(_RESOURCES_DIR);
  URL larURL=servletContext.getResource(_RESOURCES_DIR.concat("archive.lar"));
  List<Company> companies=CompanyLocalServiceUtil.getCompanies();
  for (  Company company : companies) {
    long companyId=CompanyThreadLocal.getCompanyId();
    try {
      CompanyThreadLocal.setCompanyId(company.getCompanyId());
      Importer importer=null;
      if (larURL != null) {
        LARImporter larImporter=getLARImporter();
        URLConnection urlConnection=larURL.openConnection();
        larImporter.setLARInputStream(urlConnection.getInputStream());
        importer=larImporter;
      }
 else       if ((resourcePaths != null) && !resourcePaths.isEmpty()) {
        importer=getResourceImporter();
        importer.setResourcesDir(_RESOURCES_DIR);
      }
 else {
        if (Validator.isNotNull(resourcesDir)) {
          importer=getFileSystemImporter();
          importer.setResourcesDir(resourcesDir);
        }
      }
      if (importer == null) {
        throw new ImporterException("No valid importer found");
      }
      importer.setCompanyId(company.getCompanyId());
      importer.setServletContext(servletContext);
      importer.setServletContextName(servletContextName);
      importer.setTargetClassName(targetClassName);
      importer.setTargetValue(targetValue);
      importer.afterPropertiesSet();
      if (!PortletPropsValues.DEVELOPER_MODE_ENABLED && importer.isExisting()) {
        if (_log.isInfoEnabled()) {
          _log.info("Group or layout set prototype already exists " + "for company " + company.getWebId());
        }
        continue;
      }
      long startTime=0;
      if (_log.isInfoEnabled()) {
        startTime=System.currentTimeMillis();
      }
      importer.importResources();
      if (_log.isInfoEnabled()) {
        long endTime=System.currentTimeMillis() - startTime;
        _log.info("Importing resources from " + servletContextName + " to group "+ importer.getGroupId()+ " takes "+ endTime+ " ms");
      }
      Message newMessage=new Message();
      newMessage.put("companyId",company.getCompanyId());
      newMessage.put("servletContextName",servletContextName);
      newMessage.put("targetClassName",targetClassName);
      newMessage.put("targetClassPK",importer.getTargetClassPK());
      newMessage.setPayload(servletContextName);
      if (message.getResponseId() != null) {
        newMessage.setResponseId(message.getResponseId());
      }
      MessageBusUtil.sendMessage("liferay/resources_importer",newMessage);
    }
 catch (    ImporterException ie) {
      Message newMessage=new Message();
      newMessage.put("companyId",company.getCompanyId());
      newMessage.put("error",ie.getMessage());
      newMessage.put("servletContextName",servletContextName);
      newMessage.put("targetClassName",targetClassName);
      newMessage.put("targetClassPK",0);
      MessageBusUtil.sendMessage("liferay/resources_importer",newMessage);
    }
 finally {
      CompanyThreadLocal.setCompanyId(companyId);
    }
  }
}
