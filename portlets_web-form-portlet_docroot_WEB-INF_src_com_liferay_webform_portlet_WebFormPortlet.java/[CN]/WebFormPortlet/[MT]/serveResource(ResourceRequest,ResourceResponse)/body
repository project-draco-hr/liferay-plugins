{
  String portletId=(String)resourceRequest.getAttribute(WebKeys.PORTLET_ID);
  HttpServletRequest request=PortalUtil.getHttpServletRequest(resourceRequest);
  PortletPreferences preferences;
  try {
    preferences=PortletPreferencesFactoryUtil.getPortletSetup(request,portletId);
  }
 catch (  SystemException e) {
    throw new PortletException(e);
  }
  String databaseTableName=preferences.getValue("databaseTableName",StringPool.BLANK);
  String title=preferences.getValue("title","no-title");
  List<String> fieldLabels=new ArrayList<String>();
  StringBuilder sb=new StringBuilder();
  for (int i=1; i <= WebFormUtil.MAX_FIELDS; i++) {
    String fieldLabel=preferences.getValue("fieldLabel" + i,StringPool.BLANK);
    if (Validator.isNotNull(fieldLabel)) {
      fieldLabels.add(fieldLabel);
      sb.append("\"");
      sb.append(fieldLabel.replaceAll("\"","\\\""));
      sb.append("\";");
    }
  }
  sb.deleteCharAt(sb.length() - 1);
  sb.append("\n");
  try {
    if (Validator.isNotNull(databaseTableName)) {
      List<ExpandoRow> rows=ExpandoRowLocalServiceUtil.getRows(WebFormUtil.class.getName(),databaseTableName,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
      for (      ExpandoRow row : rows) {
        for (        String fieldName : fieldLabels) {
          String data=ExpandoValueLocalServiceUtil.getData(WebFormUtil.class.getName(),databaseTableName,fieldName,row.getClassPK(),StringPool.BLANK);
          data=data.replaceAll("\"","\\\"");
          sb.append("\"");
          sb.append(data);
          sb.append("\";");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append("\n");
      }
    }
  }
 catch (  Exception e) {
    throw new PortletException(e);
  }
  HttpServletResponse response=PortalUtil.getHttpServletResponse(resourceResponse);
  String fileName=title + ".csv";
  InputStream is=new ByteArrayInputStream(sb.toString().getBytes());
  String contentType=ContentTypes.APPLICATION_TEXT;
  ServletResponseUtil.sendFile(response,fileName,is,contentType);
}
