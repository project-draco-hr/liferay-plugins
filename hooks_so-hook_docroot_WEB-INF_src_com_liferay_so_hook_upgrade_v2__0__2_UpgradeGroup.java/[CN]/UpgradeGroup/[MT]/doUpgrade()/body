{
  ActionableDynamicQuery actionableDynamicQuery=GroupLocalServiceUtil.getActionableDynamicQuery();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
      long classNameId=PortalUtil.getClassNameId(Group.class);
      dynamicQuery.add(classNameIdProperty.eq(classNameId));
    }
  }
);
  actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<Group>(){
    @Override public void performAction(    Group group) throws PortalException {
      if (group.isGuest()) {
        return;
      }
      boolean privateLayout=group.hasPrivateLayouts();
      LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(group.getGroupId(),privateLayout);
      String themeId=layoutSet.getThemeId();
      if (!themeId.equals("so_WAR_sotheme")) {
        return;
      }
      try {
        PortletPreferences portletPreferences=getPortletPreferences(group.getGroupId(),privateLayout);
        LayoutLocalServiceUtil.deleteLayouts(group.getGroupId(),privateLayout,new ServiceContext());
        LayoutSetPrototypeUtil.updateLayoutSetPrototype(group,privateLayout,SocialOfficeConstants.LAYOUT_SET_PROTOTYPE_KEY_SITE);
        layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(group.getGroupId(),privateLayout);
        PortalClassInvoker.invoke(_mergeLayoutSetPrototypeLayoutsMethodKey,group,layoutSet);
        updatePortletPreferences(group.getGroupId(),privateLayout,portletPreferences);
        SocialOfficeUtil.enableSocialOffice(group);
      }
 catch (      Exception e) {
      }
    }
  }
);
  actionableDynamicQuery.performActions();
}
