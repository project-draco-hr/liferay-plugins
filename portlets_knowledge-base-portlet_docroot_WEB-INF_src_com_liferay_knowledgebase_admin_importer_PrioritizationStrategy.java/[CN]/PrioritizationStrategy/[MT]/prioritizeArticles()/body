{
  if (_prioritizeUpdatedArticles) {
    _initNonImportedArticles();
  }
  if (_prioritizeByNumericalPrefix) {
    for (    Map.Entry<String,Double> entry : _importedUrlTitlesPrioritiesMap.entrySet()) {
      KBArticle kbArticle=KBArticleLocalServiceUtil.getKBArticleByUrlTitle(_groupId,_parentKBFolderId,entry.getKey());
      KBArticleLocalServiceUtil.updatePriority(kbArticle.getResourcePrimKey(),entry.getValue());
      for (      Map.Entry<String,List<KBArticle>> entry : _importedArticlesMap.entrySet()) {
        List<KBArticle> kbArticles=entry.getValue();
        if (kbArticles == null) {
          continue;
        }
        if (kbArticles.contains(kbArticle)) {
          kbArticles.remove(kbArticle);
        }
        _importedArticlesMap.put(entry.getKey(),kbArticles);
      }
      for (      Map.Entry<String,List<String>> entry : _importedUrlTitlesMap.entrySet()) {
        List<String> urlTitles=entry.getValue();
        if (urlTitles == null) {
          continue;
        }
        String urlTitle=kbArticle.getUrlTitle();
        if (urlTitles.contains(urlTitle)) {
          urlTitles.remove(urlTitle);
        }
        _importedUrlTitlesMap.put(entry.getKey(),urlTitles);
      }
      for (      Map.Entry<String,List<KBArticle>> entry : _newArticlesMap.entrySet()) {
        List<KBArticle> kbArticles=entry.getValue();
        if (kbArticles == null) {
          continue;
        }
        if (kbArticles.contains(kbArticle)) {
          kbArticles.remove(kbArticle);
        }
        _newArticlesMap.put(entry.getKey(),kbArticles);
      }
      for (      Map.Entry<String,List<String>> entry : _newUrlTitlesMap.entrySet()) {
        List<String> urlTitles=entry.getValue();
        if (urlTitles == null) {
          continue;
        }
        String urlTitle=kbArticle.getUrlTitle();
        if (urlTitles.contains(urlTitle)) {
          urlTitles.remove(urlTitle);
        }
        _newUrlTitlesMap.put(entry.getKey(),urlTitles);
      }
    }
  }
  if (_prioritizeUpdatedArticles) {
    Map<String,Double> maxKBArticlePriorityMap=new HashMap<String,Double>();
    for (    Map.Entry<String,List<KBArticle>> entry : _nonImportedArticlesMap.entrySet()) {
      double maxKBArticlePriority=0.0;
      List<KBArticle> kbArticles=entry.getValue();
      if (kbArticles == null) {
        continue;
      }
      for (      KBArticle kbArticle : kbArticles) {
        double kbArticlePriority=kbArticle.getPriority();
        if (kbArticlePriority > maxKBArticlePriority) {
          maxKBArticlePriority=kbArticlePriority;
        }
      }
      maxKBArticlePriorityMap.put(entry.getKey(),maxKBArticlePriority);
    }
    for (    Map.Entry<String,List<String>> entry : _importedUrlTitlesMap.entrySet()) {
      List<String> urlTitles=entry.getValue();
      if (urlTitles == null) {
        continue;
      }
      ListUtil.sort(urlTitles);
      String parentUrlTitle=entry.getKey();
      int size=urlTitles.size();
      for (int i=0; i < size; i++) {
        String urlTitle=urlTitles.get(i);
        KBArticle kbArticle=KBArticleLocalServiceUtil.getKBArticleByUrlTitle(_groupId,_parentKBFolderId,urlTitle);
        double maxPriority=0.0;
        if (maxKBArticlePriorityMap.containsKey(parentUrlTitle)) {
          maxPriority=maxKBArticlePriorityMap.get(parentUrlTitle);
        }
        maxPriority++;
        maxKBArticlePriorityMap.put(parentUrlTitle,maxPriority);
        KBArticleLocalServiceUtil.updatePriority(kbArticle.getResourcePrimKey(),maxPriority);
      }
    }
  }
 else {
    Map<String,Double> maxKBArticlePriorityMap=new HashMap<String,Double>();
    for (    Map.Entry<String,List<KBArticle>> entry : _existingArticlesMap.entrySet()) {
      double maxKBArticlePriority=0.0;
      List<KBArticle> kbArticles=entry.getValue();
      if (kbArticles == null) {
        continue;
      }
      for (      KBArticle kbArticle : kbArticles) {
        double kbArticlePriority=kbArticle.getPriority();
        if (kbArticlePriority > maxKBArticlePriority) {
          maxKBArticlePriority=kbArticlePriority;
        }
      }
      maxKBArticlePriorityMap.put(entry.getKey(),maxKBArticlePriority);
    }
    for (    Map.Entry<String,List<String>> entry : _newUrlTitlesMap.entrySet()) {
      List<String> urlTitles=entry.getValue();
      if (urlTitles == null) {
        continue;
      }
      ListUtil.sort(urlTitles);
      String parentUrlTitle=entry.getKey();
      int size=urlTitles.size();
      for (int i=0; i < size; i++) {
        String urlTitle=urlTitles.get(i);
        KBArticle kbArticle=KBArticleLocalServiceUtil.getKBArticleByUrlTitle(_groupId,_parentKBFolderId,urlTitle);
        double maxPriority=0.0;
        if (maxKBArticlePriorityMap.containsKey(parentUrlTitle)) {
          maxPriority=maxKBArticlePriorityMap.get(parentUrlTitle);
        }
        maxPriority++;
        maxKBArticlePriorityMap.put(parentUrlTitle,maxPriority);
        KBArticleLocalServiceUtil.updatePriority(kbArticle.getResourcePrimKey(),maxPriority);
      }
    }
  }
}
