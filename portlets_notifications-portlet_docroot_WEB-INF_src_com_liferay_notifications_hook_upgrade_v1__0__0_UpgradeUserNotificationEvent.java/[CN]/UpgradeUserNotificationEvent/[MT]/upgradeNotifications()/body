{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    ps=con.prepareStatement("select userNotificationEventId, payload from " + "UserNotificationEvent where type_ = ?");
    ps.setString(1,"6_WAR_soportlet");
    rs=ps.executeQuery();
    while (rs.next()) {
      long userNotificationEventId=rs.getLong("userNotificationEventId");
      String payload=rs.getString("payload");
      JSONObject payloadJSONObject=JSONFactoryUtil.createJSONObject(payload);
      String type=payloadJSONObject.getString("portletId");
      if (Validator.isNull(type)) {
        return;
      }
      if (type.equals(_PORTLET_ID_ANNOUNCEMENTS) || type.equals(AnnouncementsPortletKeys.ANNOUNCEMENTS)) {
        type=PortletKeys.SO_ANNOUNCEMENTS;
      }
      payloadJSONObject.remove("portletId");
      long entryId=payloadJSONObject.getLong("entryId");
      if (entryId > 0) {
        payloadJSONObject.put("classPK",entryId);
        payloadJSONObject.remove("entryId");
      }
 else       if (type.equals(PortletKeys.CONTACTS_CENTER)) {
        long socialRequestId=payloadJSONObject.getLong("requestId");
        if (socialRequestId > 0) {
          payloadJSONObject.put("classPK",socialRequestId);
          payloadJSONObject.remove("socialRequestId");
        }
      }
 else       if (type.equals(PortletKeys.SO_INVITE_MEMBERS)) {
        long memberRequestId=payloadJSONObject.getLong("memberRequestId");
        if (memberRequestId > 0) {
          payloadJSONObject.put("classPK",memberRequestId);
          payloadJSONObject.remove("memberRequestId");
        }
      }
      updateNotification(userNotificationEventId,type,payloadJSONObject);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}
