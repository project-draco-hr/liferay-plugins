{
  LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(groupId,privateLayout);
  LayoutSetPrototype layoutSetPrototype=LayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(layoutSet.getLayoutSetPrototypeId());
  Group layoutSetPrototypeGroup=layoutSetPrototype.getGroup();
  List<Layout> layoutSetPrototypeLayouts=LayoutLocalServiceUtil.getLayouts(layoutSetPrototypeGroup.getGroupId(),true);
  String[] layoutSetPrototypeLayoutUuids=new String[layoutSetPrototypeLayouts.size()];
  for (int i=0; i < layoutSetPrototypeLayouts.size(); i++) {
    Layout layout=layoutSetPrototypeLayouts.get(i);
    layoutSetPrototypeLayoutUuids[i]=layout.getUuid();
  }
  List<Layout> layouts=LayoutLocalServiceUtil.getLayouts(groupId,privateLayout);
  for (  Layout layout : layouts) {
    if (ArrayUtil.contains(layoutSetPrototypeLayoutUuids,layout.getSourcePrototypeLayoutUuid())) {
      layout.setLayoutPrototypeUuid(StringPool.BLANK);
      layout.setLayoutPrototypeLinkEnabled(false);
      layout.setSourcePrototypeLayoutUuid(StringPool.BLANK);
      LayoutLocalServiceUtil.updateLayout(layout);
    }
  }
  UnicodeProperties settingsProperties=layoutSet.getSettingsProperties();
  settingsProperties.remove("last-merge-time");
  layoutSet.setSettingsProperties(settingsProperties);
  layoutSet.setLayoutSetPrototypeUuid(StringPool.BLANK);
  layoutSet.setLayoutSetPrototypeLinkEnabled(false);
  LayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);
  LayoutSetLocalServiceUtil.updateLookAndFeel(layoutSet.getGroupId(),null,null,StringPool.BLANK);
}
