{
  RunInstancesRequest runInstancesRequest=new RunInstancesRequest();
  String availabilityZone=properties.getProperty("availability.zone");
  if (!isZoneAvailable(availabilityZone)) {
    throw new RuntimeException("Unavailable zone " + availabilityZone);
  }
  String imageId=properties.getProperty("image.id");
  if (imageId == null) {
    imageId=getImageId(properties.getProperty("image.name"));
  }
  runInstancesRequest.setImageId(imageId);
  runInstancesRequest.setInstanceType(properties.getProperty("instance.type"));
  runInstancesRequest.setKeyName(properties.getProperty("key.name"));
  runInstancesRequest.setMaxCount(1);
  runInstancesRequest.setMinCount(1);
  Placement placement=new Placement();
  placement.setAvailabilityZone(availabilityZone);
  runInstancesRequest.setPlacement(placement);
  List<String> securityGroupsIds=new ArrayList<String>();
  securityGroupsIds.add(properties.getProperty("security.group.id"));
  runInstancesRequest.setSecurityGroupIds(securityGroupsIds);
  RunInstancesResult runInstancesResult=amazonEC2Client.runInstances(runInstancesRequest);
  Reservation reservation=runInstancesResult.getReservation();
  List<Instance> instances=reservation.getInstances();
  if (instances.isEmpty()) {
    throw new RuntimeException("Unable to create instances");
  }
  Instance instance=instances.get(0);
  _instanceId=instance.getInstanceId();
  _publicIpAddress=instance.getPublicIpAddress();
  StringBuilder sb=new StringBuilder(13);
  sb.append("{imageId=");
  sb.append(instance.getImageId());
  sb.append(", instanceId=");
  sb.append(_instanceId);
  sb.append(", instanceType=");
  sb.append(instance.getInstanceType());
  sb.append(", keyName=");
  sb.append(instance.getKeyName());
  sb.append(", reservationId=");
  sb.append(reservation.getReservationId());
  sb.append(", state=");
  InstanceState instanceState=instance.getState();
  sb.append(instanceState.getName());
  sb.append("}");
  System.out.println("Starting instance " + sb.toString());
  boolean running=false;
  for (int i=0; i < 6; i++) {
    sleep(30);
    instance=getRunningInstance(_instanceId);
    if (instance != null) {
      _publicIpAddress=instance.getPublicIpAddress();
      running=true;
      sb=new StringBuilder(7);
      sb.append("{instanceId=");
      sb.append(_instanceId);
      sb.append(", publicIpAddress=");
      sb.append(_publicIpAddress);
      sb.append(", stat=");
      instanceState=instance.getState();
      sb.append(instanceState.getName());
      sb.append("}");
      System.out.println("Started instance " + sb.toString());
      break;
    }
  }
  if (!running) {
    throw new RuntimeException("Unable to start instance " + _instanceId);
  }
}
