{
  Object[] finderArgs=new Object[]{new Long(resourcePrimKey),new Double(version)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_R_V,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(4);
      query.append(_SQL_SELECT_ARTICLE_WHERE);
      query.append(_FINDER_COLUMN_R_V_RESOURCEPRIMKEY_2);
      query.append(_FINDER_COLUMN_R_V_VERSION_2);
      query.append(ArticleModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(resourcePrimKey);
      qPos.add(version);
      List<Article> list=q.list();
      result=list;
      Article article=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_R_V,finderArgs,list);
      }
 else {
        article=list.get(0);
        cacheResult(article);
        if ((article.getResourcePrimKey() != resourcePrimKey) || (article.getVersion() != version)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_R_V,finderArgs,article);
        }
      }
      return article;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_R_V,finderArgs,new ArrayList<Article>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (Article)result;
    }
  }
}
