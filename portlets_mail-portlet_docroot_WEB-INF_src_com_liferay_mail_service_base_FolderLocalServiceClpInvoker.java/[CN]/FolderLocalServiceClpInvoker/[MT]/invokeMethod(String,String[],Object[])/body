{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return FolderLocalServiceUtil.addFolder((com.liferay.mail.model.Folder)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return FolderLocalServiceUtil.createFolder(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return FolderLocalServiceUtil.deleteFolder(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return FolderLocalServiceUtil.deleteFolder((com.liferay.mail.model.Folder)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return FolderLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return FolderLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return FolderLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return FolderLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return FolderLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return FolderLocalServiceUtil.fetchFolder(((Long)arguments[0]).longValue());
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return FolderLocalServiceUtil.getFolder(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return FolderLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return FolderLocalServiceUtil.getFolders(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return FolderLocalServiceUtil.getFoldersCount();
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return FolderLocalServiceUtil.updateFolder((com.liferay.mail.model.Folder)arguments[0]);
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return FolderLocalServiceUtil.updateFolder((com.liferay.mail.model.Folder)arguments[0],((Boolean)arguments[1]).booleanValue());
  }
  if (_methodName44.equals(name) && Arrays.deepEquals(_methodParameterTypes44,parameterTypes)) {
    return FolderLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName45.equals(name) && Arrays.deepEquals(_methodParameterTypes45,parameterTypes)) {
    FolderLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
  }
  if (_methodName50.equals(name) && Arrays.deepEquals(_methodParameterTypes50,parameterTypes)) {
    return FolderLocalServiceUtil.addFolder(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(java.lang.String)arguments[3],((Integer)arguments[4]).intValue());
  }
  if (_methodName51.equals(name) && Arrays.deepEquals(_methodParameterTypes51,parameterTypes)) {
    return FolderLocalServiceUtil.deleteFolder((com.liferay.mail.model.Folder)arguments[0]);
  }
  if (_methodName52.equals(name) && Arrays.deepEquals(_methodParameterTypes52,parameterTypes)) {
    return FolderLocalServiceUtil.deleteFolder(((Long)arguments[0]).longValue());
  }
  if (_methodName53.equals(name) && Arrays.deepEquals(_methodParameterTypes53,parameterTypes)) {
    FolderLocalServiceUtil.deleteFolders(((Long)arguments[0]).longValue());
  }
  if (_methodName54.equals(name) && Arrays.deepEquals(_methodParameterTypes54,parameterTypes)) {
    return FolderLocalServiceUtil.getFolder(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  if (_methodName55.equals(name) && Arrays.deepEquals(_methodParameterTypes55,parameterTypes)) {
    return FolderLocalServiceUtil.getFolders(((Long)arguments[0]).longValue());
  }
  if (_methodName56.equals(name) && Arrays.deepEquals(_methodParameterTypes56,parameterTypes)) {
    return FolderLocalServiceUtil.getLocalPageCount(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName57.equals(name) && Arrays.deepEquals(_methodParameterTypes57,parameterTypes)) {
    return FolderLocalServiceUtil.getPercentDownloaded(((Long)arguments[0]).longValue());
  }
  if (_methodName58.equals(name) && Arrays.deepEquals(_methodParameterTypes58,parameterTypes)) {
    return FolderLocalServiceUtil.getRemotePageCount(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName59.equals(name) && Arrays.deepEquals(_methodParameterTypes59,parameterTypes)) {
    return FolderLocalServiceUtil.updateFolder(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],((Integer)arguments[3]).intValue());
  }
  throw new UnsupportedOperationException();
}
