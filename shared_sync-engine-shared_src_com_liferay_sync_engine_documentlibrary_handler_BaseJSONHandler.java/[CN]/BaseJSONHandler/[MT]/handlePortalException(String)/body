{
  ObjectMapper objectMapper=new ObjectMapper();
  JsonNode responseJsonNode=null;
  try {
    responseJsonNode=objectMapper.readTree(response);
  }
 catch (  Exception e) {
    return false;
  }
  JsonNode exceptionJsonNode=responseJsonNode.get("exception");
  if (exceptionJsonNode == null) {
    return false;
  }
  String exception=exceptionJsonNode.asText();
  if (_logger.isDebugEnabled()) {
    _logger.debug("Handling exception {}",exception);
  }
  if (exception.equals("com.liferay.portal.DuplicateLockException")) {
    SyncFile syncFile=(SyncFile)getParameterValue("syncFile");
    syncFile.setState(SyncFile.STATE_ERROR);
    syncFile.setUiEvent(SyncFile.UI_EVENT_DUPLICATE_LOCK);
    SyncFileService.update(syncFile);
  }
 else   if (exception.equals("com.liferay.portal.kernel.upload.UploadException")) {
    SyncFile syncFile=(SyncFile)getParameterValue("syncFile");
    syncFile.setState(SyncFile.STATE_ERROR);
    syncFile.setUiEvent(SyncFile.UI_EVENT_EXCEEDED_SIZE_LIMIT);
    SyncFileService.update(syncFile);
  }
 else   if (exception.equals("com.liferay.portal.security.auth.PrincipalException")) {
    SyncFile syncFile=(SyncFile)getParameterValue("syncFile");
    syncFile.setState(SyncFile.STATE_ERROR);
    syncFile.setUiEvent(SyncFile.UI_EVENT_INVALID_PERMISSIONS);
    SyncFileService.update(syncFile);
  }
 else   if (exception.equals("com.liferay.portlet.documentlibrary.FileNameException")) {
    SyncFile syncFile=(SyncFile)getParameterValue("syncFile");
    syncFile.setState(SyncFile.STATE_ERROR);
    syncFile.setUiEvent(SyncFile.UI_EVENT_INVALID_FILE_NAME);
    SyncFileService.update(syncFile);
  }
 else   if (exception.equals("com.liferay.portlet.documentlibrary." + "NoSuchFileEntryException")) {
    SyncFile syncFile=(SyncFile)getParameterValue("syncFile");
    Path filePath=Paths.get(syncFile.getFilePathName());
    Files.deleteIfExists(filePath);
    SyncFileService.deleteSyncFile(syncFile);
  }
 else   if (exception.equals("java.lang.RuntimeException")) {
    SyncAccount syncAccount=SyncAccountService.fetchSyncAccount(getSyncAccountId());
    syncAccount.setActive(false);
    syncAccount.setState(SyncAccount.STATE_DISCONNECTED);
    syncAccount.setUiEvent(SyncAccount.UI_EVENT_SYNC_WEB_MISSING);
    SyncAccountService.update(syncAccount);
  }
 else   if (exception.equals("java.lang.SecurityException")) {
    throw new HttpResponseException(HttpStatus.SC_UNAUTHORIZED,"Authenticated access required");
  }
  return true;
}
