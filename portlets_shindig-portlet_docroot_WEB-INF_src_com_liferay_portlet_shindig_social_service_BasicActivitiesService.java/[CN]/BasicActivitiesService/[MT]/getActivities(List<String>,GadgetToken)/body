{
  List<Activity> activities=new ArrayList<Activity>();
  for (  String userId : userIds) {
    try {
      List<Activity> personActivities=new ArrayList<Activity>();
      List<ActivityTracker> activityTrackers=ActivityTrackerLocalServiceUtil.getUserActivityTrackers(Long.parseLong(userId),0,20);
      for (      ActivityTracker activityTracker : activityTrackers) {
        Activity activity=new Activity(String.valueOf(activityTracker.getClassPK()),String.valueOf(activityTracker.getUserId()));
        if (activityTracker.getClassName().equals(Activity.class.getName())) {
          JSONObject extraData=new JSONObject(activityTracker.getExtraData());
          if (extraData.has("appId")) {
            activity.setAppId(extraData.getString("appId"));
          }
          if (extraData.has("body")) {
            activity.setBody(extraData.getString("body"));
          }
          if (extraData.has("bodyId")) {
            activity.setBodyId(extraData.getString("bodyId"));
          }
          if (extraData.has("externalId")) {
            activity.setExternalId(extraData.getString("externalId"));
          }
          if (extraData.has("mediaItems")) {
            activity.setMediaItems(OpenSocialUtil.getMediaItems(extraData.getJSONArray("mediaItems")));
          }
          if (extraData.has("postedTime")) {
            activity.setPostedTime(extraData.getLong("postedTime"));
          }
          if (extraData.has("priority")) {
            activity.setPriority(Float.parseFloat(extraData.getString("priority")));
          }
          if (extraData.has("streamFaviconUrl")) {
            activity.setStreamFaviconUrl(extraData.getString("streamFaviconUrl"));
          }
          if (extraData.has("streamSourceUrl")) {
            activity.setStreamSourceUrl(extraData.getString("streamSourceUrl"));
          }
          if (extraData.has("streamTitle")) {
            activity.setStreamTitle(extraData.getString("streamTitle"));
          }
          if (extraData.has("streamUrl")) {
            activity.setStreamUrl(extraData.getString("streamUrl"));
          }
          if (extraData.has("templateParams")) {
            activity.setTemplateParams(OpenSocialUtil.getTemplateParams(extraData.getJSONArray("templateParams")));
          }
          if (extraData.has("streamUrl")) {
            activity.setStreamUrl(extraData.getString("streamUrl"));
          }
        }
 else {
          activity.setAppId(activityTracker.getClassName());
          activity.setTitle(activityTracker.getActivity());
        }
        personActivities.add(activity);
      }
      activities.addAll(personActivities);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  return new ResponseItem<List<Activity>>(activities);
}
