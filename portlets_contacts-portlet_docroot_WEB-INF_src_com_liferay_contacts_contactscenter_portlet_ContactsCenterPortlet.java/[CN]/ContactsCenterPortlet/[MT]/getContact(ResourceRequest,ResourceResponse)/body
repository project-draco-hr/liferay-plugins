{
  long userId=ParamUtil.getLong(resourceRequest,"userId");
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  try {
    User user=UserLocalServiceUtil.getUser(userId);
    LiferayPortletResponse liferayPortletResponse=(LiferayPortletResponse)resourceResponse;
    boolean viewRelationActions=true;
    if (SocialRelationLocalServiceUtil.hasRelation(userId,themeDisplay.getUserId(),SocialRelationConstants.TYPE_UNI_ENEMY)) {
      viewRelationActions=false;
    }
 else     if (SocialRelationLocalServiceUtil.hasRelation(themeDisplay.getUserId(),userId,SocialRelationConstants.TYPE_UNI_ENEMY)) {
      viewRelationActions=false;
    }
    boolean block=SocialRelationLocalServiceUtil.hasRelation(themeDisplay.getUserId(),userId,SocialRelationConstants.TYPE_UNI_ENEMY);
    boolean connectionRequested=viewRelationActions && SocialRequestLocalServiceUtil.hasRequest(themeDisplay.getUserId(),User.class.getName(),themeDisplay.getUserId(),SocialRelationConstants.TYPE_BI_CONNECTION,userId,SocialRequestConstants.STATUS_PENDING);
    boolean connected=!connectionRequested && viewRelationActions && SocialRelationLocalServiceUtil.hasRelation(themeDisplay.getUserId(),userId,SocialRelationConstants.TYPE_BI_CONNECTION);
    boolean following=viewRelationActions && SocialRelationLocalServiceUtil.hasRelation(themeDisplay.getUserId(),userId,SocialRelationConstants.TYPE_UNI_FOLLOWER);
    JSONObject userJSONObject=JSONFactoryUtil.createJSONObject();
    userJSONObject.put("block",block);
    userJSONObject.put("connectionRequested",connectionRequested);
    userJSONObject.put("connected",connected);
    userJSONObject.put("emailAddress",user.getEmailAddress());
    userJSONObject.put("jobTitle",user.getJobTitle());
    userJSONObject.put("firstName",user.getFirstName());
    userJSONObject.put("following",following);
    userJSONObject.put("fullName",user.getFullName());
    userJSONObject.put("lastName",user.getLastName());
    userJSONObject.put("portraitURL",user.getPortraitURL(themeDisplay));
    userJSONObject.put("userId",String.valueOf(user.getUserId()));
    PortletURL viewSummaryURL=liferayPortletResponse.createRenderURL();
    viewSummaryURL.setWindowState(LiferayWindowState.EXCLUSIVE);
    viewSummaryURL.setParameter("mvcPath","/contacts_center/view_resources.jsp");
    viewSummaryURL.setParameter("userId",String.valueOf(user.getUserId()));
    userJSONObject.put("viewSummaryURL",viewSummaryURL.toString());
    jsonObject.put("user",userJSONObject);
    jsonObject.put("success",true);
  }
 catch (  Exception e) {
    jsonObject.put("success",false);
    String message=LanguageUtil.get(themeDisplay.getLocale(),"an-error-occurred-while-retrieving-the-user-information");
    jsonObject.put("message",message);
  }
  writeJSON(resourceRequest,resourceResponse,jsonObject);
}
