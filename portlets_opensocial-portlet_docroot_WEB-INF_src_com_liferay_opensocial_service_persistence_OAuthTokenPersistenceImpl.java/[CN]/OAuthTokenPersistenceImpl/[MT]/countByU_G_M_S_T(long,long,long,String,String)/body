{
  Object[] finderArgs=new Object[]{userId,gadgetId,moduleId,serviceName,tokenName};
  Long count=(Long)FinderCacheUtil.getResult(FINDER_PATH_COUNT_BY_U_G_M_S_T,finderArgs,this);
  if (count == null) {
    StringBundler query=new StringBundler(6);
    query.append(_SQL_COUNT_OAUTHTOKEN_WHERE);
    query.append(_FINDER_COLUMN_U_G_M_S_T_USERID_2);
    query.append(_FINDER_COLUMN_U_G_M_S_T_GADGETID_2);
    query.append(_FINDER_COLUMN_U_G_M_S_T_MODULEID_2);
    if (serviceName == null) {
      query.append(_FINDER_COLUMN_U_G_M_S_T_SERVICENAME_1);
    }
 else {
      if (serviceName.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_U_G_M_S_T_SERVICENAME_3);
      }
 else {
        query.append(_FINDER_COLUMN_U_G_M_S_T_SERVICENAME_2);
      }
    }
    if (tokenName == null) {
      query.append(_FINDER_COLUMN_U_G_M_S_T_TOKENNAME_1);
    }
 else {
      if (tokenName.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_U_G_M_S_T_TOKENNAME_3);
      }
 else {
        query.append(_FINDER_COLUMN_U_G_M_S_T_TOKENNAME_2);
      }
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(gadgetId);
      qPos.add(moduleId);
      if (serviceName != null) {
        qPos.add(serviceName);
      }
      if (tokenName != null) {
        qPos.add(tokenName);
      }
      count=(Long)q.uniqueResult();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (count == null) {
        count=Long.valueOf(0);
      }
      FinderCacheUtil.putResult(FINDER_PATH_COUNT_BY_U_G_M_S_T,finderArgs,count);
      closeSession(session);
    }
  }
  return count.intValue();
}
