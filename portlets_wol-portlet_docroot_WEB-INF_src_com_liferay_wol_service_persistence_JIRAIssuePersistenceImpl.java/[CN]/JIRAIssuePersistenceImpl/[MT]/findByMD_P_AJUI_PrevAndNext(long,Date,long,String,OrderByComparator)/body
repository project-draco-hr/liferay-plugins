{
  JIRAIssue jiraIssue=findByPrimaryKey(jiraIssueId);
  int count=countByMD_P_AJUI(modifiedDate,projectId,assigneeJiraUserId);
  Session session=null;
  try {
    session=openSession();
    StringBuilder query=new StringBuilder();
    query.append("FROM com.liferay.wol.model.JIRAIssue WHERE ");
    if (modifiedDate == null) {
      query.append("updated > null");
    }
 else {
      query.append("updated > ?");
    }
    query.append(" AND ");
    query.append("project = ?");
    query.append(" AND ");
    if (assigneeJiraUserId == null) {
      query.append("assignee IS NULL");
    }
 else {
      query.append("assignee = ?");
    }
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY ");
      query.append(obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("updated DESC");
    }
    Query q=session.createQuery(query.toString());
    QueryPos qPos=QueryPos.getInstance(q);
    if (modifiedDate != null) {
      qPos.add(CalendarUtil.getTimestamp(modifiedDate));
    }
    qPos.add(projectId);
    if (assigneeJiraUserId != null) {
      qPos.add(assigneeJiraUserId);
    }
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,jiraIssue);
    JIRAIssue[] array=new JIRAIssueImpl[3];
    array[0]=(JIRAIssue)objArray[0];
    array[1]=(JIRAIssue)objArray[1];
    array[2]=(JIRAIssue)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw HibernateUtil.processException(e);
  }
 finally {
    closeSession(session);
  }
}
