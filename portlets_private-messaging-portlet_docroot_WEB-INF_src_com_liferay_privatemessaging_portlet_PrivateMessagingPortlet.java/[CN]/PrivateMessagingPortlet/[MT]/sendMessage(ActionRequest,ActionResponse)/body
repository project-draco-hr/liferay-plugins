{
  UploadPortletRequest uploadPortletRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long mbThreadId=ParamUtil.getLong(uploadPortletRequest,"mbThreadId");
  long userId=ParamUtil.getLong(uploadPortletRequest,"userId");
  String body=ParamUtil.getString(uploadPortletRequest,"body");
  String subject=ParamUtil.getString(uploadPortletRequest,"subject");
  String to=ParamUtil.getString(uploadPortletRequest,"to");
  List<ObjectValuePair<String,InputStream>> inputStreamOVPs=new ArrayList<ObjectValuePair<String,InputStream>>();
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  try {
    for (int i=1; i <= 3; i++) {
      String fileName=uploadPortletRequest.getFileName("msgFile" + i);
      InputStream inputStream=uploadPortletRequest.getFileAsStream("msgFile" + i);
      if (inputStream == null) {
        continue;
      }
      validateAttachment(fileName,inputStream);
      try {
        ObjectValuePair<String,InputStream> inputStreamOVP=new ObjectValuePair<String,InputStream>(fileName,inputStream);
        inputStreamOVPs.add(inputStreamOVP);
      }
 catch (      Exception e) {
        _log.error(translate(actionRequest,"unable to attach file ") + fileName,e);
      }
    }
    UserThreadLocalServiceUtil.addPrivateMessage(userId,mbThreadId,to,subject,body,inputStreamOVPs,themeDisplay);
    jsonObject.put("success",Boolean.TRUE);
  }
 catch (  Exception e) {
    String message=null;
    if (e instanceof IOException) {
      message="unable-to-process-attachment";
    }
 else     if (e instanceof FileExtensionException || e instanceof FileNameException || e instanceof FileSizeException|| e instanceof UserScreenNameException) {
      SessionErrors.add(actionRequest,e.getClass());
      message="unable-to-process-attachment";
    }
    jsonObject.put("message",translate(actionRequest,message));
    jsonObject.put("success",Boolean.FALSE);
  }
 finally {
    for (    ObjectValuePair<String,InputStream> inputStreamOVP : inputStreamOVPs) {
      InputStream inputStream=inputStreamOVP.getValue();
      StreamUtil.cleanUp(inputStream);
    }
  }
  writeJSON(actionRequest,actionResponse,jsonObject);
}
