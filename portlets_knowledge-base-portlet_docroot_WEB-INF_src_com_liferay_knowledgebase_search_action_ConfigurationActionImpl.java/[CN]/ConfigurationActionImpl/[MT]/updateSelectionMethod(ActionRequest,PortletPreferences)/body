{
  String selectionMethod=ParamUtil.getString(actionRequest,"selectionMethod");
  long[] scopeGroupIds=StringUtil.split(ParamUtil.getString(actionRequest,"scopeGroupIds"),0L);
  long[] resourcePrimKeys=StringUtil.split(ParamUtil.getString(actionRequest,"resourcePrimKeys"),0L);
  boolean assetEntryQueryContains=ParamUtil.getBoolean(actionRequest,"assetEntryQueryContains");
  boolean assetEntryQueryAndOperator=ParamUtil.getBoolean(actionRequest,"assetEntryQueryAndOperator");
  String assetEntryQueryName=ParamUtil.getString(actionRequest,"assetEntryQueryName");
  long[] assetCategoryIds=StringUtil.split(ParamUtil.getString(actionRequest,"assetCategoryIds"),0L);
  String[] assetTagNames=StringUtil.split(ParamUtil.getString(actionRequest,"assetTagNames"));
  preferences.setValue("selection-method",selectionMethod);
  preferences.setValues("scope-group-ids",ArrayUtil.toStringArray(scopeGroupIds));
  preferences.setValues("resource-prim-keys",ArrayUtil.toStringArray(resourcePrimKeys));
  preferences.setValue("asset-entry-query-contains",String.valueOf(assetEntryQueryContains));
  preferences.setValue("asset-entry-query-and-operator",String.valueOf(assetEntryQueryAndOperator));
  preferences.setValue("asset-entry-query-name",assetEntryQueryName);
  preferences.setValues("asset-category-ids",ArrayUtil.toStringArray(assetCategoryIds));
  preferences.setValues("asset-tag-names",assetTagNames);
}
