{
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  Map<String,Serializable> workflowContext=executionContext.getWorkflowContext();
  jsonObject.put(WorkflowConstants.CONTEXT_COMPANY_ID,String.valueOf(workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID)));
  jsonObject.put(WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME,(String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME));
  jsonObject.put(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK,String.valueOf(workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK)));
  jsonObject.put(WorkflowConstants.CONTEXT_ENTRY_TYPE,(String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_TYPE));
  jsonObject.put(WorkflowConstants.CONTEXT_GROUP_ID,String.valueOf(workflowContext.get(WorkflowConstants.CONTEXT_GROUP_ID)));
  KaleoInstanceToken kaleoInstanceToken=executionContext.getKaleoInstanceToken();
  KaleoTaskInstanceToken kaleoTaskInstanceToken=executionContext.getKaleoTaskInstanceToken();
  if (kaleoTaskInstanceToken != null) {
    jsonObject.put(WorkflowConstants.CONTEXT_USER_ID,String.valueOf(kaleoTaskInstanceToken.getUserId()));
  }
 else {
    jsonObject.put(WorkflowConstants.CONTEXT_USER_ID,String.valueOf(kaleoInstanceToken.getUserId()));
  }
  jsonObject.put("notificationMessage",notificationMessage);
  jsonObject.put("workflowInstanceId",kaleoInstanceToken.getKaleoInstanceId());
  jsonObject.put("workflowTaskId",kaleoTaskInstanceToken.getKaleoTaskInstanceTokenId());
  return jsonObject;
}
