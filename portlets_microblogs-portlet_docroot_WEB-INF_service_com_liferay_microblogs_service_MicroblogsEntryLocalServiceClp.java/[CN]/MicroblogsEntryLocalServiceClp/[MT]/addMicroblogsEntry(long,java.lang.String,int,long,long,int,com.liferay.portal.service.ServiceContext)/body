{
  Object returnObj=null;
  try {
    returnObj=_invokableLocalService.invokeMethod(_methodName19,_methodParameterTypes19,new Object[]{userId,ClpSerializer.translateInput(content),type,receiverUserId,receiverMicroblogsEntryId,socialRelationType,ClpSerializer.translateInput(serviceContext)});
  }
 catch (  Throwable t) {
    t=ClpSerializer.translateThrowable(t);
    if (t instanceof com.liferay.portal.kernel.exception.PortalException) {
      throw (com.liferay.portal.kernel.exception.PortalException)t;
    }
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (com.liferay.microblogs.model.MicroblogsEntry)ClpSerializer.translateOutput(returnObj);
}
