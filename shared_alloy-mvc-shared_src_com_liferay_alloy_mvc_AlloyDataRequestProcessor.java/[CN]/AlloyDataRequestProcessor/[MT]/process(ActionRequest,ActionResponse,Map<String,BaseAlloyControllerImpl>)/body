{
  String jsonString=null;
  String controller=ParamUtil.getString(actionRequest,"controller");
  BaseAlloyControllerImpl baseAlloyControllerImpl=alloyControllers.get(controller);
  if (baseAlloyControllerImpl == null) {
    throw new Exception("Unable to find controller " + controller);
  }
  String action=ParamUtil.getString(actionRequest,"action");
  try {
    if (action.equals("custom")) {
      Class<?> clazz=BaseAlloyControllerImpl.class;
      Method method=clazz.getDeclaredMethod("processDataRequest",new Class<?>[]{ActionRequest.class});
      jsonString=(String)ServiceBeanMethodInvocationFactoryUtil.proceed(baseAlloyControllerImpl,clazz,method,new Object[]{actionRequest},new String[]{"transactionAdvice"});
    }
 else     if (action.equals("dynamicQuery")) {
      jsonString=executeDynamicQuery(baseAlloyControllerImpl,actionRequest);
    }
 else     if (action.equals("search")) {
      jsonString=executeSearch(baseAlloyControllerImpl,actionRequest);
    }
  }
 catch (  Exception e) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    String message=e.getMessage();
    if (Validator.isNull(message)) {
      message=baseAlloyControllerImpl.translate("an-unexpected-error-occurred");
    }
    jsonObject.put("message",message);
    jsonObject.put("stacktrace",StackTraceUtil.getStackTrace(e));
    jsonObject.put("success",false);
    jsonString=jsonObject.toString();
  }
  if (jsonString != null) {
    writeJSON(actionRequest,actionResponse,jsonString);
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject(jsonString);
    if (jsonObject.getBoolean("success")) {
      AlloyNotificationEventHelper alloyNotificationEventHelper=baseAlloyControllerImpl.alloyNotificationEventHelper;
      alloyNotificationEventHelper.addUserNotificationEvents(PortalUtil.getHttpServletRequest(actionRequest),controller,action,jsonObject.getJSONObject("alloyNotificationEventHelperPayloadJSONObject"));
    }
  }
}
