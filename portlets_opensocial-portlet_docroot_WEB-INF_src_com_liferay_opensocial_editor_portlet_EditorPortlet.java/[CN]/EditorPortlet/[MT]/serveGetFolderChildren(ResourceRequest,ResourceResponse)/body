{
  long repositoryId=ParamUtil.getLong(resourceRequest,"repositoryId");
  long folderId=ParamUtil.getLong(resourceRequest,"folderId");
  List<Folder> folders=DLAppServiceUtil.getFolders(repositoryId,folderId);
  folders=ListUtil.sort(folders,new RepositoryModelNameComparator(true));
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  for (  Folder folder : folders) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("id",String.valueOf(folder.getFolderId()));
    jsonObject.put("label",folder.getName());
    jsonObject.put("leaf",false);
    jsonObject.put("type","io");
    jsonArray.put(jsonObject);
  }
  boolean getFileEntries=ParamUtil.getBoolean(resourceRequest,"getFileEntries");
  if (getFileEntries) {
    List<FileEntry> fileEntries=DLAppServiceUtil.getFileEntries(repositoryId,folderId);
    fileEntries=ListUtil.sort(fileEntries,new RepositoryModelNameComparator(true));
    for (    FileEntry fileEntry : fileEntries) {
      JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
      jsonObject.put("id",String.valueOf(fileEntry.getFileEntryId()));
      jsonObject.put("label",fileEntry.getTitle());
      jsonObject.put("leaf",true);
      jsonArray.put(jsonObject);
    }
  }
  writeJSON(resourceRequest,resourceResponse,jsonArray.toString());
}
