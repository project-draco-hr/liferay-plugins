{
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long repositoryId=ParamUtil.getLong(resourceRequest,"repositoryId");
  long folderId=ParamUtil.getLong(resourceRequest,"folderId");
  List<Folder> folders=DLAppServiceUtil.getFolders(repositoryId,folderId);
  folders=ListUtil.sort(folders,new RepositoryModelNameComparator(true));
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  for (  Folder folder : folders) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("entryId",folder.getFolderId());
    jsonObject.put("label",folder.getName());
    jsonObject.put("leaf",false);
    jsonObject.put("type","editor");
    jsonArray.put(jsonObject);
  }
  boolean getFileEntries=ParamUtil.getBoolean(resourceRequest,"getFileEntries");
  if (getFileEntries) {
    PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
    long groupId=themeDisplay.getScopeGroupId();
    boolean publishGadgetPermission=GadgetPermission.contains(permissionChecker,groupId,ActionKeys.PUBLISH_GADGET);
    List<FileEntry> fileEntries=DLAppServiceUtil.getFileEntries(repositoryId,folderId);
    fileEntries=ListUtil.sort(fileEntries,new RepositoryModelNameComparator(true));
    for (    FileEntry fileEntry : fileEntries) {
      JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
      jsonObject.put("entryId",fileEntry.getFileEntryId());
      String portalURL=PortalUtil.getPortalURL(themeDisplay);
      String fileEntryURL=ShindigUtil.getFileEntryURL(portalURL,fileEntry.getFileEntryId());
      jsonObject.put("fileEntryURL",fileEntryURL);
      long gadgetId=0;
      try {
        Gadget gadget=GadgetLocalServiceUtil.getGadget(themeDisplay.getCompanyId(),fileEntryURL);
        gadgetId=gadget.getGadgetId();
      }
 catch (      Exception e) {
      }
      jsonObject.put("gadgetId",gadgetId);
      jsonObject.put("label",fileEntry.getTitle());
      jsonObject.put("leaf",true);
      JSONObject jsonPermissions=JSONFactoryUtil.createJSONObject();
      jsonPermissions.put("publishGadgetPermission",publishGadgetPermission);
      if (gadgetId > 0) {
        boolean unpublishPermission=GadgetPermission.contains(permissionChecker,groupId,gadgetId,ActionKeys.DELETE);
        jsonPermissions.put("unpublishPermission",unpublishPermission);
      }
      jsonObject.put("permissions",jsonPermissions);
      jsonObject.put("type","editor");
      jsonArray.put(jsonObject);
    }
  }
  writeJSON(resourceRequest,resourceResponse,jsonArray.toString());
}
