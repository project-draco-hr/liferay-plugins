{
  KBFeedbackEntry kbFeedbackEntry=findByPrimaryKey(feedbackEntryId);
  int count=countByA_V(articleResourcePrimKey,vote);
  Session session=null;
  try {
    session=openSession();
    StringBuilder query=new StringBuilder();
    query.append("FROM com.liferay.kb.knowledgebase.model.KBFeedbackEntry WHERE ");
    query.append("articleResourcePrimKey = ?");
    query.append(" AND ");
    query.append("vote = ?");
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY ");
      query.append(obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("createDate DESC");
    }
    Query q=session.createQuery(query.toString());
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(articleResourcePrimKey);
    qPos.add(vote);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,kbFeedbackEntry);
    KBFeedbackEntry[] array=new KBFeedbackEntryImpl[3];
    array[0]=(KBFeedbackEntry)objArray[0];
    array[1]=(KBFeedbackEntry)objArray[1];
    array[2]=(KBFeedbackEntry)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}
