{
  String sql=null;
  if (count) {
    sql=CustomSQLUtil.get(COUNT_BY_C_KTAI);
  }
 else {
    sql=CustomSQLUtil.get(FIND_BY_C_KTAI);
  }
  sql=CustomSQLUtil.appendCriteria(sql,getAssetType(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getAssigneeClassName(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getAssigneeClassPK(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getCompleted(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getDueDateGT(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getDueDateLT(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getRoleIds(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getSearchByUserRoles(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.appendCriteria(sql,getTaskName(kaleoTaskInstanceTokenQuery));
  sql=CustomSQLUtil.replaceAndOperator(sql,kaleoTaskInstanceTokenQuery.isAndOperator());
  sql=CustomSQLUtil.replaceOrderBy(sql,kaleoTaskInstanceTokenQuery.getOrderByComparator());
  SQLQuery q=session.createSQLQuery(sql);
  if (count) {
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
  }
 else {
    q.addEntity("Kaleo_KaleoTaskInstanceToken",KaleoTaskInstanceTokenImpl.class);
  }
  QueryPos qPos=QueryPos.getInstance(q);
  qPos.add(kaleoTaskInstanceTokenQuery.getCompanyId());
  setAssetType(qPos,kaleoTaskInstanceTokenQuery);
  setAssigneeClassName(qPos,kaleoTaskInstanceTokenQuery);
  setAssigneeClassPK(qPos,kaleoTaskInstanceTokenQuery);
  setCompleted(qPos,kaleoTaskInstanceTokenQuery);
  setDueDateGT(qPos,kaleoTaskInstanceTokenQuery);
  setDueDateLT(qPos,kaleoTaskInstanceTokenQuery);
  setRoleIds(qPos,kaleoTaskInstanceTokenQuery);
  setTaskName(qPos,kaleoTaskInstanceTokenQuery);
  return q;
}
