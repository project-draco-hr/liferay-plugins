{
  String[] taskNames=CustomSQLUtil.keywords(taskName,false);
  String[] assetTypes=CustomSQLUtil.keywords(assetType,false);
  Timestamp dueDateGT_TS=CalendarUtil.getTimestamp(dueDateGT);
  Timestamp dueDateLT_TS=CalendarUtil.getTimestamp(dueDateLT);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(FIND_BY_C_DD_K_UR);
    sql=StringUtil.replace(sql,"[$COMPLETION$]",getCompletion(completed));
    sql=StringUtil.replace(sql,"[$SEARCH_CRITERIA$]",getSearchCriteria(taskNames,assetTypes,dueDateGT_TS,dueDateLT_TS));
    sql=CustomSQLUtil.replaceKeywords(sql,"Kaleo_KaleoTaskInstanceToken.kaleoTaskName",StringPool.LIKE,false,taskNames);
    sql=CustomSQLUtil.replaceKeywords(sql,"Kaleo_KaleoTaskInstanceToken.className",StringPool.LIKE,false,assetTypes);
    List<Long> roleIds=null;
    List<UserGroupRole> userGroupRoles=null;
    if ((searchByUserRoles != null) && searchByUserRoles) {
      roleIds=RoleRetrievalUtil.getRoleIds(serviceContext);
      userGroupRoles=UserGroupRoleLocalServiceUtil.getUserGroupRoles(serviceContext.getUserId());
    }
    sql=StringUtil.replace(sql,"[$USER_ROLES$]",getUserRoles(searchByUserRoles,roleIds,userGroupRoles));
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    sql=CustomSQLUtil.replaceOrderBy(sql,orderByComparator);
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("Kaleo_KaleoTaskInstanceToken",KaleoTaskInstanceTokenImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    setCompleted(qPos,completed);
    setSearchCriteria(qPos,taskNames,assetTypes,dueDateGT_TS,dueDateLT_TS);
    setUserRoles(qPos,searchByUserRoles,roleIds,userGroupRoles,serviceContext.getUserId());
    qPos.add(serviceContext.getCompanyId());
    return (List<KaleoTaskInstanceToken>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}
