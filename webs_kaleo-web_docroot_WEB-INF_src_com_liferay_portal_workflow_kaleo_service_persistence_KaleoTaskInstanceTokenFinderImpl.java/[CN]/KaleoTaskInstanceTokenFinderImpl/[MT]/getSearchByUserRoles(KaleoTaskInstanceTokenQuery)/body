{
  Boolean searchByUserRoles=kaleoTaskInstanceTokenQuery.isSearchByUserRoles();
  if (searchByUserRoles == null) {
    return StringPool.BLANK;
  }
  if (searchByUserRoles) {
    List<Long> roleIds=RoleRetrievalUtil.getRoleIds(kaleoTaskInstanceTokenQuery.getServiceContext());
    List<UserGroupRole> userGroupRoles=UserGroupRoleLocalServiceUtil.getUserGroupRoles(kaleoTaskInstanceTokenQuery.getUserId());
    if (roleIds.isEmpty() && userGroupRoles.isEmpty()) {
      return StringPool.BLANK;
    }
    StringBundler sb=new StringBundler();
    sb.append("AND ((");
    sb.append("Kaleo_KaleoTaskAssignmentInstance.assigneeClassName = ");
    sb.append("?) AND (");
    for (int i=0; i < roleIds.size(); i++) {
      sb.append("(Kaleo_KaleoTaskAssignmentInstance.assigneeClassPK = ?)");
      if ((i + 1) < roleIds.size()) {
        sb.append(" OR ");
      }
    }
    if (!roleIds.isEmpty() && !userGroupRoles.isEmpty()) {
      sb.append(" OR ");
    }
    for (int i=0; i < userGroupRoles.size(); i++) {
      sb.append("((Kaleo_KaleoTaskAssignmentInstance.groupId = ?) ");
      sb.append("AND (Kaleo_KaleoTaskAssignmentInstance.");
      sb.append("assigneeClassPK = ?))");
      if ((i + 1) < userGroupRoles.size()) {
        sb.append(" OR ");
      }
    }
    sb.append("))");
    return sb.toString();
  }
 else {
    StringBundler sb=new StringBundler(4);
    sb.append("AND (");
    sb.append("(Kaleo_KaleoTaskAssignmentInstance.assigneeClassName ");
    sb.append("= ?) AND (Kaleo_KaleoTaskAssignmentInstance.");
    sb.append("assigneeClassPK = ?))");
    return sb.toString();
  }
}
