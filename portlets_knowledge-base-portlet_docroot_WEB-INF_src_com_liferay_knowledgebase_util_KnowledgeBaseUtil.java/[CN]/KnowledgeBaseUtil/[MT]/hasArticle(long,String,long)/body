{
  if (!isValidPortletId(portletId)) {
    return false;
  }
  PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
  if (!ArticlePermission.contains(permissionChecker,resourcePrimKey,ActionKeys.VIEW)) {
    return false;
  }
  if (portletId.equals(PortletKeys.KNOWLEDGE_BASE_ADMIN)) {
    return true;
  }
  Article article=ArticleServiceUtil.getLatestArticle(resourcePrimKey,WorkflowConstants.STATUS_APPROVED);
  Layout layout=LayoutLocalServiceUtil.getLayout(plid);
  PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(layout,portletId,StringPool.BLANK);
  Map<String,String> preferencesMap=initPortletPreferencesMap(portletId,preferences);
  String selectionMethod=preferencesMap.get("selectionMethod");
  long[] resourcePrimKeys=StringUtil.split(preferencesMap.get("resourcePrimKeys"),0L);
  boolean allArticles=GetterUtil.getBoolean(preferencesMap.get("allArticles"));
  long[] classPKs=getAssetEntriesClassPKs(article.getGroupId(),0,null,preferencesMap);
  if (selectionMethod.equals("group") && (classPKs == null)) {
    return true;
  }
  List<Article> articles=null;
  if (selectionMethod.equals("group")) {
    long[] viewableParentResourcePrimKeys=new long[]{ArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY};
    if (allArticles) {
      viewableParentResourcePrimKeys=ArticleServiceUtil.getViewableParentResourcePrimKeys(article.getGroupId(),WorkflowConstants.STATUS_APPROVED);
    }
    articles=ArticleServiceUtil.getArticles(article.getGroupId(),classPKs,WorkflowConstants.STATUS_APPROVED,viewableParentResourcePrimKeys,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  }
  if (selectionMethod.equals("articles")) {
    if (classPKs != null) {
      List<Long> list=new UniqueList<Long>();
      list.addAll(SetUtil.fromArray(resourcePrimKeys));
      list.retainAll(SetUtil.fromArray(classPKs));
      resourcePrimKeys=StringUtil.split(StringUtil.merge(list),0L);
    }
    articles=ArticleServiceUtil.getArticles(article.getGroupId(),resourcePrimKeys,WorkflowConstants.STATUS_APPROVED,null,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  }
  resourcePrimKeys=StringUtil.split(ListUtil.toString(articles,"resourcePrimKey"),0L);
  while (resourcePrimKey != ArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY) {
    if (ArrayUtil.contains(resourcePrimKeys,resourcePrimKey)) {
      return true;
    }
    Article curArticle=ArticleServiceUtil.getLatestArticle(resourcePrimKey,WorkflowConstants.STATUS_APPROVED);
    resourcePrimKey=curArticle.getParentResourcePrimKey();
  }
  return false;
}
