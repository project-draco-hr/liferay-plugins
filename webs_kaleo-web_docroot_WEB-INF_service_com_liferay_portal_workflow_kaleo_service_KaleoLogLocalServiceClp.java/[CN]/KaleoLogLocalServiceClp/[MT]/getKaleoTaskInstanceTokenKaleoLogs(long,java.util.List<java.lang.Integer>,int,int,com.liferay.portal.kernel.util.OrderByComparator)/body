{
  Object paramObj0=new LongWrapper(kaleoTaskInstanceTokenId);
  Object paramObj1=ClpSerializer.translateInput(logTypes);
  if (logTypes == null) {
    paramObj1=new NullWrapper("java.util.List");
  }
  Object paramObj2=new IntegerWrapper(start);
  Object paramObj3=new IntegerWrapper(end);
  Object paramObj4=ClpSerializer.translateInput(orderByComparator);
  if (orderByComparator == null) {
    paramObj4=new NullWrapper("com.liferay.portal.kernel.util.OrderByComparator");
  }
  Object returnObj=null;
  try {
    returnObj=_classLoaderProxy.invoke("getKaleoTaskInstanceTokenKaleoLogs",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (java.util.List<com.liferay.portal.workflow.kaleo.model.KaleoLog>)ClpSerializer.translateOutput(returnObj);
}
