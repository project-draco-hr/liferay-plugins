{
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String portletName=getPortletConfig().getPortletName();
  long wsrpConsumerPortletId=GetterUtil.getLong(portletName.substring(PORTLET_NAME_PREFIX.length()));
  WSRPConsumerPortlet wsrpConsumerPortlet=WSRPConsumerPortletLocalServiceUtil.getWSRPConsumerPortlet(wsrpConsumerPortletId);
  WSRPConsumer wsrpConsumer=WSRPConsumerLocalServiceUtil.getWSRPConsumer(wsrpConsumerPortlet.getWsrpConsumerId());
  WSRPConsumerManager wsrpConsumerManager=WSRPConsumerManagerFactory.getWSRPConsumerManager(wsrpConsumer);
  PortletDescription portletDescription=wsrpConsumerManager.getPortletDescription(wsrpConsumerPortlet.getPortletHandle());
  GetMarkup getMarkup=new GetMarkup();
  MarkupParams markupParams=new MarkupParams();
  ClientData clientData=new ClientData();
  clientData.setRequestVerb("GET");
  LiferayPortletRequest liferayPortletRequest=(LiferayPortletRequest)renderRequest;
  HttpServletRequest httpServletRequest=liferayPortletRequest.getHttpServletRequest();
  clientData.setUserAgent(httpServletRequest.getHeader("User-Agent"));
  markupParams.setClientData(clientData);
  List<Locale> locales=Collections.list(renderRequest.getLocales());
  String[] localesArray=new String[locales.size()];
  for (int i=0; i < locales.size(); i++) {
    Locale locale=locales.get(i);
    localesArray[i]=locale.toString();
  }
  markupParams.setLocales(localesArray);
  markupParams.setMarkupCharacterSets(new String[]{StringPool.UTF8});
  markupParams.setMimeTypes(new String[]{ContentTypes.TEXT_HTML});
  markupParams.setMode("wsrp:" + renderRequest.getPortletMode());
  markupParams.setWindowState("wsrp:" + renderRequest.getWindowState());
  MarkupType[] markupTypes=portletDescription.getMarkupTypes();
  for (  MarkupType markupType : markupTypes) {
    if (markupType.getMimeType().equalsIgnoreCase(ContentTypes.TEXT_HTML)) {
      markupParams.setValidNewModes(markupType.getModes());
      markupParams.setValidNewWindowStates(markupType.getWindowStates());
    }
  }
  getMarkup.setMarkupParams(markupParams);
  NavigationalContext navigationalContext=new NavigationalContext();
  String navigationalState=renderRequest.getParameter("wsrp-navigationalState");
  navigationalContext.setOpaqueValue(navigationalState);
  markupParams.setNavigationalContext(navigationalContext);
  PortletContext portletContext=new PortletContext();
  portletContext.setPortletHandle(wsrpConsumerPortlet.getPortletHandle());
  getMarkup.setPortletContext(portletContext);
  RuntimeContext runtimeContext=new RuntimeContext();
  runtimeContext.setNamespacePrefix(renderResponse.getNamespace());
  runtimeContext.setPortletInstanceKey(renderResponse.getNamespace());
  PortletSession portletSession=renderRequest.getPortletSession();
  SessionContext sessionContext=(SessionContext)portletSession.getAttribute(_SESSION_CONTEXT);
  if (sessionContext != null) {
    SessionParams sessionParams=new SessionParams();
    sessionParams.setSessionID(sessionContext.getSessionID());
    runtimeContext.setSessionParams(sessionParams);
  }
  runtimeContext.setUserAuthentication("wsrp:password");
  getMarkup.setRuntimeContext(runtimeContext);
  UserContext userContext=new UserContext();
  userContext.setUserCategories(new String[]{RoleConstants.USER});
  userContext.setUserContextKey(String.valueOf(themeDisplay.getUserId()));
  getMarkup.setUserContext(userContext);
  WSRP_v2_Markup_PortType markupService=getMarkupService(renderRequest,wsrpConsumerManager);
  MarkupResponse markupResponse=markupService.getMarkup(getMarkup);
  sessionContext=markupResponse.getSessionContext();
  if (sessionContext != null) {
    portletSession.setAttribute(_SESSION_CONTEXT,sessionContext);
  }
  return markupResponse;
}
