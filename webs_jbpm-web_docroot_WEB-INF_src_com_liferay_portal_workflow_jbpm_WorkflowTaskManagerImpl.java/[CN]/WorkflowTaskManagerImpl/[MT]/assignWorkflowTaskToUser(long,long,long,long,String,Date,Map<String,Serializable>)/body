{
  JbpmContext jbpmContext=_jbpmConfiguration.createJbpmContext();
  try {
    TaskMgmtSession taskMgmtSession=jbpmContext.getTaskMgmtSession();
    TaskInstance taskInstance=taskMgmtSession.loadTaskInstance(workflowTaskId);
    String oldActorId=taskInstance.getActorId();
    taskInstance.setActorId(String.valueOf(assigneeUserId));
    taskInstance.setPooledActors(new HashSet<PooledActor>());
    taskInstance.addComment(comment);
    setDueDate(taskInstance,dueDate);
    if (context != null) {
      taskInstance.addVariables(new HashMap<String,Object>(context));
    }
    jbpmContext.save(taskInstance);
    WorkflowLogImpl workflowLogImpl=new WorkflowLogImpl();
    workflowLogImpl.setComment(comment);
    workflowLogImpl.setCreateDate(new Date());
    workflowLogImpl.setPreviousUserId(GetterUtil.getLong(oldActorId));
    workflowLogImpl.setTaskInstance(taskInstance);
    workflowLogImpl.setType(WorkflowLog.TASK_ASSIGN);
    workflowLogImpl.setUserId(assigneeUserId);
    Session session=jbpmContext.getSession();
    session.save(workflowLogImpl);
    CustomSession customSession=new CustomSession(jbpmContext);
    TaskInstanceExtensionImpl taskInstanceExtension=customSession.findTaskInstanceExtension(taskInstance.getId());
    List<Assignee> assignees=taskInstanceExtension.getAssignees();
    assignees.clear();
    ProcessInstance processInstance=taskInstance.getProcessInstance();
    ContextInstance contextInstance=processInstance.getContextInstance();
    long groupId=GetterUtil.getLong((String)contextInstance.getVariable("groupId"));
    assignees.add(new Assignee(companyId,groupId,User.class.getName(),assigneeUserId));
    session.update(taskInstanceExtension);
    return new WorkflowTaskImpl(taskInstance);
  }
 catch (  Exception e) {
    throw new WorkflowException(e);
  }
 finally {
    jbpmContext.close();
  }
}
