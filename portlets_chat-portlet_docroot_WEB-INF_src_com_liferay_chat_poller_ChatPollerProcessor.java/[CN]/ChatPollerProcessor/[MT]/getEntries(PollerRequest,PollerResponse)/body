{
  long createDate=pollerRequest.getTimestamp();
  try {
    Status status=StatusLocalServiceUtil.getUserStatus(pollerRequest.getUserId());
    createDate=status.getModifiedDate();
    long onlineTimestamp=status.getModifiedDate() + ChatUtil.ONLINE_DELTA - ChatUtil.MAX_POLL_LATENCY;
    if (onlineTimestamp < System.currentTimeMillis()) {
      StatusLocalServiceUtil.updateStatus(pollerRequest.getUserId(),pollerRequest.getTimestamp());
    }
  }
 catch (  NoSuchStatusException nsse) {
    createDate=System.currentTimeMillis();
  }
  if (pollerRequest.isInitialRequest()) {
    createDate=createDate - Time.DAY;
  }
  List<Entry> entries=EntryLocalServiceUtil.getNewEntries(pollerRequest.getUserId(),createDate,0,ChatUtil.MAX_ENTRIES);
  entries=ListUtil.copy(entries);
  Collections.reverse(entries);
  JSONArray entriesJSON=JSONFactoryUtil.createJSONArray();
  for (  Entry entry : entries) {
    JSONObject entryJSON=JSONFactoryUtil.createJSONObject();
    entryJSON.put("entryId",entry.getEntryId());
    entryJSON.put("createDate",entry.getCreateDate());
    entryJSON.put("fromUserId",entry.getFromUserId());
    if (entry.getFromUserId() != pollerRequest.getUserId()) {
      User fromUser=UserLocalServiceUtil.getUserById(entry.getFromUserId());
      entryJSON.put("fromFullName",fromUser.getFullName());
      entryJSON.put("fromPortraitId",fromUser.getPortraitId());
    }
    entryJSON.put("toUserId",entry.getToUserId());
    entryJSON.put("content",HtmlUtil.escape(entry.getContent()));
    entriesJSON.put(entryJSON);
  }
  pollerResponse.setParameter("entries",entriesJSON);
  if (!entries.isEmpty()) {
    pollerResponse.setParameter(PollerResponse.POLLER_HINT_HIGH_CONNECTIVITY,Boolean.TRUE.toString());
  }
}
