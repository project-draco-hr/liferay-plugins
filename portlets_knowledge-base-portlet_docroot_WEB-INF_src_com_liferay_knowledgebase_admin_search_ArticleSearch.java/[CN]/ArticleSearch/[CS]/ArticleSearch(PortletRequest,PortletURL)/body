{
  super(portletRequest,new ArticleDisplayTerms(portletRequest),new ArticleSearchTerms(portletRequest),DEFAULT_CUR_PARAM,DEFAULT_DELTA,iteratorURL,headerNames,EMPTY_RESULTS_MESSAGE);
  ArticleDisplayTerms displayTerms=(ArticleDisplayTerms)getDisplayTerms();
  iteratorURL.setParameter(ArticleDisplayTerms.ANYTIME,String.valueOf(displayTerms.isAnytime()));
  iteratorURL.setParameter(ArticleDisplayTerms.CONTENT,displayTerms.getContent());
  iteratorURL.setParameter(ArticleDisplayTerms.END_DATE_DAY,String.valueOf(displayTerms.getEndDateDay()));
  iteratorURL.setParameter(ArticleDisplayTerms.END_DATE_MONTH,String.valueOf(displayTerms.getEndDateMonth()));
  iteratorURL.setParameter(ArticleDisplayTerms.END_DATE_YEAR,String.valueOf(displayTerms.getEndDateYear()));
  iteratorURL.setParameter(ArticleDisplayTerms.START_DATE_DAY,String.valueOf(displayTerms.getStartDateDay()));
  iteratorURL.setParameter(ArticleDisplayTerms.START_DATE_MONTH,String.valueOf(displayTerms.getStartDateMonth()));
  iteratorURL.setParameter(ArticleDisplayTerms.START_DATE_YEAR,String.valueOf(displayTerms.getStartDateYear()));
  iteratorURL.setParameter(ArticleDisplayTerms.STATUS,String.valueOf(displayTerms.getStatus()));
  iteratorURL.setParameter(ArticleDisplayTerms.TITLE,displayTerms.getTitle());
  try {
    PortalPreferences preferences=PortletPreferencesFactoryUtil.getPortalPreferences(portletRequest);
    String oldOrderByCol=preferences.getValue(PortletKeys.KNOWLEDGE_BASE_ADMIN,"articles-order-by-col","modified-date");
    String oldOrderByType=preferences.getValue(PortletKeys.KNOWLEDGE_BASE_ADMIN,"articles-order-by-type","desc");
    String orderByCol=ParamUtil.getString(portletRequest,"orderByCol",oldOrderByCol);
    String orderByType=ParamUtil.getString(portletRequest,"orderByType",oldOrderByType);
    if (!Validator.equals(orderByCol,oldOrderByCol) || !Validator.equals(orderByType,oldOrderByType)) {
      preferences.setValue(PortletKeys.KNOWLEDGE_BASE_ADMIN,"articles-order-by-col",orderByCol);
      preferences.setValue(PortletKeys.KNOWLEDGE_BASE_ADMIN,"articles-order-by-type",orderByType);
      ArticleSearchTerms searchTerms=(ArticleSearchTerms)getSearchTerms();
      searchTerms.setCurStartValues(new int[0]);
    }
    boolean orderByAsc=false;
    if (orderByType.equals("asc")) {
      orderByAsc=true;
    }
    OrderByComparator orderByComparator=null;
    if (orderByCol.equals("create-date")) {
      orderByComparator=new ArticleCreateDateComparator(orderByAsc);
    }
 else     if (orderByCol.equals("modified-date")) {
      orderByComparator=new ArticleModifiedDateComparator(orderByAsc);
    }
 else     if (orderByCol.equals("priority")) {
      orderByComparator=new ArticlePriorityComparator(orderByAsc);
    }
 else     if (orderByCol.equals("status")) {
      orderByComparator=new ArticleStatusComparator(orderByAsc);
    }
 else     if (orderByCol.equals("title")) {
      orderByComparator=new ArticleTitleComparator(orderByAsc);
    }
 else     if (orderByCol.equals("user-name")) {
      orderByComparator=new ArticleUserNameComparator(orderByAsc);
    }
    setOrderableHeaders(orderableHeaders);
    setOrderByCol(orderByCol);
    setOrderByType(orderByType);
    setOrderByComparator(orderByComparator);
  }
 catch (  Exception e) {
    _log.error(e);
  }
}
