{
  Object paramObj0=new LongWrapper(wsrpConsumerId);
  Object paramObj1=ClpSerializer.translateInput(adminPortletId);
  if (adminPortletId == null) {
    paramObj1=new NullWrapper("java.lang.String");
  }
  Object paramObj2=ClpSerializer.translateInput(registrationProperties);
  if (registrationProperties == null) {
    paramObj2=new NullWrapper("com.liferay.portal.kernel.util.UnicodeProperties");
  }
  Object paramObj3=ClpSerializer.translateInput(registrationHandle);
  if (registrationHandle == null) {
    paramObj3=new NullWrapper("java.lang.String");
  }
  Object paramObj4=ClpSerializer.translateInput(userToken);
  if (userToken == null) {
    paramObj4=new NullWrapper("java.lang.String");
  }
  Object returnObj=null;
  try {
    returnObj=_classLoaderProxy.invoke("registerWSRPConsumer",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.kernel.exception.PortalException) {
      throw (com.liferay.portal.kernel.exception.PortalException)t;
    }
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return (com.liferay.wsrp.model.WSRPConsumer)ClpSerializer.translateOutput(returnObj);
}
