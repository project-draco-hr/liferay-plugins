{
  SAMLMessageContext<AuthnRequest,Response,NameID> context=new BasicSAMLMessageContext<AuthnRequest,Response,NameID>();
  HttpSession session=request.getSession();
  SSORequestContext ssoRequestContext=(SSORequestContext)session.getAttribute(WebKeys.SSO_REQUEST_CONTEXT);
  if (ssoRequestContext != null) {
    session.removeAttribute(WebKeys.SSO_REQUEST_CONTEXT);
    context.setInboundMessageIssuer(ssoRequestContext.getRelyingPartyId());
    context.setInboundSAMLMessage(ssoRequestContext.getAuthnRequest());
    context.setRelayState(ssoRequestContext.getRelayState());
    ssoRequestContext.setStage(SSORequestContext.STAGE_AUTHENTICATED);
    return ssoRequestContext;
  }
  HTTPInTransport in=new HttpServletRequestAdapter(request);
  context.setInboundMessageTransport(in);
  try {
    OpenSAMLUtil.decodeHTTPRedirectRequest(context);
  }
 catch (  MessageDecodingException mde) {
    throw new PortalException(mde);
  }
catch (  SecurityException se) {
    throw new PortalException(se);
  }
  ssoRequestContext=new SSORequestContext(context.getInboundMessageIssuer(),context.getRelayState(),context.getInboundSAMLMessage());
  return ssoRequestContext;
}
