{
  Company company=PortalUtil.getCompany(request);
  long companyId=company.getCompanyId();
  if (!ShibbolethUtil.isEnabled(companyId)) {
    return null;
  }
  String shibbolethUserHeader=request.getHeader(PrefsPropsUtil.getString(companyId,PropsKeys.SHIBBOLETH_USER_HEADER,PropsValues.SHIBBOLETH_USER_HEADER));
  if (Validator.isNull(shibbolethUserHeader)) {
    return null;
  }
  String authType=company.getAuthType();
  User user=null;
  if (PrefsPropsUtil.getBoolean(companyId,PropsKeys.SHIBBOLETH_IMPORT_FROM_LDAP,PropsValues.SHIBBOLETH_IMPORT_FROM_LDAP)) {
    try {
      if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
        user=PortalLDAPImporterUtil.importLDAPUser(companyId,shibbolethUserHeader,StringPool.BLANK);
      }
 else {
        user=PortalLDAPImporterUtil.importLDAPUser(companyId,StringPool.BLANK,shibbolethUserHeader);
      }
    }
 catch (    SystemException se) {
    }
  }
  if (user == null) {
    if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
      user=UserLocalServiceUtil.fetchUserByEmailAddress(companyId,shibbolethUserHeader);
    }
 else {
      user=UserLocalServiceUtil.fetchUserByScreenName(companyId,shibbolethUserHeader);
    }
  }
  String[] credentials=new String[3];
  credentials[0]=String.valueOf(user.getUserId());
  credentials[1]=user.getPassword();
  credentials[2]=Boolean.TRUE.toString();
  return credentials;
}
