{
  Object[] finderArgs=new Object[]{userId,pollsQuestionId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_U_PQI,finderArgs,this);
  }
  if (result instanceof PollsVote) {
    PollsVote pollsVote=(PollsVote)result;
    if ((userId != pollsVote.getUserId()) || (pollsQuestionId != pollsVote.getPollsQuestionId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_POLLSVOTE_WHERE);
    query.append(_FINDER_COLUMN_U_PQI_USERID_2);
    query.append(_FINDER_COLUMN_U_PQI_POLLSQUESTIONID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(pollsQuestionId);
      List<PollsVote> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_PQI,finderArgs,list);
      }
 else {
        PollsVote pollsVote=list.get(0);
        result=pollsVote;
        cacheResult(pollsVote);
        if ((pollsVote.getUserId() != userId) || (pollsVote.getPollsQuestionId() != pollsQuestionId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_PQI,finderArgs,pollsVote);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_U_PQI,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (PollsVote)result;
  }
}
