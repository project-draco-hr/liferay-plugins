{
  svnRepository=toUnwrappedModel(svnRepository);
  boolean isNew=svnRepository.isNew();
  SVNRepositoryModelImpl svnRepositoryModelImpl=(SVNRepositoryModelImpl)svnRepository;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,svnRepository,merge);
    svnRepository.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  EntityCacheUtil.putResult(SVNRepositoryModelImpl.ENTITY_CACHE_ENABLED,SVNRepositoryImpl.class,svnRepository.getPrimaryKey(),svnRepository);
  if (!isNew && (!Validator.equals(svnRepository.getUrl(),svnRepositoryModelImpl.getOriginalUrl()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_URL,new Object[]{svnRepositoryModelImpl.getOriginalUrl()});
  }
  if (isNew || (!Validator.equals(svnRepository.getUrl(),svnRepositoryModelImpl.getOriginalUrl()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_URL,new Object[]{svnRepository.getUrl()},svnRepository);
  }
  return svnRepository;
}
