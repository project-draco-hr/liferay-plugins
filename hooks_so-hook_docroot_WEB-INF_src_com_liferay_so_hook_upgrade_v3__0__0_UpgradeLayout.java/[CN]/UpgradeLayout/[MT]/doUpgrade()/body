{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    StringBuilder sb=new StringBuilder(11);
    sb.append("select Layout.plid from Layout ");
    sb.append(getJoinSQL());
    sb.append("where ((Layout.typeSettings like '%");
    sb.append(_PORTLET_ID_ANNOUNCEMENTS);
    sb.append("%')");
    sb.append("or (Layout.typeSettings like '%");
    sb.append(AnnouncementsPortletKeys.ANNOUNCEMENTS);
    sb.append("%'))");
    sb.append("and (Layout.typeSettings not like '%");
    sb.append(PortletKeys.SO_ANNOUNCEMENTS);
    sb.append("%')");
    ps=con.prepareStatement(sb.toString());
    rs=ps.executeQuery();
    while (rs.next()) {
      long plid=rs.getLong("plid");
      Layout layout=LayoutLocalServiceUtil.getLayout(plid);
      LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
      LayoutTemplate layoutTemplate=layoutTypePortlet.getLayoutTemplate();
      UnicodeProperties typeSettingsProperties=layout.getTypeSettingsProperties();
      for (      String columnName : layoutTemplate.getColumns()) {
        String columnValue=typeSettingsProperties.getProperty(columnName);
        columnValue=StringUtil.replace(columnValue,_PORTLET_ID_ANNOUNCEMENTS,PortletKeys.SO_ANNOUNCEMENTS);
        columnValue=StringUtil.replace(columnValue,AnnouncementsPortletKeys.ANNOUNCEMENTS,PortletKeys.SO_ANNOUNCEMENTS);
        typeSettingsProperties.setProperty(columnName,columnValue);
      }
      layout.setTypeSettingsProperties(typeSettingsProperties);
      LayoutLocalServiceUtil.updateLayout(layout);
      LayoutUtil.addResources(layout,PortletKeys.SO_ANNOUNCEMENTS);
    }
    sb=new StringBuilder(5);
    sb.append("select Layout.plid from Layout ");
    sb.append(getJoinSQL());
    sb.append("where (Layout.typeSettings not like '%");
    sb.append(PortletKeys.SO_ANNOUNCEMENTS);
    sb.append("%') and (Layout.priority = 0)");
    ps=con.prepareStatement(sb.toString());
    rs=ps.executeQuery();
    while (rs.next()) {
      long plid=rs.getLong("plid");
      Layout layout=LayoutLocalServiceUtil.getLayout(plid);
      long layoutSetPrototypeGroupId=getLayoutSetPrototypeGroupId(layout.getCompanyId(),SocialOfficeConstants.LAYOUT_SET_PROTOTYPE_KEY_USER_PUBLIC);
      if (layout.getGroupId() == layoutSetPrototypeGroupId) {
        return;
      }
      LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
      UnicodeProperties typeSettingsProperties=layout.getTypeSettingsProperties();
      String columnValue=typeSettingsProperties.getProperty("column-1");
      if (Validator.isNull(columnValue)) {
        return;
      }
      int columnPos=0;
      if (StringUtil.contains(columnValue,PortletKeys.MICROBLOGS_STATUS_UPDATE)) {
        columnPos=1;
      }
      layoutTypePortlet.addPortletId(0,PortletKeys.SO_ANNOUNCEMENTS,"column-1",columnPos,false);
      layout=layoutTypePortlet.getLayout();
      LayoutLocalServiceUtil.updateLayout(layout);
      LayoutUtil.addResources(layout,PortletKeys.SO_ANNOUNCEMENTS);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}
