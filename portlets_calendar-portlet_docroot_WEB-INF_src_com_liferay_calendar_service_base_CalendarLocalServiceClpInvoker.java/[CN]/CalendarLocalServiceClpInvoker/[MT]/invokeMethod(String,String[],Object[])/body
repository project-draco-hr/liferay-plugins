{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return CalendarLocalServiceUtil.addCalendar((com.liferay.calendar.model.Calendar)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return CalendarLocalServiceUtil.createCalendar(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return CalendarLocalServiceUtil.deleteCalendar(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return CalendarLocalServiceUtil.deleteCalendar((com.liferay.calendar.model.Calendar)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return CalendarLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return CalendarLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return CalendarLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return CalendarLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return CalendarLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return CalendarLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return CalendarLocalServiceUtil.fetchCalendar(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return CalendarLocalServiceUtil.fetchCalendarByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return CalendarLocalServiceUtil.fetchCalendarByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendar(((Long)arguments[0]).longValue());
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return CalendarLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendarByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendarByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendars(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendarsCount();
  }
  if (_methodName19.equals(name) && Arrays.deepEquals(_methodParameterTypes19,parameterTypes)) {
    return CalendarLocalServiceUtil.updateCalendar((com.liferay.calendar.model.Calendar)arguments[0]);
  }
  if (_methodName64.equals(name) && Arrays.deepEquals(_methodParameterTypes64,parameterTypes)) {
    return CalendarLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName65.equals(name) && Arrays.deepEquals(_methodParameterTypes65,parameterTypes)) {
    CalendarLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName70.equals(name) && Arrays.deepEquals(_methodParameterTypes70,parameterTypes)) {
    return CalendarLocalServiceUtil.addCalendar(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],((Integer)arguments[5]).intValue(),((Boolean)arguments[6]).booleanValue(),((Boolean)arguments[7]).booleanValue(),((Boolean)arguments[8]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[9]);
  }
  if (_methodName71.equals(name) && Arrays.deepEquals(_methodParameterTypes71,parameterTypes)) {
    return CalendarLocalServiceUtil.deleteCalendar((com.liferay.calendar.model.Calendar)arguments[0]);
  }
  if (_methodName72.equals(name) && Arrays.deepEquals(_methodParameterTypes72,parameterTypes)) {
    return CalendarLocalServiceUtil.deleteCalendar(((Long)arguments[0]).longValue());
  }
  if (_methodName73.equals(name) && Arrays.deepEquals(_methodParameterTypes73,parameterTypes)) {
    return CalendarLocalServiceUtil.exportCalendar(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  if (_methodName74.equals(name) && Arrays.deepEquals(_methodParameterTypes74,parameterTypes)) {
    return CalendarLocalServiceUtil.fetchCalendar(((Long)arguments[0]).longValue());
  }
  if (_methodName75.equals(name) && Arrays.deepEquals(_methodParameterTypes75,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendar(((Long)arguments[0]).longValue());
  }
  if (_methodName76.equals(name) && Arrays.deepEquals(_methodParameterTypes76,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendarResourceCalendars(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName77.equals(name) && Arrays.deepEquals(_methodParameterTypes77,parameterTypes)) {
    return CalendarLocalServiceUtil.getCalendarResourceCalendars(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Boolean)arguments[2]).booleanValue());
  }
  if (_methodName78.equals(name) && Arrays.deepEquals(_methodParameterTypes78,parameterTypes)) {
    CalendarLocalServiceUtil.importCalendar(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2]);
    return null;
  }
  if (_methodName79.equals(name) && Arrays.deepEquals(_methodParameterTypes79,parameterTypes)) {
    return CalendarLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue(),((Integer)arguments[5]).intValue(),((Integer)arguments[6]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[7]);
  }
  if (_methodName80.equals(name) && Arrays.deepEquals(_methodParameterTypes80,parameterTypes)) {
    return CalendarLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],((Boolean)arguments[5]).booleanValue(),((Integer)arguments[6]).intValue(),((Integer)arguments[7]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[8]);
  }
  if (_methodName81.equals(name) && Arrays.deepEquals(_methodParameterTypes81,parameterTypes)) {
    return CalendarLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue());
  }
  if (_methodName82.equals(name) && Arrays.deepEquals(_methodParameterTypes82,parameterTypes)) {
    return CalendarLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],((Boolean)arguments[5]).booleanValue());
  }
  if (_methodName83.equals(name) && Arrays.deepEquals(_methodParameterTypes83,parameterTypes)) {
    CalendarLocalServiceUtil.updateCalendar(((Long)arguments[0]).longValue(),((Boolean)arguments[1]).booleanValue());
    return null;
  }
  if (_methodName84.equals(name) && Arrays.deepEquals(_methodParameterTypes84,parameterTypes)) {
    return CalendarLocalServiceUtil.updateCalendar(((Long)arguments[0]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[1],(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],((Integer)arguments[3]).intValue(),((Boolean)arguments[4]).booleanValue(),((Boolean)arguments[5]).booleanValue(),((Boolean)arguments[6]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[7]);
  }
  if (_methodName85.equals(name) && Arrays.deepEquals(_methodParameterTypes85,parameterTypes)) {
    return CalendarLocalServiceUtil.updateCalendar(((Long)arguments[0]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[1],(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],((Integer)arguments[3]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  if (_methodName86.equals(name) && Arrays.deepEquals(_methodParameterTypes86,parameterTypes)) {
    return CalendarLocalServiceUtil.updateColor(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  throw new UnsupportedOperationException();
}
