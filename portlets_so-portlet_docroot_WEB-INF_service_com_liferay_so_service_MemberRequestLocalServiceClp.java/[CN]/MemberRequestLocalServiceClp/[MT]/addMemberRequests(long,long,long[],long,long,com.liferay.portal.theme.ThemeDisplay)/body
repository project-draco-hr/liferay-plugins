{
  Object paramObj0=new LongWrapper(userId);
  Object paramObj1=new LongWrapper(groupId);
  Object paramObj2=ClpSerializer.translateInput(receiverUserIds);
  if (receiverUserIds == null) {
    paramObj2=new NullWrapper("[J");
  }
  Object paramObj3=new LongWrapper(invitedRoleId);
  Object paramObj4=new LongWrapper(invitedTeamId);
  Object paramObj5=ClpSerializer.translateInput(themeDisplay);
  if (themeDisplay == null) {
    paramObj5=new NullWrapper("com.liferay.portal.theme.ThemeDisplay");
  }
  try {
    _classLoaderProxy.invoke("addMemberRequests",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.kernel.exception.PortalException) {
      throw (com.liferay.portal.kernel.exception.PortalException)t;
    }
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
}
