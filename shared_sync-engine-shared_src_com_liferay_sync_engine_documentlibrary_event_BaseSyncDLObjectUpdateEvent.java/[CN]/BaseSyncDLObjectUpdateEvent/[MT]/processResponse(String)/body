{
  ObjectMapper objectMapper=new ObjectMapper();
  SyncDLObjectUpdate syncDLObjectUpdate=objectMapper.readValue(response,new TypeReference<SyncDLObjectUpdate>(){
  }
);
  for (  SyncFile syncFile : syncDLObjectUpdate.getSyncDLObjects()) {
    SyncFile parentSyncFile=SyncFileService.fetchSyncFile(syncFile.getRepositoryId(),getSyncAccountId(),syncFile.getParentFolderId());
    String filePathName=null;
    if (parentSyncFile != null) {
      filePathName=FilePathNameUtil.getFilePathName(parentSyncFile.getFilePathName(),syncFile.getName());
    }
    syncFile.setFilePathName(filePathName);
    syncFile.setSyncAccountId(getSyncAccountId());
    SyncFileService.update(syncFile);
    String type=syncFile.getType();
    if (type.equals(SyncFile.TYPE_FOLDER)) {
      Path filePath=Paths.get(filePathName);
      Files.createDirectories(filePath);
      continue;
    }
    Map<String,Object> parameters=new HashMap<String,Object>();
    parameters.put("patch",false);
    parameters.put("syncFile",syncFile);
    DownloadFileEvent downloadFileEvent=new DownloadFileEvent(getSyncAccountId(),parameters);
    downloadFileEvent.run();
  }
  SyncSite syncSite=SyncSiteService.fetchSyncSite((Long)getParameterValue("repositoryId"),getSyncAccountId());
  syncSite.setLastRemoteSyncTime(syncDLObjectUpdate.getLastAccessTime());
  SyncSiteService.update(syncSite);
}
