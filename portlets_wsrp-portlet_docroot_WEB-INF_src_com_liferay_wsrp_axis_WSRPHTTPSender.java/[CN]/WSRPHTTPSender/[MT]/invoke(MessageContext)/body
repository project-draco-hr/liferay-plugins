{
  HttpServletRequest request=getCurrentRequest();
  if (request == null) {
    super.invoke(messageContext);
    return;
  }
  Map<String,String> cookiesMap=new HashMap<String,String>();
  Object cookiesObject=messageContext.getProperty(HTTPConstants.HEADER_COOKIE);
  String[] cookies=new String[0];
  if (cookiesObject instanceof String[]) {
    cookies=(String[])cookiesObject;
  }
 else   if (cookiesObject instanceof String) {
    cookies=new String[]{(String)cookiesObject};
  }
  for (  String cookie : cookies) {
    String name=cookie.substring(0,cookie.indexOf(StringPool.EQUAL));
    cookiesMap.put(name.toLowerCase(),cookie);
  }
  for (  String forwardCookie : _forwardCookies) {
    String value=CookieUtil.get(request,forwardCookie);
    if (Validator.isNull(value)) {
      continue;
    }
    cookiesMap.put(forwardCookie,forwardCookie.concat(StringPool.EQUAL).concat(value));
  }
  Collection<String> cookiesCollection=cookiesMap.values();
  cookiesObject=cookiesCollection.toArray(new String[0]);
  messageContext.setProperty(HTTPConstants.HEADER_COOKIE,cookiesObject);
  super.invoke(messageContext);
  _registerCurrentCookie(messageContext);
}
