{
  long userId=portletDataContext.getUserId(kbArticle.getUserUuid());
  if (kbArticle.getParentResourcePrimKey() != KBArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY) {
    StagedModelDataHandlerUtil.importReferenceStagedModels(portletDataContext,kbArticle,KBArticle.class);
  }
  Map<Long,Long> kbArticleResourcePrimKeys=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(KBArticle.class);
  long parentResourcePrimKey=MapUtil.getLong(kbArticleResourcePrimKeys,kbArticle.getParentResourcePrimKey(),0);
  long resourcePrimaryKey=MapUtil.getLong(kbArticleResourcePrimKeys,kbArticle.getResourcePrimKey(),0);
  String[] sections=AdminUtil.unescapeSections(kbArticle.getSections());
  ServiceContext serviceContext=portletDataContext.createServiceContext(kbArticle);
  KBArticle importedKBArticle=null;
  if (portletDataContext.isDataStrategyMirror()) {
    KBArticle existingKBArticle=KBArticleUtil.fetchByR_V(resourcePrimaryKey,kbArticle.getVersion());
    if (existingKBArticle == null) {
      existingKBArticle=KBArticleUtil.fetchByUUID_G(kbArticle.getUuid(),portletDataContext.getScopeGroupId());
    }
    if (existingKBArticle == null) {
      serviceContext.setUuid(kbArticle.getUuid());
      existingKBArticle=KBArticleLocalServiceUtil.fetchLatestKBArticle(resourcePrimaryKey,WorkflowConstants.STATUS_ANY);
      if (existingKBArticle == null) {
        importedKBArticle=KBArticleLocalServiceUtil.addKBArticle(userId,parentResourcePrimKey,kbArticle.getTitle(),kbArticle.getUrlTitle(),kbArticle.getContent(),kbArticle.getDescription(),sections,null,serviceContext);
        KBArticleLocalServiceUtil.updatePriority(importedKBArticle.getResourcePrimKey(),kbArticle.getPriority());
      }
 else {
        KBArticleLocalServiceUtil.updateKBArticle(userId,existingKBArticle.getResourcePrimKey(),kbArticle.getTitle(),kbArticle.getContent(),kbArticle.getDescription(),sections,null,null,serviceContext);
        KBArticleLocalServiceUtil.moveKBArticle(userId,existingKBArticle.getResourcePrimKey(),parentResourcePrimKey,kbArticle.getPriority());
        importedKBArticle=KBArticleLocalServiceUtil.getLatestKBArticle(existingKBArticle.getResourcePrimKey(),WorkflowConstants.STATUS_APPROVED);
      }
    }
 else {
      importedKBArticle=existingKBArticle;
    }
  }
 else {
    importedKBArticle=KBArticleLocalServiceUtil.addKBArticle(userId,parentResourcePrimKey,kbArticle.getTitle(),kbArticle.getUrlTitle(),kbArticle.getContent(),kbArticle.getDescription(),sections,null,serviceContext);
    KBArticleLocalServiceUtil.updatePriority(importedKBArticle.getResourcePrimKey(),kbArticle.getPriority());
  }
  importKBArticleAttachments(portletDataContext,kbArticle,importedKBArticle);
  portletDataContext.importClassedModel(kbArticle,importedKBArticle);
  if (!kbArticle.isMain()) {
    kbArticleResourcePrimKeys.put(kbArticle.getResourcePrimKey(),importedKBArticle.getResourcePrimKey());
  }
}
