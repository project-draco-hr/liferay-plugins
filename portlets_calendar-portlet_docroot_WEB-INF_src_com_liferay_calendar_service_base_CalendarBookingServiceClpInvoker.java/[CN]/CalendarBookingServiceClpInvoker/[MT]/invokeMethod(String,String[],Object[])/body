{
  if (_methodName84.equals(name) && Arrays.deepEquals(_methodParameterTypes84,parameterTypes)) {
    return CalendarBookingServiceUtil.getBeanIdentifier();
  }
  if (_methodName85.equals(name) && Arrays.deepEquals(_methodParameterTypes85,parameterTypes)) {
    CalendarBookingServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName90.equals(name) && Arrays.deepEquals(_methodParameterTypes90,parameterTypes)) {
    return CalendarBookingServiceUtil.addCalendarBooking(((Long)arguments[0]).longValue(),(long[])arguments[1],((Long)arguments[2]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(java.lang.String)arguments[9],((Long)arguments[10]).longValue(),(java.lang.String)arguments[11],((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],(com.liferay.portal.service.ServiceContext)arguments[14]);
  }
  if (_methodName91.equals(name) && Arrays.deepEquals(_methodParameterTypes91,parameterTypes)) {
    return CalendarBookingServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName92.equals(name) && Arrays.deepEquals(_methodParameterTypes92,parameterTypes)) {
    CalendarBookingServiceUtil.deleteCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Boolean)arguments[2]).booleanValue());
    return null;
  }
  if (_methodName93.equals(name) && Arrays.deepEquals(_methodParameterTypes93,parameterTypes)) {
    return CalendarBookingServiceUtil.exportCalendarBooking(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  if (_methodName94.equals(name) && Arrays.deepEquals(_methodParameterTypes94,parameterTypes)) {
    return CalendarBookingServiceUtil.fetchCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName95.equals(name) && Arrays.deepEquals(_methodParameterTypes95,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName96.equals(name) && Arrays.deepEquals(_methodParameterTypes96,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName97.equals(name) && Arrays.deepEquals(_methodParameterTypes97,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue());
  }
  if (_methodName98.equals(name) && Arrays.deepEquals(_methodParameterTypes98,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Integer)arguments[3]).intValue());
  }
  if (_methodName99.equals(name) && Arrays.deepEquals(_methodParameterTypes99,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBookingsRSS(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Integer)arguments[3]).intValue(),(java.lang.String)arguments[4],((Double)arguments[5]).doubleValue(),(java.lang.String)arguments[6],(com.liferay.portal.theme.ThemeDisplay)arguments[7]);
  }
  if (_methodName100.equals(name) && Arrays.deepEquals(_methodParameterTypes100,parameterTypes)) {
    return CalendarBookingServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName101.equals(name) && Arrays.deepEquals(_methodParameterTypes101,parameterTypes)) {
    return CalendarBookingServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName102.equals(name) && Arrays.deepEquals(_methodParameterTypes102,parameterTypes)) {
    CalendarBookingServiceUtil.invokeTransition(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[2]);
    return null;
  }
  if (_methodName103.equals(name) && Arrays.deepEquals(_methodParameterTypes103,parameterTypes)) {
    CalendarBookingServiceUtil.moveCalendarBookingToTrash(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName104.equals(name) && Arrays.deepEquals(_methodParameterTypes104,parameterTypes)) {
    CalendarBookingServiceUtil.restoreCalendarBookingFromTrash(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName105.equals(name) && Arrays.deepEquals(_methodParameterTypes105,parameterTypes)) {
    return CalendarBookingServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(int[])arguments[9],((Integer)arguments[10]).intValue(),((Integer)arguments[11]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[12]);
  }
  if (_methodName106.equals(name) && Arrays.deepEquals(_methodParameterTypes106,parameterTypes)) {
    return CalendarBookingServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],((Long)arguments[8]).longValue(),((Long)arguments[9]).longValue(),((Boolean)arguments[10]).booleanValue(),(int[])arguments[11],((Boolean)arguments[12]).booleanValue(),((Integer)arguments[13]).intValue(),((Integer)arguments[14]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[15]);
  }
  if (_methodName107.equals(name) && Arrays.deepEquals(_methodParameterTypes107,parameterTypes)) {
    return CalendarBookingServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(int[])arguments[9]);
  }
  if (_methodName108.equals(name) && Arrays.deepEquals(_methodParameterTypes108,parameterTypes)) {
    return CalendarBookingServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],((Long)arguments[8]).longValue(),((Long)arguments[9]).longValue(),((Boolean)arguments[10]).booleanValue(),(int[])arguments[11],((Boolean)arguments[12]).booleanValue());
  }
  if (_methodName109.equals(name) && Arrays.deepEquals(_methodParameterTypes109,parameterTypes)) {
    return CalendarBookingServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(long[])arguments[2],(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(java.lang.String)arguments[9],((Long)arguments[10]).longValue(),(java.lang.String)arguments[11],((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],((Integer)arguments[14]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  if (_methodName110.equals(name) && Arrays.deepEquals(_methodParameterTypes110,parameterTypes)) {
    return CalendarBookingServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.lang.String)arguments[4],((Long)arguments[5]).longValue(),((Long)arguments[6]).longValue(),((Boolean)arguments[7]).booleanValue(),(java.lang.String)arguments[8],((Long)arguments[9]).longValue(),(java.lang.String)arguments[10],((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Integer)arguments[13]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[14]);
  }
  if (_methodName111.equals(name) && Arrays.deepEquals(_methodParameterTypes111,parameterTypes)) {
    return CalendarBookingServiceUtil.updateCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(long[])arguments[2],(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(java.lang.String)arguments[9],((Boolean)arguments[10]).booleanValue(),((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],((Integer)arguments[15]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[16]);
  }
  if (_methodName112.equals(name) && Arrays.deepEquals(_methodParameterTypes112,parameterTypes)) {
    return CalendarBookingServiceUtil.updateCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.lang.String)arguments[4],((Long)arguments[5]).longValue(),((Long)arguments[6]).longValue(),((Boolean)arguments[7]).booleanValue(),(java.lang.String)arguments[8],((Boolean)arguments[9]).booleanValue(),((Long)arguments[10]).longValue(),(java.lang.String)arguments[11],((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],((Integer)arguments[14]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  throw new UnsupportedOperationException();
}
