{
  if (_methodName30.equals(name) && Arrays.deepEquals(_methodParameterTypes30,parameterTypes)) {
    return CalendarBookingServiceUtil.getBeanIdentifier();
  }
  if (_methodName31.equals(name) && Arrays.deepEquals(_methodParameterTypes31,parameterTypes)) {
    CalendarBookingServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
  }
  if (_methodName36.equals(name) && Arrays.deepEquals(_methodParameterTypes36,parameterTypes)) {
    return CalendarBookingServiceUtil.addCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Boolean)arguments[2]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName37.equals(name) && Arrays.deepEquals(_methodParameterTypes37,parameterTypes)) {
    return CalendarBookingServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName38.equals(name) && Arrays.deepEquals(_methodParameterTypes38,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName39.equals(name) && Arrays.deepEquals(_methodParameterTypes39,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBookings((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Integer)arguments[3]).intValue(),((Integer)arguments[4]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[5]);
  }
  if (_methodName40.equals(name) && Arrays.deepEquals(_methodParameterTypes40,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarBookingsCount((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue());
  }
  if (_methodName41.equals(name) && Arrays.deepEquals(_methodParameterTypes41,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarEventCalendarBookings(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[4]);
  }
  if (_methodName42.equals(name) && Arrays.deepEquals(_methodParameterTypes42,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarEventCalendarBookingsCount(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName43.equals(name) && Arrays.deepEquals(_methodParameterTypes43,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarResourceCalendarBookings(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName44.equals(name) && Arrays.deepEquals(_methodParameterTypes44,parameterTypes)) {
    return CalendarBookingServiceUtil.getCalendarResourceCalendarBookingsCount(((Long)arguments[0]).longValue());
  }
  if (_methodName45.equals(name) && Arrays.deepEquals(_methodParameterTypes45,parameterTypes)) {
    return CalendarBookingServiceUtil.search(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue(),((Integer)arguments[5]).intValue(),((Integer)arguments[6]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[7]);
  }
  if (_methodName46.equals(name) && Arrays.deepEquals(_methodParameterTypes46,parameterTypes)) {
    return CalendarBookingServiceUtil.searchCount(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue());
  }
  if (_methodName47.equals(name) && Arrays.deepEquals(_methodParameterTypes47,parameterTypes)) {
    return CalendarBookingServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  throw new UnsupportedOperationException();
}
