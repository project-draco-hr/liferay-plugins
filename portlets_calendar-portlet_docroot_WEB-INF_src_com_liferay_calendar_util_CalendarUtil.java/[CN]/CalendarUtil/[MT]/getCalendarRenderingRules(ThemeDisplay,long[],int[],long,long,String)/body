{
  long[] groupIds=new long[]{0,themeDisplay.getCompanyGroupId(),themeDisplay.getScopeGroupId()};
  List<CalendarBooking> calendarBookings=CalendarBookingLocalServiceUtil.search(themeDisplay.getCompanyId(),groupIds,calendarIds,new long[]{},-1,null,startDate,endDate,true,statuses,QueryUtil.ALL_POS,QueryUtil.ALL_POS,(OrderByComparator)null);
  Map<Integer,Map<Integer,List<Integer>>> rulesMap=new HashMap<Integer,Map<Integer,List<Integer>>>();
  for (  CalendarBooking calendarBooking : calendarBookings) {
    java.util.Calendar startDateJCalendar=JCalendarUtil.getJCalendar(calendarBooking.getStartDate());
    int year=startDateJCalendar.get(java.util.Calendar.YEAR);
    int month=startDateJCalendar.get(java.util.Calendar.MONTH);
    int day=startDateJCalendar.get(java.util.Calendar.DAY_OF_MONTH);
    Map<Integer,List<Integer>> rulesMonth=rulesMap.get(year);
    if (rulesMonth == null) {
      rulesMonth=new HashMap<Integer,List<Integer>>();
      rulesMap.put(year,rulesMonth);
    }
    List<Integer> rulesDay=rulesMonth.get(month);
    if (rulesDay == null) {
      rulesDay=new ArrayList<Integer>();
      rulesMonth.put(month,rulesDay);
    }
    if (!rulesDay.contains(day)) {
      rulesDay.add(day);
    }
  }
  Set<Integer> years=rulesMap.keySet();
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  for (  Integer year : years) {
    Map<Integer,List<Integer>> monthsMap=rulesMap.get(year);
    Set<Integer> months=monthsMap.keySet();
    JSONObject jsonObjectMonth=JSONFactoryUtil.createJSONObject();
    for (    Integer month : months) {
      List<Integer> days=monthsMap.get(month);
      String daysKey=StringUtil.merge(days);
      JSONObject jsonObjectDay=JSONFactoryUtil.createJSONObject();
      jsonObject.put(String.valueOf(year),jsonObjectMonth);
      jsonObjectDay.put(daysKey,ruleName);
      jsonObjectMonth.put(String.valueOf(month),jsonObjectDay);
    }
  }
  return jsonObject;
}
