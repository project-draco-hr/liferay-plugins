{
  List<CalendarBooking> calendarBookings=CalendarBookingLocalServiceUtil.search(themeDisplay.getCompanyId(),new long[]{0,themeDisplay.getCompanyGroupId(),themeDisplay.getScopeGroupId()},calendarIds,new long[0],-1,null,startDate,endDate,true,statuses,QueryUtil.ALL_POS,QueryUtil.ALL_POS,(OrderByComparator)null);
  Map<Integer,Map<Integer,List<Integer>>> rulesMap=new HashMap<Integer,Map<Integer,List<Integer>>>();
  for (  CalendarBooking calendarBooking : calendarBookings) {
    java.util.Calendar startDateJCalendar=JCalendarUtil.getJCalendar(calendarBooking.getStartDate());
    java.util.Calendar endDateJCalendar=JCalendarUtil.getJCalendar(calendarBooking.getEndDate());
    long days=JCalendarUtil.getDaysBetween(startDateJCalendar,endDateJCalendar);
    for (int i=0; i <= days; i++) {
      int year=startDateJCalendar.get(java.util.Calendar.YEAR);
      Map<Integer,List<Integer>> rulesMonth=rulesMap.get(year);
      if (rulesMonth == null) {
        rulesMonth=new HashMap<Integer,List<Integer>>();
        rulesMap.put(year,rulesMonth);
      }
      int month=startDateJCalendar.get(java.util.Calendar.MONTH);
      List<Integer> rulesDay=rulesMonth.get(month);
      if (rulesDay == null) {
        rulesDay=new ArrayList<Integer>();
        rulesMonth.put(month,rulesDay);
      }
      int day=startDateJCalendar.get(java.util.Calendar.DAY_OF_MONTH);
      if (!rulesDay.contains(day)) {
        rulesDay.add(day);
      }
      startDateJCalendar.add(java.util.Calendar.DATE,1);
    }
  }
  Set<Integer> years=rulesMap.keySet();
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  for (  Integer year : years) {
    Map<Integer,List<Integer>> monthsMap=rulesMap.get(year);
    Set<Integer> months=monthsMap.keySet();
    JSONObject jsonObjectMonth=JSONFactoryUtil.createJSONObject();
    jsonObject.put(String.valueOf(year),jsonObjectMonth);
    for (    Integer month : months) {
      List<Integer> days=monthsMap.get(month);
      JSONObject jsonObjectDay=JSONFactoryUtil.createJSONObject();
      jsonObjectDay.put(StringUtil.merge(days),ruleName);
      jsonObjectMonth.put(String.valueOf(month),jsonObjectDay);
    }
  }
  return jsonObject;
}
