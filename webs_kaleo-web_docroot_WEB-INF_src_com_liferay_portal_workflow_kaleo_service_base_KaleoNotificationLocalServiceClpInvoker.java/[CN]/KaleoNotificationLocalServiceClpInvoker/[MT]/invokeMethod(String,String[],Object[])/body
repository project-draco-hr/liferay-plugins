{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.addKaleoNotification((com.liferay.portal.workflow.kaleo.model.KaleoNotification)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.createKaleoNotification(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.deleteKaleoNotification(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.deleteKaleoNotification((com.liferay.portal.workflow.kaleo.model.KaleoNotification)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.fetchKaleoNotification(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.getKaleoNotification(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.getKaleoNotifications(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.getKaleoNotificationsCount();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.updateKaleoNotification((com.liferay.portal.workflow.kaleo.model.KaleoNotification)arguments[0]);
  }
  if (_methodName96.equals(name) && Arrays.deepEquals(_methodParameterTypes96,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName97.equals(name) && Arrays.deepEquals(_methodParameterTypes97,parameterTypes)) {
    KaleoNotificationLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName102.equals(name) && Arrays.deepEquals(_methodParameterTypes102,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.addKaleoNotification((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(java.lang.String)arguments[3],(com.liferay.portal.workflow.kaleo.definition.Notification)arguments[4],(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  if (_methodName103.equals(name) && Arrays.deepEquals(_methodParameterTypes103,parameterTypes)) {
    KaleoNotificationLocalServiceUtil.deleteCompanyKaleoNotifications(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName104.equals(name) && Arrays.deepEquals(_methodParameterTypes104,parameterTypes)) {
    KaleoNotificationLocalServiceUtil.deleteKaleoDefinitionKaleoNotifications(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName105.equals(name) && Arrays.deepEquals(_methodParameterTypes105,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.getKaleoNotifications((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName106.equals(name) && Arrays.deepEquals(_methodParameterTypes106,parameterTypes)) {
    return KaleoNotificationLocalServiceUtil.getKaleoNotifications((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),(java.lang.String)arguments[2]);
  }
  throw new UnsupportedOperationException();
}
