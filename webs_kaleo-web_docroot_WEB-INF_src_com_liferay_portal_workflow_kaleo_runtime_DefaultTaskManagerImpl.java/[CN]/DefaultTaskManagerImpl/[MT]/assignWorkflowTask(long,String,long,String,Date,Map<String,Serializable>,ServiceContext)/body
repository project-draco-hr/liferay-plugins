{
  KaleoTaskInstanceToken kaleoTaskInstanceToken=KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceToken(workflowTaskInstanceId);
  if (kaleoTaskInstanceToken.isCompleted()) {
    throw new WorkflowException("Cannot reassign a completed task " + workflowTaskInstanceId);
  }
  if (dueDate != null) {
    KaleoTaskInstanceTokenLocalServiceUtil.updateDueDate(workflowTaskInstanceId,dueDate,serviceContext);
  }
  KaleoTaskInstanceAssignment kaleoTaskInstanceAssignment=kaleoTaskInstanceToken.getKaleoTaskInstanceAssignment();
  KaleoTaskInstanceAssignment newKaleoTaskInstanceAssignment=KaleoTaskInstanceAssignmentLocalServiceUtil.assignKaleoTaskInstanceAssignment(kaleoTaskInstanceAssignment.getKaleoTaskInstanceAssignmentId(),assigneeClassName,assigneeClassPK,context,serviceContext);
  KaleoLogLocalServiceUtil.addTaskAssignmentKaleoLog(kaleoTaskInstanceToken,kaleoTaskInstanceAssignment,newKaleoTaskInstanceAssignment,comment,context,serviceContext);
  return new WorkflowTaskAdapter(kaleoTaskInstanceToken,newKaleoTaskInstanceAssignment,context);
}
