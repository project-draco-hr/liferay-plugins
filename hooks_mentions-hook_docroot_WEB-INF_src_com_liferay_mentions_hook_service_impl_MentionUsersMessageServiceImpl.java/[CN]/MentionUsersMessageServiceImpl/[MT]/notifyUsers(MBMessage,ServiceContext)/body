{
  if (!message.isDiscussion()) {
    return;
  }
  String[] mentionedUsersScreenNames=_getMentionedUsersScreenNames(message);
  if (ArrayUtil.isEmpty(mentionedUsersScreenNames)) {
    return;
  }
  String messageUserEmailAddress=PortalUtil.getUserEmailAddress(message.getUserId());
  String messageUserName=PortalUtil.getUserName(message.getUserId(),StringPool.BLANK);
  String fromName=PrefsPropsUtil.getString(message.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getString(message.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
  String subject=ContentUtil.get(PropsUtil.get("discussion.email.subject"));
  String body=ContentUtil.get(PropsUtil.get("discussion.email.body"));
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(message.getCompanyId());
  subscriptionSender.setContextAttribute("[$COMMENTS_BODY$]",message.getBody(true),false);
  subscriptionSender.setContextAttributes("[$COMMENTS_USER_ADDRESS$]",messageUserEmailAddress,"[$COMMENTS_USER_NAME$]",messageUserName,"[$CONTENT_URL$]",serviceContext.getAttribute("contentURL"));
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("mb_discussion",message.getCategoryId(),message.getMessageId());
  subscriptionSender.setScopeGroupId(message.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.setSubject(subject);
  subscriptionSender.setUserId(message.getUserId());
  for (int i=0; i < mentionedUsersScreenNames.length; i++) {
    String mentionedUserScreenName=mentionedUsersScreenNames[i];
    User user=UserLocalServiceUtil.fetchUserByScreenName(message.getCompanyId(),mentionedUserScreenName);
    if (user == null) {
      continue;
    }
    subscriptionSender.addRuntimeSubscribers(user.getEmailAddress(),user.getFullName());
  }
}
