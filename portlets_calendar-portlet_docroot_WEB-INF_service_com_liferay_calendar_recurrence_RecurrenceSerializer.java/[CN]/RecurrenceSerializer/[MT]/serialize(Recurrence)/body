{
  RRule rRule=new RRule();
  List<WeekdayNum> weekdayNums=new ArrayList<WeekdayNum>();
  for (  Weekday weekday : recurrence.getWeekdays()) {
    com.google.ical.values.Weekday wday=_weekdaysMap.get(weekday);
    WeekdayNum weekdayNum=new WeekdayNum(weekday.getPosition(),wday);
    weekdayNums.add(weekdayNum);
  }
  rRule.setByDay(weekdayNums);
  rRule.setCount(recurrence.getCount());
  com.google.ical.values.Frequency frequency=com.google.ical.values.Frequency.valueOf(String.valueOf(recurrence.getFrequency()));
  rRule.setFreq(frequency);
  rRule.setInterval(recurrence.getInterval());
  Calendar jCalendar=recurrence.getUntil();
  if (jCalendar != null) {
    DateValue dateValue=_toDateValue(jCalendar);
    rRule.setUntil(dateValue);
  }
  String data=rRule.toIcal();
  List<Calendar> exceptionDates=recurrence.getExceptionDates();
  if (!exceptionDates.isEmpty()) {
    DateValue[] dateValues=new DateValue[exceptionDates.size()];
    for (int i=0; i < exceptionDates.size(); i++) {
      dateValues[i]=_toDateValue(exceptionDates.get(i));
    }
    RDateList rDateList=new RDateList(TimeZone.getTimeZone(StringPool.UTC));
    rDateList.setName(_EXDATE);
    rDateList.setDatesUtc(dateValues);
    data=data.concat(StringPool.NEW_LINE).concat(rDateList.toIcal());
  }
  return data;
}
