{
  List<String> ids=new ArrayList<String>();
switch (idSpec.getType()) {
case OWNER:
    ids.add(token.getOwnerId());
  break;
case VIEWER:
ids.add(token.getViewerId());
break;
case OWNER_FRIENDS:
if (!token.getOwnerId().startsWith("G-")) {
try {
User owner=UserLocalServiceUtil.getUserById(Long.parseLong(token.getOwnerId()));
List<User> friends=UserLocalServiceUtil.getSocialUsers(owner.getUserId(),1,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
for (User friend : friends) {
  ids.add(String.valueOf(friend.getUserId()));
}
}
 catch (Exception e) {
}
}
break;
case VIEWER_FRIENDS:
if (!token.getViewerId().startsWith("G-")) {
try {
User viewer=UserLocalServiceUtil.getUserById(Long.parseLong(token.getViewerId()));
List<User> friends=UserLocalServiceUtil.getSocialUsers(viewer.getUserId(),1,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
for (User friend : friends) {
ids.add(String.valueOf(friend.getUserId()));
}
}
 catch (Exception e) {
}
}
break;
case USER_IDS:
ids.addAll(idSpec.fetchUserIds());
break;
}
return ids;
}
