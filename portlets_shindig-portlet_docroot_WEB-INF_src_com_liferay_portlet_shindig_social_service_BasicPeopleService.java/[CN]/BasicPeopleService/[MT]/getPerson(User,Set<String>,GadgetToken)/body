{
  Person person=null;
  try {
    person=new Person(String.valueOf(user.getUserId()),new Name(user.getFullName()));
    if (profileDetails.contains("about_me")) {
      person.setAboutMe(user.getComments());
    }
    if (profileDetails.contains("age")) {
      Calendar dateOfBirth=new GregorianCalendar();
      dateOfBirth.setTime(user.getBirthday());
      Calendar today=Calendar.getInstance();
      int age=today.get(Calendar.YEAR) - dateOfBirth.get(Calendar.YEAR);
      dateOfBirth.add(Calendar.YEAR,age);
      if (today.before(dateOfBirth)) {
        age--;
      }
      person.setAge(age);
    }
    if (profileDetails.contains("date_of_birth")) {
      person.setDateOfBirth(user.getBirthday());
    }
    if (profileDetails.contains("emails")) {
      person.setEmails(getEmails(user));
    }
    if (profileDetails.contains("gender")) {
      if (user.isFemale()) {
        person.setGender(new Enum<Enum.Gender>(Enum.Gender.FEMALE));
      }
 else {
        person.setGender(new Enum<Enum.Gender>(Enum.Gender.MALE));
      }
    }
    if (profileDetails.contains("nickname")) {
      person.setNickname(user.getScreenName());
    }
    if (profileDetails.contains("phone_numbers")) {
      person.setPhoneNumbers(getPhoneNumbers(Contact.class.getName(),user.getContactId()));
    }
    if (profileDetails.contains("thumbnailUrl")) {
      long portraitId=user.getPortraitId();
      String tokenId=ImageServletTokenUtil.getToken(user.getPortraitId());
      StringMaker sm=new StringMaker();
      sm.append(PortalUtil.getPathImage());
      sm.append("/user_");
      sm.append(user.isFemale() ? "female" : "male");
      sm.append("_portrait?img_id=");
      sm.append(portraitId);
      sm.append("&t=");
      sm.append(tokenId);
      person.setThumbnailUrl(sm.toString());
    }
    if (profileDetails.contains("time_zone")) {
      person.setTimeZone(new Long(user.getTimeZone().getRawOffset()));
    }
    if (token.getViewerId() == person.getId()) {
      person.setIsViewer(true);
    }
 else     if (token.getOwnerId() == person.getId()) {
      person.setIsOwner(true);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return person;
}
