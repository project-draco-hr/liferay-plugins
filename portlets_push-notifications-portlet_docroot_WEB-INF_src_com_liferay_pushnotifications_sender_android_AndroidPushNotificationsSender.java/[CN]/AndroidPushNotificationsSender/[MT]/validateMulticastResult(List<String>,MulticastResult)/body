{
  if ((multicastResult.getCanonicalIds() == 0) && (multicastResult.getFailure() == 0)) {
    return;
  }
  List<Result> results=multicastResult.getResults();
  for (int i=0; i < results.size(); i++) {
    Result result=results.get(i);
    String token=tokens.get(i);
    String error=result.getErrorCodeName();
    if (Validator.isNotNull(error)) {
      if (error.equals(Constants.ERROR_INVALID_REGISTRATION) || error.equals(Constants.ERROR_MISMATCH_SENDER_ID) || error.equals(Constants.ERROR_NOT_REGISTERED)) {
        try {
          PushNotificationsDeviceLocalServiceUtil.deletePushNotificationsDevice(token);
        }
 catch (        Exception e) {
          if (_log.isWarnEnabled()) {
            _log.warn("Token " + token + " is invalid but could not"+ " be deleted");
          }
        }
      }
    }
  }
}
