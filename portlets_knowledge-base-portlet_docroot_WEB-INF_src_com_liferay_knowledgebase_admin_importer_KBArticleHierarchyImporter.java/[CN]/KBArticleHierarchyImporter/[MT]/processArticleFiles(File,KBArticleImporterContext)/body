{
  ZipReader zipReader=ZipReaderFactoryUtil.getZipReader(zipFile);
  String rootHomeMarkdown=null;
  for (  String zipEntry : zipReader.getEntries()) {
    if (zipEntry.endsWith(".markdown") || zipEntry.endsWith(".md")) {
      int lastSlash=zipEntry.lastIndexOf(StringPool.SLASH);
      if (lastSlash == -1) {
        if (zipEntry.equals(_HOME_MARKDOWN_FILE)) {
          rootHomeMarkdown=zipReader.getEntryAsString(_HOME_MARKDOWN_FILE);
        }
        continue;
      }
      String folder=zipEntry.substring(0,lastSlash);
      List<String> fileEntries=_folderFileEntryMap.get(folder);
      if (fileEntries == null) {
        fileEntries=new ArrayList<String>();
      }
      fileEntries.add(zipEntry);
      _folderFileEntryMap.put(folder,fileEntries);
    }
  }
  if (Validator.isNull(rootHomeMarkdown)) {
    throw new KBArticleImportException("Missing file entry: " + _HOME_MARKDOWN_FILE);
  }
  KBArticle rootHomeKBArticle=createKBArticleFromMarkdown(KBArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY,rootHomeMarkdown,importerContext,_HOME_MARKDOWN_FILE);
  Set<String> folders=_folderFileEntryMap.keySet();
  Iterator<String> folderIter=folders.iterator();
  while (folderIter.hasNext()) {
    String folder=folderIter.next();
    List<String> zipFileEntries=_folderFileEntryMap.get(folder);
    String chapterIntroFileEntry=null;
    List<String> chapterMarkdownFileEntries=new ArrayList<String>();
    for (    String fileEntry : zipFileEntries) {
      if (fileEntry.endsWith(_CHAPTER_HOME_MARKDOWN_FILE)) {
        chapterIntroFileEntry=fileEntry;
      }
 else {
        chapterMarkdownFileEntries.add(fileEntry);
      }
    }
    if (Validator.isNull(chapterIntroFileEntry)) {
      StringBuffer sb=new StringBuffer("Missing file entry: ");
      sb.append(folder);
      sb.append(StringPool.SLASH);
      sb.append(_CHAPTER_HOME_MARKDOWN_FILE);
      throw new KBArticleImportException(sb.toString());
    }
    String chapterHomeMarkdown=zipReader.getEntryAsString(chapterIntroFileEntry);
    KBArticle chapterHomeKBArticle=createKBArticleFromMarkdown(rootHomeKBArticle.getResourcePrimKey(),chapterHomeMarkdown,importerContext,chapterIntroFileEntry);
    for (    String tutorialFileEntry : chapterMarkdownFileEntries) {
      String tutorialMarkdown=zipReader.getEntryAsString(tutorialFileEntry);
      if (Validator.isNotNull(tutorialMarkdown)) {
        createKBArticleFromMarkdown(chapterHomeKBArticle.getResourcePrimKey(),tutorialMarkdown,importerContext,tutorialFileEntry);
      }
 else {
        if (_log.isWarnEnabled()) {
          _log.warn("Missing Markdown in file entry: " + tutorialFileEntry);
        }
      }
    }
  }
}
