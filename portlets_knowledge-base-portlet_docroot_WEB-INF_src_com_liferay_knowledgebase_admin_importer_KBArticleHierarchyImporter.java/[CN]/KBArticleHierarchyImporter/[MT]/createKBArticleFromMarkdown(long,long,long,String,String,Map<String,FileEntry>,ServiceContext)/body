{
  if (Validator.isNull(markdown)) {
    throw new KBArticleImportException("Null or empty Markdown in file entry: " + fileEntry);
  }
  String html=null;
  try {
    html=_markdownConverter.convert(markdown);
  }
 catch (  IOException ioe) {
    StringBuilder sb=new StringBuilder(4);
    sb.append("Unable to convert Markdown to HTML for file entry: ");
    sb.append(fileEntry);
    sb.append(". ");
    sb.append(ioe.getLocalizedMessage());
    throw new KBArticleImportException(sb.toString(),ioe);
  }
  String heading=getTitleLineFromHtml(html);
  if (Validator.isNull(heading)) {
    StringBuilder sb=new StringBuilder(5);
    sb.append("Unable to extract heading from HTML of converted file entry:");
    sb.append(StringPool.SPACE);
    sb.append(fileEntry);
    sb.append(", HTML: ");
    sb.append(html);
    throw new KBArticleImportException(sb.toString());
  }
  String urlTitle=getUrlTitleFromHeading(heading);
  String title=stripIds(heading);
  html=stripIds(html);
  html=referToImageFileInDocLibrary(html,fileEntriesMap);
  KBArticle article;
  try {
    article=applyContentToKBArticle(userId,groupId,parentResourcePrimaryKey,title,urlTitle,html,serviceContext);
  }
 catch (  Exception e) {
    StringBuilder sb=new StringBuilder(4);
    sb.append("Unable to create KBArticle for file entry: ");
    sb.append(fileEntry);
    sb.append(". ");
    sb.append(e.getLocalizedMessage());
    throw new KBArticleImportException(sb.toString(),e);
  }
  return article;
}
