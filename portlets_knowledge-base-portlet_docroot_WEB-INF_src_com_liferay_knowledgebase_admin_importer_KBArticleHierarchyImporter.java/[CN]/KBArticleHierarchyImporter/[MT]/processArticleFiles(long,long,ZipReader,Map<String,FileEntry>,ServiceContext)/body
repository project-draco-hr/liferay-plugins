{
  String rootHomeMarkdown=zipReader.getEntryAsString(PortletPropsValues.MARKDOWN_IMPORTER_ARTICLE_HOME);
  for (  String zipEntry : zipReader.getEntries()) {
    String extension=FileUtil.getExtension(zipEntry);
    if (!ArrayUtil.contains(PortletPropsValues.MARKDOWN_IMPORTER_ARTICLE_EXTENSIONS,StringPool.PERIOD.concat(extension)) || zipEntry.equals(PortletPropsValues.MARKDOWN_IMPORTER_ARTICLE_HOME)) {
      continue;
    }
    String folderName=zipEntry.substring(0,zipEntry.lastIndexOf(StringPool.SLASH));
    List<String> fileEntries=_folderFileEntryMap.get(folderName);
    if (fileEntries == null) {
      fileEntries=new ArrayList<String>();
    }
    fileEntries.add(zipEntry);
    _folderFileEntryMap.put(folderName,fileEntries);
  }
  if (Validator.isNull(rootHomeMarkdown)) {
    throw new KBArticleImportException("Missing file entry: " + PortletPropsValues.MARKDOWN_IMPORTER_ARTICLE_HOME);
  }
  KBArticle rootHomeKBArticle=createKBArticleFromMarkdown(userId,groupId,KBArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY,rootHomeMarkdown,PortletPropsValues.MARKDOWN_IMPORTER_ARTICLE_HOME,fileEntriesMap,serviceContext);
  Set<String> folders=_folderFileEntryMap.keySet();
  Iterator<String> folderIter=folders.iterator();
  while (folderIter.hasNext()) {
    String folder=folderIter.next();
    List<String> zipFileEntries=_folderFileEntryMap.get(folder);
    String chapterHomeFileEntry=null;
    List<String> chapterMarkdownFileEntries=new ArrayList<String>();
    for (    String fileEntry : zipFileEntries) {
      if (fileEntry.endsWith(PortletPropsValues.MARKDOWN_IMPORTER_ARTICLE_INTRODUCTION) || fileEntry.endsWith(PortletPropsValues.MARKDOWN_IMPORTER_ARTICLE_INTRO)) {
        chapterHomeFileEntry=fileEntry;
      }
 else {
        chapterMarkdownFileEntries.add(fileEntry);
      }
    }
    if (Validator.isNull(chapterHomeFileEntry)) {
      throw new KBArticleImportException("Missing intro file entry in folder: " + folder);
    }
    String chapterIntroMarkdown=zipReader.getEntryAsString(chapterHomeFileEntry);
    KBArticle chapterIntroKBArticle=createKBArticleFromMarkdown(userId,groupId,rootHomeKBArticle.getResourcePrimKey(),chapterIntroMarkdown,chapterHomeFileEntry,fileEntriesMap,serviceContext);
    for (    String tutorialFileEntry : chapterMarkdownFileEntries) {
      String tutorialMarkdown=zipReader.getEntryAsString(tutorialFileEntry);
      if (Validator.isNotNull(tutorialMarkdown)) {
        createKBArticleFromMarkdown(userId,groupId,chapterIntroKBArticle.getResourcePrimKey(),tutorialMarkdown,tutorialFileEntry,fileEntriesMap,serviceContext);
      }
 else {
        if (_log.isWarnEnabled()) {
          _log.warn("Missing Markdown in file entry: " + tutorialFileEntry);
        }
      }
    }
  }
}
