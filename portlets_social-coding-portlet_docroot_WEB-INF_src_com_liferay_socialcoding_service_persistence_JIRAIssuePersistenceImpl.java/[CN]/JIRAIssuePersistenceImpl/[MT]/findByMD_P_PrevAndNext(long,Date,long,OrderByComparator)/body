{
  JIRAIssue jiraIssue=findByPrimaryKey(jiraIssueId);
  int count=countByMD_P(modifiedDate,projectId);
  Session session=null;
  try {
    session=openSession();
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(4 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(4);
    }
    query.append(_SQL_SELECT_JIRAISSUE_WHERE);
    if (modifiedDate == null) {
      query.append(_FINDER_COLUMN_MD_P_MODIFIEDDATE_1);
    }
 else {
      query.append(_FINDER_COLUMN_MD_P_MODIFIEDDATE_2);
    }
    query.append(_FINDER_COLUMN_MD_P_PROJECTID_2);
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else {
      query.append(JIRAIssueModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Query q=session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    if (modifiedDate != null) {
      qPos.add(CalendarUtil.getTimestamp(modifiedDate));
    }
    qPos.add(projectId);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,orderByComparator,jiraIssue);
    JIRAIssue[] array=new JIRAIssueImpl[3];
    array[0]=(JIRAIssue)objArray[0];
    array[1]=(JIRAIssue)objArray[1];
    array[2]=(JIRAIssue)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}
