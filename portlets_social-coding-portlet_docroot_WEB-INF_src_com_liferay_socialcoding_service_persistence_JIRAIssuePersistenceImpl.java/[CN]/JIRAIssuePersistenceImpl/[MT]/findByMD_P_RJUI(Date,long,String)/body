{
  Object[] finderArgs=new Object[]{modifiedDate,new Long(projectId),reporterJiraUserId};
  List<JIRAIssue> list=(List<JIRAIssue>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_MD_P_RJUI,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT jiraIssue FROM JIRAIssue jiraIssue WHERE ");
      if (modifiedDate == null) {
        query.append("jiraIssue.modifiedDate > null");
      }
 else {
        query.append("jiraIssue.modifiedDate > ?");
      }
      query.append(" AND ");
      query.append("jiraIssue.projectId = ?");
      query.append(" AND ");
      if (reporterJiraUserId == null) {
        query.append("jiraIssue.reporterJiraUserId IS NULL");
      }
 else {
        if (reporterJiraUserId.equals(StringPool.BLANK)) {
          query.append("(jiraIssue.reporterJiraUserId IS NULL OR ");
        }
        query.append("jiraIssue.reporterJiraUserId = ?");
        if (reporterJiraUserId.equals(StringPool.BLANK)) {
          query.append(")");
        }
      }
      query.append(" ");
      query.append("ORDER BY ");
      query.append("jiraIssue.modifiedDate DESC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      if (modifiedDate != null) {
        qPos.add(CalendarUtil.getTimestamp(modifiedDate));
      }
      qPos.add(projectId);
      if (reporterJiraUserId != null) {
        qPos.add(reporterJiraUserId);
      }
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<JIRAIssue>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_MD_P_RJUI,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}
