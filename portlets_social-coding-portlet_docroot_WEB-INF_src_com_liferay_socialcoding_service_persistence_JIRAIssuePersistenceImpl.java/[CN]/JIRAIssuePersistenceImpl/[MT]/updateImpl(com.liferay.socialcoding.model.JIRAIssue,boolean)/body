{
  jiraIssue=toUnwrappedModel(jiraIssue);
  boolean isNew=jiraIssue.isNew();
  JIRAIssueModelImpl jiraIssueModelImpl=(JIRAIssueModelImpl)jiraIssue;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,jiraIssue,merge);
    jiraIssue.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !JIRAIssueModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PROJECTID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(jiraIssueModelImpl.getOriginalProjectId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_PROJECTID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PROJECTID,args);
      args=new Object[]{Long.valueOf(jiraIssueModelImpl.getProjectId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_PROJECTID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PROJECTID,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPORTERJIRAUSERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalReporterJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_REPORTERJIRAUSERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPORTERJIRAUSERID,args);
      args=new Object[]{jiraIssueModelImpl.getReporterJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_REPORTERJIRAUSERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPORTERJIRAUSERID,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ASSIGNEEJIRAUSERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalAssigneeJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_ASSIGNEEJIRAUSERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ASSIGNEEJIRAUSERID,args);
      args=new Object[]{jiraIssueModelImpl.getAssigneeJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_ASSIGNEEJIRAUSERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ASSIGNEEJIRAUSERID,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(jiraIssueModelImpl.getOriginalProjectId()),jiraIssueModelImpl.getOriginalReporterJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_RJUI,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI,args);
      args=new Object[]{Long.valueOf(jiraIssueModelImpl.getProjectId()),jiraIssueModelImpl.getReporterJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_RJUI,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(jiraIssueModelImpl.getOriginalProjectId()),jiraIssueModelImpl.getOriginalAssigneeJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_AJUI,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI,args);
      args=new Object[]{Long.valueOf(jiraIssueModelImpl.getProjectId()),jiraIssueModelImpl.getAssigneeJiraUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_AJUI,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(jiraIssueModelImpl.getOriginalProjectId()),jiraIssueModelImpl.getOriginalReporterJiraUserId(),jiraIssueModelImpl.getOriginalStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_RJUI_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI_S,args);
      args=new Object[]{Long.valueOf(jiraIssueModelImpl.getProjectId()),jiraIssueModelImpl.getReporterJiraUserId(),jiraIssueModelImpl.getStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_RJUI_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_RJUI_S,args);
    }
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(jiraIssueModelImpl.getOriginalProjectId()),jiraIssueModelImpl.getOriginalAssigneeJiraUserId(),jiraIssueModelImpl.getOriginalStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_AJUI_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI_S,args);
      args=new Object[]{Long.valueOf(jiraIssueModelImpl.getProjectId()),jiraIssueModelImpl.getAssigneeJiraUserId(),jiraIssueModelImpl.getStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_AJUI_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_AJUI_S,args);
    }
  }
  EntityCacheUtil.putResult(JIRAIssueModelImpl.ENTITY_CACHE_ENABLED,JIRAIssueImpl.class,jiraIssue.getPrimaryKey(),jiraIssue);
  if (isNew) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_KEY,new Object[]{jiraIssue.getKey()},jiraIssue);
  }
 else {
    if ((jiraIssueModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_KEY.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{jiraIssueModelImpl.getOriginalKey()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KEY,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_KEY,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_KEY,new Object[]{jiraIssue.getKey()},jiraIssue);
    }
  }
  return jiraIssue;
}
