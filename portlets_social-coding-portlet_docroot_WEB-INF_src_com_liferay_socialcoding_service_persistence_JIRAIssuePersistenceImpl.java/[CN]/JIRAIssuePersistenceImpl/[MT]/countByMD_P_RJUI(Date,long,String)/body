{
  Object[] finderArgs=new Object[]{modifiedDate,projectId,reporterJiraUserId};
  Long count=(Long)FinderCacheUtil.getResult(FINDER_PATH_COUNT_BY_MD_P_RJUI,finderArgs,this);
  if (count == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_COUNT_JIRAISSUE_WHERE);
    if (modifiedDate == null) {
      query.append(_FINDER_COLUMN_MD_P_RJUI_MODIFIEDDATE_1);
    }
 else {
      query.append(_FINDER_COLUMN_MD_P_RJUI_MODIFIEDDATE_2);
    }
    query.append(_FINDER_COLUMN_MD_P_RJUI_PROJECTID_2);
    if (reporterJiraUserId == null) {
      query.append(_FINDER_COLUMN_MD_P_RJUI_REPORTERJIRAUSERID_1);
    }
 else {
      if (reporterJiraUserId.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_MD_P_RJUI_REPORTERJIRAUSERID_3);
      }
 else {
        query.append(_FINDER_COLUMN_MD_P_RJUI_REPORTERJIRAUSERID_2);
      }
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (modifiedDate != null) {
        qPos.add(CalendarUtil.getTimestamp(modifiedDate));
      }
      qPos.add(projectId);
      if (reporterJiraUserId != null) {
        qPos.add(reporterJiraUserId);
      }
      count=(Long)q.uniqueResult();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (count == null) {
        count=Long.valueOf(0);
      }
      FinderCacheUtil.putResult(FINDER_PATH_COUNT_BY_MD_P_RJUI,finderArgs,count);
      closeSession(session);
    }
  }
  return count.intValue();
}
