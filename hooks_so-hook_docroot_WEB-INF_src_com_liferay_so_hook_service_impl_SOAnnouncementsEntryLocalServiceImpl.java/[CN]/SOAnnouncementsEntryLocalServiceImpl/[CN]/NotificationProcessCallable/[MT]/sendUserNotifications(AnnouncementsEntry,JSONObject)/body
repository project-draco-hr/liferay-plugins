{
  int count=0;
  long teamId=0;
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  if (announcementEntry.getClassNameId() == 0) {
    count=UserLocalServiceUtil.getUsersCount();
  }
 else {
    String className=announcementEntry.getClassName();
    long classPK=announcementEntry.getClassPK();
    if (classPK <= 0) {
      return;
    }
    if (className.equals(Group.class.getName())) {
      params.put("inherit",Boolean.TRUE);
      params.put("usersGroups",classPK);
    }
 else     if (className.equals(Organization.class.getName())) {
      Organization organization=OrganizationLocalServiceUtil.fetchOrganization(classPK);
      if (organization == null) {
        return;
      }
      params.put("usersOrgsTree",ListUtil.fromArray(new Organization[]{organization}));
    }
 else     if (className.equals(Role.class.getName())) {
      Role role=RoleLocalServiceUtil.fetchRole(classPK);
      if (role == null) {
        return;
      }
      if (role.getType() == RoleConstants.TYPE_REGULAR) {
        params.put("inherit",Boolean.TRUE);
        params.put("usersRoles",classPK);
      }
 else       if (role.isTeam()) {
        teamId=role.getClassPK();
        count=UserLocalServiceUtil.getTeamUsersCount(teamId);
      }
 else {
        params.put("userGroupRole",new Long[]{Long.valueOf(0),classPK});
      }
    }
 else     if (className.equals(UserGroup.class.getName())) {
      params.put("usersUserGroups",classPK);
    }
    if (!params.isEmpty()) {
      count=UserLocalServiceUtil.searchCount(announcementEntry.getCompanyId(),null,WorkflowConstants.STATUS_APPROVED,params);
    }
  }
  int pages=count / Indexer.DEFAULT_INTERVAL;
  for (int i=0; i <= pages; i++) {
    List<User> users=null;
    int start=(i * Indexer.DEFAULT_INTERVAL);
    int end=start + Indexer.DEFAULT_INTERVAL;
    if (announcementEntry.getClassNameId() == 0) {
      users=UserLocalServiceUtil.getUsers(start,end);
    }
 else     if (teamId > 0) {
      users=UserLocalServiceUtil.getTeamUsers(teamId,start,end);
    }
 else {
      users=UserLocalServiceUtil.search(announcementEntry.getCompanyId(),null,WorkflowConstants.STATUS_APPROVED,params,start,end,(OrderByComparator)null);
    }
    for (    User user : users) {
      if (UserNotificationManagerUtil.isDeliver(user.getUserId(),PortletKeys.SO_ANNOUNCEMENTS,0,0,UserNotificationDeliveryConstants.TYPE_WEBSITE)) {
        NotificationEvent notificationEvent=NotificationEventFactoryUtil.createNotificationEvent(System.currentTimeMillis(),PortletKeys.SO_ANNOUNCEMENTS,notificationEventJSONObject);
        notificationEvent.setDeliveryRequired(0);
        UserNotificationEventLocalServiceUtil.addUserNotificationEvent(user.getUserId(),notificationEvent);
      }
    }
  }
}
