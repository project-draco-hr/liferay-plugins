{
  Group group=user.getGroup();
  LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(group.getGroupId(),privateLayout);
  UnicodeProperties settingsProperties=layoutSet.getSettingsProperties();
  settingsProperties.remove("last-merge-time");
  layoutSet.setSettingsProperties(settingsProperties);
  layoutSet.setLayoutSetPrototypeLinkEnabled(false);
  layoutSet.setLayoutSetPrototypeUuid(StringPool.BLANK);
  LayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);
  LayoutSetLocalServiceUtil.updateLookAndFeel(group.getGroupId(),null,null,StringPool.BLANK,false);
  LayoutSetPrototype layoutSetPrototype=LayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototypeByUuid(layoutSetPrototypeUuid);
  Group layoutSetPrototypeGroup=layoutSetPrototype.getGroup();
  List<Layout> layouts=LayoutLocalServiceUtil.getLayouts(layoutSetPrototypeGroup.getGroupId(),true);
  String[] layoutUuids=new String[layouts.size()];
  for (int i=0; i < layouts.size(); i++) {
    Layout curLayout=layouts.get(i);
    layoutUuids[i]=curLayout.getUuid();
  }
  layouts=LayoutLocalServiceUtil.getLayouts(group.getGroupId(),privateLayout);
  for (  Layout layout : layouts) {
    if (ArrayUtil.contains(layoutUuids,layout.getSourcePrototypeLayoutUuid())) {
      LayoutLocalServiceUtil.deleteLayout(layout.getGroupId(),privateLayout,layout.getLayoutId(),new ServiceContext());
    }
  }
}
