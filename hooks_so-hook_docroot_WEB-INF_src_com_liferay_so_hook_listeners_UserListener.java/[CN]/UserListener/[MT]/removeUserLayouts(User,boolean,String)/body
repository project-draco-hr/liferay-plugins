{
  Group userGroup=user.getGroup();
  LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(userGroup.getGroupId(),privateLayout);
  UnicodeProperties settingsProperties=layoutSet.getSettingsProperties();
  settingsProperties.remove("last-merge-time");
  layoutSet.setSettingsProperties(settingsProperties);
  layoutSet.setLayoutSetPrototypeLinkEnabled(false);
  layoutSet.setLayoutSetPrototypeUuid(StringPool.BLANK);
  LayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);
  LayoutSetPrototype layoutSetPrototype=LayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototypeByUuid(layoutSetPrototypeUuid);
  Group group=layoutSetPrototype.getGroup();
  List<Layout> layoutSetPrototypeLayouts=LayoutLocalServiceUtil.getLayouts(group.getGroupId(),true);
  String[] prototypeLayoutUuids=new String[layoutSetPrototypeLayouts.size()];
  for (int i=0; i < layoutSetPrototypeLayouts.size(); i++) {
    Layout layoutSetPrototypeLayout=layoutSetPrototypeLayouts.get(i);
    prototypeLayoutUuids[i]=layoutSetPrototypeLayout.getUuid();
  }
  List<Layout> userLayouts=LayoutLocalServiceUtil.getLayouts(userGroup.getGroupId(),privateLayout);
  ServiceContext serviceContext=new ServiceContext();
  for (  Layout userLayout : userLayouts) {
    if (ArrayUtil.contains(prototypeLayoutUuids,userLayout.getSourcePrototypeLayoutUuid())) {
      LayoutLocalServiceUtil.deleteLayout(userLayout.getGroupId(),privateLayout,userLayout.getLayoutId(),serviceContext);
    }
  }
}
