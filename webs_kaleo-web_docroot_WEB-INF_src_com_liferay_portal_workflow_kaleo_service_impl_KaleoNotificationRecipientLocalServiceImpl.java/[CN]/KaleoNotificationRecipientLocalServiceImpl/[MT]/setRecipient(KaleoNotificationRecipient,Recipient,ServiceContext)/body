{
  RecipientType recipientType=recipient.getRecipientType();
  if (recipientType.equals(RecipientType.ROLE)) {
    kaleoNotificationRecipient.setRecipientClassName(Role.class.getName());
    RoleRecipient roleRecipient=(RoleRecipient)recipient;
    Role role=null;
    if (Validator.isNotNull(roleRecipient.getRoleName())) {
      try {
        role=roleLocalService.getRole(serviceContext.getCompanyId(),roleRecipient.getRoleName());
      }
 catch (      NoSuchRoleException nsre) {
        if (!roleRecipient.isAutoCreate()) {
          throw nsre;
        }
        role=roleLocalService.addRole(serviceContext.getUserId(),serviceContext.getCompanyId(),roleRecipient.getRoleName(),null,"Automatically added Role from workflow definition",RoleConstants.TYPE_REGULAR);
      }
    }
 else {
      role=roleLocalService.getRole(roleRecipient.getRoleId());
    }
    kaleoNotificationRecipient.setRecipientClassPK(role.getClassPK());
  }
 else   if (recipientType.equals(RecipientType.USER)) {
    kaleoNotificationRecipient.setRecipientClassName(User.class.getName());
    UserRecipient userRecipient=(UserRecipient)recipient;
    User user=null;
    if (userRecipient.getUserId() > 0) {
      user=userLocalService.getUser(userRecipient.getUserId());
    }
 else     if (Validator.isNotNull(userRecipient.getScreenName())) {
      user=userLocalService.getUserByScreenName(serviceContext.getCompanyId(),userRecipient.getScreenName());
    }
 else {
      user=userLocalService.getUserByEmailAddress(serviceContext.getCompanyId(),userRecipient.getEmailAddress());
    }
    kaleoNotificationRecipient.setRecipientClassPK(user.getUserId());
  }
 else {
    AddressRecipient addressRecipient=(AddressRecipient)recipient;
    kaleoNotificationRecipient.setAddress(addressRecipient.getAddress());
  }
}
