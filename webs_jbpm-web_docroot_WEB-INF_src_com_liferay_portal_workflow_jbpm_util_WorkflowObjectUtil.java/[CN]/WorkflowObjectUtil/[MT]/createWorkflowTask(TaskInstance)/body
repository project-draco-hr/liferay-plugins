{
  ProcessInstance processInstance=taskInstance.getProcessInstance();
  Set<PooledActor> pooledActors=taskInstance.getPooledActors();
  long assigneeRoleId=0;
  if ((pooledActors != null) && !pooledActors.isEmpty()) {
    PooledActor pooledActor=pooledActors.iterator().next();
    assigneeRoleId=GetterUtil.getLong(pooledActor.getActorId());
  }
  long assigneeUserId=GetterUtil.getLong(taskInstance.getActorId());
  boolean asynchronous=!taskInstance.isBlocking();
  Map<String,Object> optionalAttributes=taskInstance.getVariables();
  Date completionDate=taskInstance.getEnd();
  Date createDate=taskInstance.getCreate();
  String description=taskInstance.getDescription();
  Date dueDate=taskInstance.getDueDate();
  String name=taskInstance.getName();
  long workflowTaskId=taskInstance.getId();
  ProcessDefinition processDefinition=processInstance.getProcessDefinition();
  long workflowDefinitionId=processDefinition.getId();
  String workflowDefinitionName=processDefinition.getName();
  int workflowDefinitionVersion=processDefinition.getVersion();
  Token token=taskInstance.getToken();
  long workflowInstanceId=token.getId();
  return new WorkflowTaskImpl(workflowTaskId,workflowInstanceId,assigneeRoleId,assigneeUserId,asynchronous,completionDate,createDate,description,dueDate,name,optionalAttributes,workflowDefinitionId,workflowDefinitionName,workflowDefinitionVersion);
}
