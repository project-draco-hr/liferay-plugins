{
  if (_methodName36.equals(name) && Arrays.deepEquals(_methodParameterTypes36,parameterTypes)) {
    return CalendarResourceServiceUtil.getBeanIdentifier();
  }
  if (_methodName37.equals(name) && Arrays.deepEquals(_methodParameterTypes37,parameterTypes)) {
    CalendarResourceServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
  }
  if (_methodName42.equals(name) && Arrays.deepEquals(_methodParameterTypes42,parameterTypes)) {
    return CalendarResourceServiceUtil.addCalendarResource(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],((Long)arguments[2]).longValue(),(java.lang.String)arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.util.Map<java.util.Locale,java.lang.String>)arguments[6],(java.util.Map<java.util.Locale,java.lang.String>)arguments[7],(java.lang.String)arguments[8],((Boolean)arguments[9]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[10]);
  }
  if (_methodName43.equals(name) && Arrays.deepEquals(_methodParameterTypes43,parameterTypes)) {
    return CalendarResourceServiceUtil.deleteCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName44.equals(name) && Arrays.deepEquals(_methodParameterTypes44,parameterTypes)) {
    return CalendarResourceServiceUtil.getCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName45.equals(name) && Arrays.deepEquals(_methodParameterTypes45,parameterTypes)) {
    return CalendarResourceServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue(),((Boolean)arguments[5]).booleanValue(),((Integer)arguments[6]).intValue(),((Integer)arguments[7]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[8]);
  }
  if (_methodName46.equals(name) && Arrays.deepEquals(_methodParameterTypes46,parameterTypes)) {
    return CalendarResourceServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],(java.lang.String)arguments[5],(java.lang.String)arguments[6],((Boolean)arguments[7]).booleanValue(),((Boolean)arguments[8]).booleanValue(),((Integer)arguments[9]).intValue(),((Integer)arguments[10]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[11]);
  }
  if (_methodName47.equals(name) && Arrays.deepEquals(_methodParameterTypes47,parameterTypes)) {
    return CalendarResourceServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue());
  }
  if (_methodName48.equals(name) && Arrays.deepEquals(_methodParameterTypes48,parameterTypes)) {
    return CalendarResourceServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],(java.lang.String)arguments[5],(java.lang.String)arguments[6],((Boolean)arguments[7]).booleanValue(),((Boolean)arguments[8]).booleanValue());
  }
  if (_methodName49.equals(name) && Arrays.deepEquals(_methodParameterTypes49,parameterTypes)) {
    return CalendarResourceServiceUtil.updateCalendarResource(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],((Boolean)arguments[6]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[7]);
  }
  if (_methodName50.equals(name) && Arrays.deepEquals(_methodParameterTypes50,parameterTypes)) {
    return CalendarResourceServiceUtil.updateCalendarResource(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.lang.String)arguments[4],((Boolean)arguments[5]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[6]);
  }
  throw new UnsupportedOperationException();
}
