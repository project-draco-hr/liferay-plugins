{
  int status=tasksEntry.getStatus();
  if ((status != TasksEntryConstants.STATUS_OPEN) && (status != TasksEntryConstants.STATUS_RESOLVED) && (status != TasksEntryConstants.STATUS_REOPENED)) {
    return;
  }
  HashSet<Long> receiverUserIds=new HashSet<Long>(3);
  receiverUserIds.add(oldAssigneeUserId);
  receiverUserIds.add(tasksEntry.getUserId());
  receiverUserIds.add(tasksEntry.getAssigneeUserId());
  receiverUserIds.remove(serviceContext.getUserId());
  JSONObject notificationEventJSONObject=JSONFactoryUtil.createJSONObject();
  notificationEventJSONObject.put("body",tasksEntry.getTitle());
  notificationEventJSONObject.put("entryId",tasksEntry.getTasksEntryId());
  notificationEventJSONObject.put("portletId",PortletKeys.TASKS);
  notificationEventJSONObject.put("userId",serviceContext.getUserId());
  for (  long receiverUserId : receiverUserIds) {
    if (receiverUserId == 0) {
      continue;
    }
    String title=StringPool.BLANK;
    if (oldStatus == TasksEntryConstants.STATUS_ALL) {
      title="x-assigned-you-a-task";
    }
 else     if (tasksEntry.getAssigneeUserId() != oldAssigneeUserId) {
      if (receiverUserId == oldAssigneeUserId) {
        title="x-reassigned-your-task";
      }
 else {
        title="x-assigned-you-a-task";
      }
    }
 else     if (status != oldStatus) {
      String statusLabel=TasksEntryConstants.getStatusLabel(tasksEntry.getStatus());
      title="x-" + statusLabel + "-the-task";
    }
 else {
      title="x-modified-the-task";
    }
    notificationEventJSONObject.put("title",title);
    NotificationEvent notificationEvent=NotificationEventFactoryUtil.createNotificationEvent(System.currentTimeMillis(),"6_WAR_soportlet",notificationEventJSONObject);
    notificationEvent.setDeliveryRequired(0);
    ChannelHubManagerUtil.sendNotificationEvent(tasksEntry.getCompanyId(),receiverUserId,notificationEvent);
  }
}
