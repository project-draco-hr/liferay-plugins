{
  Workflow workflow=null;
  ClassLoader contextClassLoader=_getCurrentClassLoader();
  _setAggregateClassLoader(contextClassLoader);
  try {
    workflow=_getWorkflowImpl();
  }
 catch (  WorkflowException e) {
    throw new WorkflowComponentException(e);
  }
  Class[] paramTypeArray=new Class[]{String.class,String.class,String.class,String.class,String.class,String.class,String.class,String.class,String.class,boolean.class,boolean.class};
  Object[] paramValueArray=new Object[]{taskName,definitionName,assignedTo,createDateGT,createDateLT,startDateGT,startDateLT,endDateGT,endDateLT,hideEndedTasks,andOperator};
  Class tmpClass=_loadSAWJbpmGraphSession();
  String timeZoneId=_getTimeZoneIdForUser(userId);
  Map resultsMap=_invokeMethod(tmpClass,"countTaskInstancesBySearchTerms",userId,timeZoneId,paramTypeArray,paramValueArray,workflow);
  Integer tmpCount=(Integer)resultsMap.get("invokeMethodResult");
  int count=tmpCount.intValue();
  _restoreClassLoader(contextClassLoader);
  StringBuilder sm=new StringBuilder();
  sm.append("<result>");
  sm.append("<count>");
  sm.append(count);
  sm.append("</count>");
  sm.append("</result>");
  return sm.toString();
}
