{
  int count=0;
  ClassLoader contextClassLoader=_getCurrentClassLoader();
  _setAggregateClassLoader(contextClassLoader);
  if (definitionId > 0) {
    count=1;
  }
 else   if (instanceId > 0) {
    count=1;
  }
 else {
    String assignedUserId=null;
    if (retrieveUserInstances) {
      assignedUserId=userId;
    }
    Workflow workflow=null;
    try {
      workflow=_getWorkflowImpl();
    }
 catch (    WorkflowException e) {
      throw new WorkflowComponentException(e);
    }
    Class[] paramTypeArray=new Class[]{String.class,String.class,String.class,String.class,String.class,String.class,boolean.class,String.class,boolean.class};
    Object[] paramValueArray=new Object[]{definitionName,definitionVersion,startDateGT,startDateLT,endDateGT,endDateLT,hideEndedTasks,assignedUserId,andOperator};
    Class tmpClass=_loadSAWJbpmGraphSession();
    String timeZoneId=_getTimeZoneIdForUser(userId);
    Map resultsMap=_invokeMethod(tmpClass,"countProcessInstancesBySearchTerms",userId,timeZoneId,paramTypeArray,paramValueArray,workflow);
    count=((Integer)resultsMap.get("invokeMethodResult")).intValue();
  }
  _restoreClassLoader(contextClassLoader);
  StringBuilder sm=new StringBuilder();
  sm.append("<result>");
  sm.append("<count>");
  sm.append(count);
  sm.append("</count>");
  sm.append("</result>");
  return sm.toString();
}
