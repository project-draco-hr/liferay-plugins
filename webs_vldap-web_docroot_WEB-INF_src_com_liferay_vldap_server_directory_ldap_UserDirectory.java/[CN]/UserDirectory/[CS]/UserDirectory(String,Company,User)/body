{
  addAttribute("cn",user.getScreenName());
  Date createDate=user.getCreateDate();
  if (createDate == null) {
    createDate=new Date();
  }
  addAttribute("createTimestamp",_simpleDateFormat.format(createDate));
  addAttribute("displayName",user.getFullName());
  addAttribute("givenName",user.getFirstName());
  addAttribute("mail",user.getEmailAddress());
  Date modifyDate=user.getModifiedDate();
  if (modifyDate == null) {
    modifyDate=new Date();
  }
  addAttribute("modifyTimestamp",_simpleDateFormat.format(modifyDate));
  addAttribute("sn",user.getLastName());
  addAttribute("objectclass","groupOfNames");
  addAttribute("objectclass","inetOrgPerson");
  addAttribute("objectclass","liferayPerson");
  addAttribute("objectclass","top");
  addAttribute("uid",String.valueOf(user.getUserId()));
  addAttribute("uuid",user.getUuid());
  String name=LdapUtil.buildName(top,company);
  setName(top,company,"Users","cn=" + user.getScreenName());
  long groupClassNameId=PortalUtil.getClassNameId(Group.class.getName());
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  params.put("usersGroups",user.getUserId());
  List<Group> groups=GroupLocalServiceUtil.search(user.getCompanyId(),new long[]{groupClassNameId},null,null,params,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
  for (  Group group : groups) {
    StringBundler sb=new StringBundler(6);
    sb.append("cn=");
    sb.append(group.getName());
    sb.append(",ou=");
    sb.append(group.getName());
    sb.append(",ou=Communities,");
    sb.append(name);
    addAttribute("member",sb.toString());
  }
  for (  Organization organization : user.getOrganizations()) {
    StringBundler sb=new StringBundler(6);
    sb.append("cn=");
    sb.append(organization.getName());
    sb.append(",ou=");
    sb.append(organization.getName());
    sb.append(",ou=Organizations,");
    sb.append(name);
    addAttribute("member",sb.toString());
  }
  for (  Role role : user.getRoles()) {
    StringBundler sb=new StringBundler(6);
    sb.append("cn=");
    sb.append(role.getName());
    sb.append(",ou=");
    sb.append(role.getName());
    sb.append(",ou=Roles,");
    sb.append(name);
    addAttribute("member",sb.toString());
  }
  for (  UserGroup userGroup : user.getUserGroups()) {
    StringBundler sb=new StringBundler(6);
    sb.append("cn=");
    sb.append(userGroup.getName());
    sb.append(",ou=");
    sb.append(userGroup.getName());
    sb.append(",ou=User Groups,");
    sb.append(name);
    addAttribute("member",sb.toString());
  }
}
