{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals(WSRPConsumerClp.class.getName())) {
    WSRPConsumerClp oldCplModel=(WSRPConsumerClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class<?> newModelClass=Class.forName("com.liferay.wsrp.model.impl.WSRPConsumerImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setUuid",new Class[]{String.class});
        String value0=oldCplModel.getUuid();
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setWsrpConsumerId",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getWsrpConsumerId());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getCompanyId());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
        Date value3=oldCplModel.getCreateDate();
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
        Date value4=oldCplModel.getModifiedDate();
        method4.invoke(newModel,value4);
        Method method5=newModelClass.getMethod("setName",new Class[]{String.class});
        String value5=oldCplModel.getName();
        method5.invoke(newModel,value5);
        Method method6=newModelClass.getMethod("setUrl",new Class[]{String.class});
        String value6=oldCplModel.getUrl();
        method6.invoke(newModel,value6);
        Method method7=newModelClass.getMethod("setWsdl",new Class[]{String.class});
        String value7=oldCplModel.getWsdl();
        method7.invoke(newModel,value7);
        Method method8=newModelClass.getMethod("setRegistrationContextString",new Class[]{String.class});
        String value8=oldCplModel.getRegistrationContextString();
        method8.invoke(newModel,value8);
        Method method9=newModelClass.getMethod("setRegistrationPropertiesString",new Class[]{String.class});
        String value9=oldCplModel.getRegistrationPropertiesString();
        method9.invoke(newModel,value9);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals(WSRPConsumerPortletClp.class.getName())) {
    WSRPConsumerPortletClp oldCplModel=(WSRPConsumerPortletClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class<?> newModelClass=Class.forName("com.liferay.wsrp.model.impl.WSRPConsumerPortletImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setUuid",new Class[]{String.class});
        String value0=oldCplModel.getUuid();
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setWsrpConsumerPortletId",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getWsrpConsumerPortletId());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getCompanyId());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
        Date value3=oldCplModel.getCreateDate();
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
        Date value4=oldCplModel.getModifiedDate();
        method4.invoke(newModel,value4);
        Method method5=newModelClass.getMethod("setWsrpConsumerId",new Class[]{Long.TYPE});
        Long value5=new Long(oldCplModel.getWsrpConsumerId());
        method5.invoke(newModel,value5);
        Method method6=newModelClass.getMethod("setName",new Class[]{String.class});
        String value6=oldCplModel.getName();
        method6.invoke(newModel,value6);
        Method method7=newModelClass.getMethod("setPortletHandle",new Class[]{String.class});
        String value7=oldCplModel.getPortletHandle();
        method7.invoke(newModel,value7);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals(WSRPProducerClp.class.getName())) {
    WSRPProducerClp oldCplModel=(WSRPProducerClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class<?> newModelClass=Class.forName("com.liferay.wsrp.model.impl.WSRPProducerImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setUuid",new Class[]{String.class});
        String value0=oldCplModel.getUuid();
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setWsrpProducerId",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getWsrpProducerId());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setGroupId",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getGroupId());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
        Long value3=new Long(oldCplModel.getCompanyId());
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
        Date value4=oldCplModel.getCreateDate();
        method4.invoke(newModel,value4);
        Method method5=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
        Date value5=oldCplModel.getModifiedDate();
        method5.invoke(newModel,value5);
        Method method6=newModelClass.getMethod("setName",new Class[]{String.class});
        String value6=oldCplModel.getName();
        method6.invoke(newModel,value6);
        Method method7=newModelClass.getMethod("setVersion",new Class[]{String.class});
        String value7=oldCplModel.getVersion();
        method7.invoke(newModel,value7);
        Method method8=newModelClass.getMethod("setPortletIds",new Class[]{String.class});
        String value8=oldCplModel.getPortletIds();
        method8.invoke(newModel,value8);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
