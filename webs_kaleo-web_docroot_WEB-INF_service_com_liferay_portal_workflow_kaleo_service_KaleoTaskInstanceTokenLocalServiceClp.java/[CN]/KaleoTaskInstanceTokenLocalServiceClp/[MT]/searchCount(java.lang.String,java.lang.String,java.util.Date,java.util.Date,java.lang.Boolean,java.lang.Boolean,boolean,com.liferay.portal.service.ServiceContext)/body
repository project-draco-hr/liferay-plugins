{
  Object paramObj0=ClpSerializer.translateInput(taskName);
  if (taskName == null) {
    paramObj0=new NullWrapper("java.lang.String");
  }
  Object paramObj1=ClpSerializer.translateInput(assetType);
  if (assetType == null) {
    paramObj1=new NullWrapper("java.lang.String");
  }
  Object paramObj2=ClpSerializer.translateInput(dueDateGT);
  if (dueDateGT == null) {
    paramObj2=new NullWrapper("java.util.Date");
  }
  Object paramObj3=ClpSerializer.translateInput(dueDateLT);
  if (dueDateLT == null) {
    paramObj3=new NullWrapper("java.util.Date");
  }
  Object paramObj4=ClpSerializer.translateInput(completed);
  if (completed == null) {
    paramObj4=new NullWrapper("java.lang.Boolean");
  }
  Object paramObj5=ClpSerializer.translateInput(searchByUserRoles);
  if (searchByUserRoles == null) {
    paramObj5=new NullWrapper("java.lang.Boolean");
  }
  Object paramObj6=new BooleanWrapper(andOperator);
  Object paramObj7=ClpSerializer.translateInput(serviceContext);
  if (serviceContext == null) {
    paramObj7=new NullWrapper("com.liferay.portal.service.ServiceContext");
  }
  Object returnObj=null;
  try {
    returnObj=_classLoaderProxy.invoke("searchCount",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7});
  }
 catch (  Throwable t) {
    if (t instanceof com.liferay.portal.kernel.exception.PortalException) {
      throw (com.liferay.portal.kernel.exception.PortalException)t;
    }
    if (t instanceof com.liferay.portal.kernel.exception.SystemException) {
      throw (com.liferay.portal.kernel.exception.SystemException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new RuntimeException(t.getClass().getName() + " is not a valid exception");
    }
  }
  return ((Integer)returnObj).intValue();
}
