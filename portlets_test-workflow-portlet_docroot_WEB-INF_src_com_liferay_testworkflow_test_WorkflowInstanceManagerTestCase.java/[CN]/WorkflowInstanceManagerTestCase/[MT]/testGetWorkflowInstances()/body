{
  WorkflowInstance workflowInstance1_1=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition1.getName(),_workflowDefinition1.getVersion(),null,null);
  workflowInstance1_1=WorkflowInstanceManagerUtil.signalWorkflowInstance(companyId,defaultUserId,workflowInstance1_1.getWorkflowInstanceId(),"toTaskNode",null);
  workflowInstance1_1=WorkflowInstanceManagerUtil.signalWorkflowInstance(companyId,defaultUserId,workflowInstance1_1.getWorkflowInstanceId(),"toEnd",null);
  WorkflowInstance workflowInstance1_2=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition1.getName(),_workflowDefinition1.getVersion(),null,null);
  workflowInstance1_2=WorkflowInstanceManagerUtil.signalWorkflowInstance(companyId,defaultUserId,workflowInstance1_2.getWorkflowInstanceId(),"toTaskNode",null);
  workflowInstance1_2=WorkflowInstanceManagerUtil.signalWorkflowInstance(companyId,defaultUserId,workflowInstance1_2.getWorkflowInstanceId(),"toEnd",null);
  WorkflowInstance workflowInstance1_3=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition1.getName(),_workflowDefinition1.getVersion(),null,null);
  WorkflowInstance workflowInstance2_1=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition2.getName(),_workflowDefinition2.getVersion(),null,null);
  workflowInstance2_1=WorkflowInstanceManagerUtil.signalWorkflowInstance(companyId,defaultUserId,workflowInstance2_1.getWorkflowInstanceId(),"toEnd",null);
  WorkflowInstance workflowInstance2_2=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition2.getName(),_workflowDefinition2.getVersion(),null,null);
  List<WorkflowInstance> workflowInstances=WorkflowInstanceManagerUtil.getWorkflowInstances(companyId,DEFINITION_NAME_1,_workflowDefinition1.getVersion(),Boolean.TRUE,QueryUtil.ALL_POS,QueryUtil.ALL_POS,WorkflowComparatorFactoryUtil.getInstanceStartDateComparator(true));
  assertEquals(2,workflowInstances.size());
  WorkflowInstance workflowInstance1=workflowInstances.get(0);
  assertEquals(0,workflowInstance1.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> context1=workflowInstance1.getContext();
  assertEquals(1,context1.size());
  assertEquals("success",context1.get("javaNode11"));
  assertEquals("end",workflowInstance1.getState());
  assertNotNull(workflowInstance1.getEndDate());
  assertNull(workflowInstance1.getParentWorkflowInstance());
  assertNotNull(workflowInstance1.getStartDate());
  assertEquals(DEFINITION_NAME_1,workflowInstance1.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition1.getVersion(),workflowInstance1.getWorkflowDefinitionVersion());
  assertEquals(workflowInstance1_1.getWorkflowInstanceId(),workflowInstance1.getWorkflowInstanceId());
  WorkflowInstance workflowInstance2=workflowInstances.get(1);
  assertEquals(0,workflowInstance2.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> context2=workflowInstance2.getContext();
  assertEquals(1,context2.size());
  assertEquals("success",context2.get("javaNode11"));
  assertEquals("end",workflowInstance2.getState());
  assertNotNull(workflowInstance2.getEndDate());
  assertNull(workflowInstance2.getParentWorkflowInstance());
  assertNotNull(workflowInstance2.getStartDate());
  assertEquals(DEFINITION_NAME_1,workflowInstance2.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition1.getVersion(),workflowInstance2.getWorkflowDefinitionVersion());
  assertEquals(workflowInstance1_2.getWorkflowInstanceId(),workflowInstance2.getWorkflowInstanceId());
  workflowInstances=WorkflowInstanceManagerUtil.getWorkflowInstances(companyId,DEFINITION_NAME_1,_workflowDefinition1.getVersion(),Boolean.TRUE,1,2,WorkflowComparatorFactoryUtil.getInstanceStartDateComparator(true));
  assertEquals(1,workflowInstances.size());
  WorkflowInstance workflowInstance3=workflowInstances.get(0);
  assertEquals(0,workflowInstance3.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> context3=workflowInstance3.getContext();
  assertEquals(1,context3.size());
  assertEquals("success",context3.get("javaNode11"));
  assertEquals("end",workflowInstance3.getState());
  assertNotNull(workflowInstance3.getEndDate());
  assertNull(workflowInstance3.getParentWorkflowInstance());
  assertNotNull(workflowInstance3.getStartDate());
  assertEquals(DEFINITION_NAME_1,workflowInstance3.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition1.getVersion(),workflowInstance3.getWorkflowDefinitionVersion());
  assertEquals(workflowInstance1_2.getWorkflowInstanceId(),workflowInstance3.getWorkflowInstanceId());
  workflowInstances=WorkflowInstanceManagerUtil.getWorkflowInstances(companyId,DEFINITION_NAME_1,_workflowDefinition1.getVersion(),Boolean.FALSE,QueryUtil.ALL_POS,QueryUtil.ALL_POS,WorkflowComparatorFactoryUtil.getInstanceStartDateComparator(true));
  assertEquals(1,workflowInstances.size());
  WorkflowInstance workflowInstance4=workflowInstances.get(0);
  assertEquals(0,workflowInstance4.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> context4=workflowInstance4.getContext();
  assertEquals(1,context4.size());
  assertEquals("success",context4.get("javaNode11"));
  assertEquals("State1-1",workflowInstance4.getState());
  assertNull(workflowInstance4.getEndDate());
  assertNull(workflowInstance4.getParentWorkflowInstance());
  assertNotNull(workflowInstance4.getStartDate());
  assertEquals(DEFINITION_NAME_1,workflowInstance4.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition1.getVersion(),workflowInstance4.getWorkflowDefinitionVersion());
  assertEquals(workflowInstance1_3.getWorkflowInstanceId(),workflowInstance4.getWorkflowInstanceId());
  workflowInstances=WorkflowInstanceManagerUtil.getWorkflowInstances(companyId,DEFINITION_NAME_2,_workflowDefinition2.getVersion(),Boolean.TRUE,QueryUtil.ALL_POS,QueryUtil.ALL_POS,WorkflowComparatorFactoryUtil.getInstanceStartDateComparator(true));
  assertEquals(1,workflowInstances.size());
  WorkflowInstance workflowInstance5=workflowInstances.get(0);
  assertEquals(0,workflowInstance5.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> context5=workflowInstance5.getContext();
  assertEquals(1,context5.size());
  assertEquals("success",context5.get("javaNode21"));
  assertEquals("end",workflowInstance5.getState());
  assertNotNull(workflowInstance5.getEndDate());
  assertNull(workflowInstance5.getParentWorkflowInstance());
  assertNotNull(workflowInstance5.getStartDate());
  assertEquals(DEFINITION_NAME_2,workflowInstance5.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition2.getVersion(),workflowInstance5.getWorkflowDefinitionVersion());
  assertEquals(workflowInstance2_1.getWorkflowInstanceId(),workflowInstance5.getWorkflowInstanceId());
  workflowInstances=WorkflowInstanceManagerUtil.getWorkflowInstances(companyId,DEFINITION_NAME_2,_workflowDefinition2.getVersion(),Boolean.FALSE,QueryUtil.ALL_POS,QueryUtil.ALL_POS,WorkflowComparatorFactoryUtil.getInstanceStartDateComparator(true));
  assertEquals(1,workflowInstances.size());
  WorkflowInstance workflowInstance6=workflowInstances.get(0);
  assertEquals(0,workflowInstance6.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> context6=workflowInstance6.getContext();
  assertEquals(1,context6.size());
  assertEquals("success",context6.get("javaNode21"));
  assertEquals("taskNode3",workflowInstance6.getState());
  assertNull(workflowInstance6.getEndDate());
  assertNull(workflowInstance6.getParentWorkflowInstance());
  assertNotNull(workflowInstance6.getStartDate());
  assertEquals(DEFINITION_NAME_2,workflowInstance6.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition2.getVersion(),workflowInstance6.getWorkflowDefinitionVersion());
  assertEquals(workflowInstance2_2.getWorkflowInstanceId(),workflowInstance6.getWorkflowInstanceId());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance1_1.getWorkflowInstanceId());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance1_2.getWorkflowInstanceId());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance1_3.getWorkflowInstanceId());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance2_1.getWorkflowInstanceId());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance2_2.getWorkflowInstanceId());
}
