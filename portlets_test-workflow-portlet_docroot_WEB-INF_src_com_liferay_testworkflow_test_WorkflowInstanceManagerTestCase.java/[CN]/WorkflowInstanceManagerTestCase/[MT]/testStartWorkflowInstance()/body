{
  WorkflowInstance workflowInstance1=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition1.getName(),_workflowDefinition1.getVersion(),null,null);
  assertNotNull(workflowInstance1);
  assertEquals(0,workflowInstance1.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> workflowContext1=workflowInstance1.getWorkflowContext();
  assertNotNull(workflowContext1);
  assertEquals(1,workflowContext1.size());
  assertEquals("success",workflowContext1.get("javaNode11"));
  assertEquals("State1-1",workflowInstance1.getState());
  assertNull(workflowInstance1.getEndDate());
  assertNull(workflowInstance1.getParentWorkflowInstance());
  assertNotNull(workflowInstance1.getStartDate());
  assertEquals(DEFINITION_NAME_1,workflowInstance1.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition1.getVersion(),workflowInstance1.getWorkflowDefinitionVersion());
  WorkflowInstance workflowInstance2=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition2.getName(),_workflowDefinition2.getVersion(),null,null);
  assertNotNull(workflowInstance2);
  assertEquals(0,workflowInstance2.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> workflowContext2=workflowInstance2.getWorkflowContext();
  assertNotNull(workflowContext2);
  assertEquals(1,workflowContext2.size());
  assertEquals("success",workflowContext2.get("javaNode21"));
  assertEquals("taskNode3",workflowInstance2.getState());
  assertNull(workflowInstance2.getEndDate());
  assertNull(workflowInstance2.getParentWorkflowInstance());
  assertNotNull(workflowInstance2.getStartDate());
  assertEquals(DEFINITION_NAME_2,workflowInstance2.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition2.getVersion(),workflowInstance2.getWorkflowDefinitionVersion());
  WorkflowInstance workflowInstance3=WorkflowInstanceManagerUtil.startWorkflowInstance(companyId,defaultUserId,_workflowDefinition3.getName(),_workflowDefinition3.getVersion(),null,null);
  assertNotNull(workflowInstance3);
  assertEquals(0,workflowInstance3.getChildrenWorkflowInstanceCount());
  Map<String,Serializable> workflowContext3=workflowInstance3.getWorkflowContext();
  assertNotNull(workflowContext3);
  assertEquals(1,workflowContext3.size());
  assertEquals("success",workflowContext3.get("javaNode31"));
  assertEquals("forkNode",workflowInstance3.getState());
  assertNull(workflowInstance3.getEndDate());
  assertNull(workflowInstance3.getParentWorkflowInstance());
  assertNotNull(workflowInstance3.getStartDate());
  assertEquals(DEFINITION_NAME_3,workflowInstance3.getWorkflowDefinitionName());
  assertEquals(_workflowDefinition3.getVersion(),workflowInstance3.getWorkflowDefinitionVersion());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance1.getWorkflowInstanceId());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance2.getWorkflowInstanceId());
  WorkflowInstanceManagerUtil.deleteWorkflowInstance(companyId,workflowInstance3.getWorkflowInstanceId());
}
