{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals("com.liferay.knowledgebase.model.impl.ArticleImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        ArticleClp newModel=new ArticleClp();
        Method method0=oldModelClass.getMethod("getUuid");
        String value0=(String)method0.invoke(oldModel,(Object[])null);
        newModel.setUuid(value0);
        Method method1=oldModelClass.getMethod("getArticleId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setArticleId(value1);
        Method method2=oldModelClass.getMethod("getResourcePrimKey");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setResourcePrimKey(value2);
        Method method3=oldModelClass.getMethod("getGroupId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setGroupId(value3);
        Method method4=oldModelClass.getMethod("getCompanyId");
        Long value4=(Long)method4.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value4);
        Method method5=oldModelClass.getMethod("getUserId");
        Long value5=(Long)method5.invoke(oldModel,(Object[])null);
        newModel.setUserId(value5);
        Method method6=oldModelClass.getMethod("getUserName");
        String value6=(String)method6.invoke(oldModel,(Object[])null);
        newModel.setUserName(value6);
        Method method7=oldModelClass.getMethod("getCreateDate");
        Date value7=(Date)method7.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value7);
        Method method8=oldModelClass.getMethod("getModifiedDate");
        Date value8=(Date)method8.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value8);
        Method method9=oldModelClass.getMethod("getParentResourcePrimKey");
        Long value9=(Long)method9.invoke(oldModel,(Object[])null);
        newModel.setParentResourcePrimKey(value9);
        Method method10=oldModelClass.getMethod("getVersion");
        Integer value10=(Integer)method10.invoke(oldModel,(Object[])null);
        newModel.setVersion(value10);
        Method method11=oldModelClass.getMethod("getTitle");
        String value11=(String)method11.invoke(oldModel,(Object[])null);
        newModel.setTitle(value11);
        Method method12=oldModelClass.getMethod("getContent");
        String value12=(String)method12.invoke(oldModel,(Object[])null);
        newModel.setContent(value12);
        Method method13=oldModelClass.getMethod("getDescription");
        String value13=(String)method13.invoke(oldModel,(Object[])null);
        newModel.setDescription(value13);
        Method method14=oldModelClass.getMethod("getPriority");
        Integer value14=(Integer)method14.invoke(oldModel,(Object[])null);
        newModel.setPriority(value14);
        Method method15=oldModelClass.getMethod("getLatest");
        Integer value15=(Integer)method15.invoke(oldModel,(Object[])null);
        newModel.setLatest(value15);
        Method method16=oldModelClass.getMethod("getStatus");
        Integer value16=(Integer)method16.invoke(oldModel,(Object[])null);
        newModel.setStatus(value16);
        Method method17=oldModelClass.getMethod("getStatusByUserId");
        Long value17=(Long)method17.invoke(oldModel,(Object[])null);
        newModel.setStatusByUserId(value17);
        Method method18=oldModelClass.getMethod("getStatusByUserName");
        String value18=(String)method18.invoke(oldModel,(Object[])null);
        newModel.setStatusByUserName(value18);
        Method method19=oldModelClass.getMethod("getStatusDate");
        Date value19=(Date)method19.invoke(oldModel,(Object[])null);
        newModel.setStatusDate(value19);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.knowledgebase.model.impl.CommentImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        CommentClp newModel=new CommentClp();
        Method method0=oldModelClass.getMethod("getUuid");
        String value0=(String)method0.invoke(oldModel,(Object[])null);
        newModel.setUuid(value0);
        Method method1=oldModelClass.getMethod("getCommentId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setCommentId(value1);
        Method method2=oldModelClass.getMethod("getGroupId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setGroupId(value2);
        Method method3=oldModelClass.getMethod("getCompanyId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value3);
        Method method4=oldModelClass.getMethod("getUserId");
        Long value4=(Long)method4.invoke(oldModel,(Object[])null);
        newModel.setUserId(value4);
        Method method5=oldModelClass.getMethod("getUserName");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setUserName(value5);
        Method method6=oldModelClass.getMethod("getCreateDate");
        Date value6=(Date)method6.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value6);
        Method method7=oldModelClass.getMethod("getModifiedDate");
        Date value7=(Date)method7.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value7);
        Method method8=oldModelClass.getMethod("getClassNameId");
        Long value8=(Long)method8.invoke(oldModel,(Object[])null);
        newModel.setClassNameId(value8);
        Method method9=oldModelClass.getMethod("getClassPK");
        Long value9=(Long)method9.invoke(oldModel,(Object[])null);
        newModel.setClassPK(value9);
        Method method10=oldModelClass.getMethod("getContent");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setContent(value10);
        Method method11=oldModelClass.getMethod("getHelpful");
        Boolean value11=(Boolean)method11.invoke(oldModel,(Object[])null);
        newModel.setHelpful(value11);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals("com.liferay.knowledgebase.model.impl.TemplateImpl")) {
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        TemplateClp newModel=new TemplateClp();
        Method method0=oldModelClass.getMethod("getUuid");
        String value0=(String)method0.invoke(oldModel,(Object[])null);
        newModel.setUuid(value0);
        Method method1=oldModelClass.getMethod("getTemplateId");
        Long value1=(Long)method1.invoke(oldModel,(Object[])null);
        newModel.setTemplateId(value1);
        Method method2=oldModelClass.getMethod("getGroupId");
        Long value2=(Long)method2.invoke(oldModel,(Object[])null);
        newModel.setGroupId(value2);
        Method method3=oldModelClass.getMethod("getCompanyId");
        Long value3=(Long)method3.invoke(oldModel,(Object[])null);
        newModel.setCompanyId(value3);
        Method method4=oldModelClass.getMethod("getUserId");
        Long value4=(Long)method4.invoke(oldModel,(Object[])null);
        newModel.setUserId(value4);
        Method method5=oldModelClass.getMethod("getUserName");
        String value5=(String)method5.invoke(oldModel,(Object[])null);
        newModel.setUserName(value5);
        Method method6=oldModelClass.getMethod("getCreateDate");
        Date value6=(Date)method6.invoke(oldModel,(Object[])null);
        newModel.setCreateDate(value6);
        Method method7=oldModelClass.getMethod("getModifiedDate");
        Date value7=(Date)method7.invoke(oldModel,(Object[])null);
        newModel.setModifiedDate(value7);
        Method method8=oldModelClass.getMethod("getTitle");
        String value8=(String)method8.invoke(oldModel,(Object[])null);
        newModel.setTitle(value8);
        Method method9=oldModelClass.getMethod("getContent");
        String value9=(String)method9.invoke(oldModel,(Object[])null);
        newModel.setContent(value9);
        Method method10=oldModelClass.getMethod("getDescription");
        String value10=(String)method10.invoke(oldModel,(Object[])null);
        newModel.setDescription(value10);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
