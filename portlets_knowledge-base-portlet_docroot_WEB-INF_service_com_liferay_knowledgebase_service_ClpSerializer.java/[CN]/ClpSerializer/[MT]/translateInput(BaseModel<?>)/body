{
  Class<?> oldModelClass=oldModel.getClass();
  String oldModelClassName=oldModelClass.getName();
  if (oldModelClassName.equals(ArticleClp.class.getName())) {
    ArticleClp oldCplModel=(ArticleClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class<?> newModelClass=Class.forName("com.liferay.knowledgebase.model.impl.ArticleImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setUuid",new Class[]{String.class});
        String value0=oldCplModel.getUuid();
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setArticleId",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getArticleId());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setResourcePrimKey",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getResourcePrimKey());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setGroupId",new Class[]{Long.TYPE});
        Long value3=new Long(oldCplModel.getGroupId());
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
        Long value4=new Long(oldCplModel.getCompanyId());
        method4.invoke(newModel,value4);
        Method method5=newModelClass.getMethod("setUserId",new Class[]{Long.TYPE});
        Long value5=new Long(oldCplModel.getUserId());
        method5.invoke(newModel,value5);
        Method method6=newModelClass.getMethod("setUserName",new Class[]{String.class});
        String value6=oldCplModel.getUserName();
        method6.invoke(newModel,value6);
        Method method7=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
        Date value7=oldCplModel.getCreateDate();
        method7.invoke(newModel,value7);
        Method method8=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
        Date value8=oldCplModel.getModifiedDate();
        method8.invoke(newModel,value8);
        Method method9=newModelClass.getMethod("setParentResourcePrimKey",new Class[]{Long.TYPE});
        Long value9=new Long(oldCplModel.getParentResourcePrimKey());
        method9.invoke(newModel,value9);
        Method method10=newModelClass.getMethod("setVersion",new Class[]{Integer.TYPE});
        Integer value10=new Integer(oldCplModel.getVersion());
        method10.invoke(newModel,value10);
        Method method11=newModelClass.getMethod("setTitle",new Class[]{String.class});
        String value11=oldCplModel.getTitle();
        method11.invoke(newModel,value11);
        Method method12=newModelClass.getMethod("setContent",new Class[]{String.class});
        String value12=oldCplModel.getContent();
        method12.invoke(newModel,value12);
        Method method13=newModelClass.getMethod("setDescription",new Class[]{String.class});
        String value13=oldCplModel.getDescription();
        method13.invoke(newModel,value13);
        Method method14=newModelClass.getMethod("setPriority",new Class[]{Integer.TYPE});
        Integer value14=new Integer(oldCplModel.getPriority());
        method14.invoke(newModel,value14);
        Method method15=newModelClass.getMethod("setLatest",new Class[]{Integer.TYPE});
        Integer value15=new Integer(oldCplModel.getLatest());
        method15.invoke(newModel,value15);
        Method method16=newModelClass.getMethod("setStatus",new Class[]{Integer.TYPE});
        Integer value16=new Integer(oldCplModel.getStatus());
        method16.invoke(newModel,value16);
        Method method17=newModelClass.getMethod("setStatusByUserId",new Class[]{Long.TYPE});
        Long value17=new Long(oldCplModel.getStatusByUserId());
        method17.invoke(newModel,value17);
        Method method18=newModelClass.getMethod("setStatusByUserName",new Class[]{String.class});
        String value18=oldCplModel.getStatusByUserName();
        method18.invoke(newModel,value18);
        Method method19=newModelClass.getMethod("setStatusDate",new Class[]{Date.class});
        Date value19=oldCplModel.getStatusDate();
        method19.invoke(newModel,value19);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals(CommentClp.class.getName())) {
    CommentClp oldCplModel=(CommentClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class<?> newModelClass=Class.forName("com.liferay.knowledgebase.model.impl.CommentImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setUuid",new Class[]{String.class});
        String value0=oldCplModel.getUuid();
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setCommentId",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getCommentId());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setGroupId",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getGroupId());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
        Long value3=new Long(oldCplModel.getCompanyId());
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setUserId",new Class[]{Long.TYPE});
        Long value4=new Long(oldCplModel.getUserId());
        method4.invoke(newModel,value4);
        Method method5=newModelClass.getMethod("setUserName",new Class[]{String.class});
        String value5=oldCplModel.getUserName();
        method5.invoke(newModel,value5);
        Method method6=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
        Date value6=oldCplModel.getCreateDate();
        method6.invoke(newModel,value6);
        Method method7=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
        Date value7=oldCplModel.getModifiedDate();
        method7.invoke(newModel,value7);
        Method method8=newModelClass.getMethod("setClassNameId",new Class[]{Long.TYPE});
        Long value8=new Long(oldCplModel.getClassNameId());
        method8.invoke(newModel,value8);
        Method method9=newModelClass.getMethod("setClassPK",new Class[]{Long.TYPE});
        Long value9=new Long(oldCplModel.getClassPK());
        method9.invoke(newModel,value9);
        Method method10=newModelClass.getMethod("setContent",new Class[]{String.class});
        String value10=oldCplModel.getContent();
        method10.invoke(newModel,value10);
        Method method11=newModelClass.getMethod("setHelpful",new Class[]{Boolean.TYPE});
        Boolean value11=new Boolean(oldCplModel.getHelpful());
        method11.invoke(newModel,value11);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  if (oldModelClassName.equals(TemplateClp.class.getName())) {
    TemplateClp oldCplModel=(TemplateClp)oldModel;
    ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(_classLoader);
      try {
        Class<?> newModelClass=Class.forName("com.liferay.knowledgebase.model.impl.TemplateImpl",true,_classLoader);
        Object newModel=newModelClass.newInstance();
        Method method0=newModelClass.getMethod("setUuid",new Class[]{String.class});
        String value0=oldCplModel.getUuid();
        method0.invoke(newModel,value0);
        Method method1=newModelClass.getMethod("setTemplateId",new Class[]{Long.TYPE});
        Long value1=new Long(oldCplModel.getTemplateId());
        method1.invoke(newModel,value1);
        Method method2=newModelClass.getMethod("setGroupId",new Class[]{Long.TYPE});
        Long value2=new Long(oldCplModel.getGroupId());
        method2.invoke(newModel,value2);
        Method method3=newModelClass.getMethod("setCompanyId",new Class[]{Long.TYPE});
        Long value3=new Long(oldCplModel.getCompanyId());
        method3.invoke(newModel,value3);
        Method method4=newModelClass.getMethod("setUserId",new Class[]{Long.TYPE});
        Long value4=new Long(oldCplModel.getUserId());
        method4.invoke(newModel,value4);
        Method method5=newModelClass.getMethod("setUserName",new Class[]{String.class});
        String value5=oldCplModel.getUserName();
        method5.invoke(newModel,value5);
        Method method6=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
        Date value6=oldCplModel.getCreateDate();
        method6.invoke(newModel,value6);
        Method method7=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
        Date value7=oldCplModel.getModifiedDate();
        method7.invoke(newModel,value7);
        Method method8=newModelClass.getMethod("setTitle",new Class[]{String.class});
        String value8=oldCplModel.getTitle();
        method8.invoke(newModel,value8);
        Method method9=newModelClass.getMethod("setContent",new Class[]{String.class});
        String value9=oldCplModel.getContent();
        method9.invoke(newModel,value9);
        Method method10=newModelClass.getMethod("setDescription",new Class[]{String.class});
        String value10=oldCplModel.getDescription();
        method10.invoke(newModel,value10);
        return newModel;
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(contextClassLoader);
    }
  }
  return oldModel;
}
