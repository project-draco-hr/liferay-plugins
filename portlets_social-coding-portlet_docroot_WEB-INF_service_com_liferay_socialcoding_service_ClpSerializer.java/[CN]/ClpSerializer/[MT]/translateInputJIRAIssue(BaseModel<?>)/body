{
  JIRAIssueClp oldCplModel=(JIRAIssueClp)oldModel;
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  try {
    currentThread.setContextClassLoader(_classLoader);
    try {
      Class<?> newModelClass=Class.forName("com.liferay.socialcoding.model.impl.JIRAIssueImpl",true,_classLoader);
      Object newModel=newModelClass.newInstance();
      Method method0=newModelClass.getMethod("setJiraIssueId",new Class[]{Long.TYPE});
      Long value0=new Long(oldCplModel.getJiraIssueId());
      method0.invoke(newModel,value0);
      Method method1=newModelClass.getMethod("setCreateDate",new Class[]{Date.class});
      Date value1=oldCplModel.getCreateDate();
      method1.invoke(newModel,value1);
      Method method2=newModelClass.getMethod("setModifiedDate",new Class[]{Date.class});
      Date value2=oldCplModel.getModifiedDate();
      method2.invoke(newModel,value2);
      Method method3=newModelClass.getMethod("setProjectId",new Class[]{Long.TYPE});
      Long value3=new Long(oldCplModel.getProjectId());
      method3.invoke(newModel,value3);
      Method method4=newModelClass.getMethod("setKey",new Class[]{String.class});
      String value4=oldCplModel.getKey();
      method4.invoke(newModel,value4);
      Method method5=newModelClass.getMethod("setSummary",new Class[]{String.class});
      String value5=oldCplModel.getSummary();
      method5.invoke(newModel,value5);
      Method method6=newModelClass.getMethod("setDescription",new Class[]{String.class});
      String value6=oldCplModel.getDescription();
      method6.invoke(newModel,value6);
      Method method7=newModelClass.getMethod("setReporterJiraUserId",new Class[]{String.class});
      String value7=oldCplModel.getReporterJiraUserId();
      method7.invoke(newModel,value7);
      Method method8=newModelClass.getMethod("setAssigneeJiraUserId",new Class[]{String.class});
      String value8=oldCplModel.getAssigneeJiraUserId();
      method8.invoke(newModel,value8);
      Method method9=newModelClass.getMethod("setResolution",new Class[]{String.class});
      String value9=oldCplModel.getResolution();
      method9.invoke(newModel,value9);
      Method method10=newModelClass.getMethod("setStatus",new Class[]{String.class});
      String value10=oldCplModel.getStatus();
      method10.invoke(newModel,value10);
      return newModel;
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  finally {
    currentThread.setContextClassLoader(contextClassLoader);
  }
  return oldModel;
}
