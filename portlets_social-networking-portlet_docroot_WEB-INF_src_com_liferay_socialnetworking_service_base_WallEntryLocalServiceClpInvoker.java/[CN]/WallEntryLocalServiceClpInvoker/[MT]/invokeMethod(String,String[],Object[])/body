{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return WallEntryLocalServiceUtil.addWallEntry((com.liferay.socialnetworking.model.WallEntry)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return WallEntryLocalServiceUtil.createWallEntry(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return WallEntryLocalServiceUtil.deleteWallEntry(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return WallEntryLocalServiceUtil.deleteWallEntry((com.liferay.socialnetworking.model.WallEntry)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return WallEntryLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return WallEntryLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return WallEntryLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return WallEntryLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return WallEntryLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return WallEntryLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return WallEntryLocalServiceUtil.fetchWallEntry(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallEntry(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return WallEntryLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallEntries(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallEntriesCount();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return WallEntryLocalServiceUtil.updateWallEntry((com.liferay.socialnetworking.model.WallEntry)arguments[0]);
  }
  if (_methodName42.equals(name) && Arrays.deepEquals(_methodParameterTypes42,parameterTypes)) {
    return WallEntryLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName43.equals(name) && Arrays.deepEquals(_methodParameterTypes43,parameterTypes)) {
    WallEntryLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName48.equals(name) && Arrays.deepEquals(_methodParameterTypes48,parameterTypes)) {
    return WallEntryLocalServiceUtil.addWallEntry(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(com.liferay.portal.theme.ThemeDisplay)arguments[3]);
  }
  if (_methodName49.equals(name) && Arrays.deepEquals(_methodParameterTypes49,parameterTypes)) {
    WallEntryLocalServiceUtil.deleteWallEntries(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName50.equals(name) && Arrays.deepEquals(_methodParameterTypes50,parameterTypes)) {
    return WallEntryLocalServiceUtil.deleteWallEntry(((Long)arguments[0]).longValue());
  }
  if (_methodName51.equals(name) && Arrays.deepEquals(_methodParameterTypes51,parameterTypes)) {
    return WallEntryLocalServiceUtil.deleteWallEntry((com.liferay.socialnetworking.model.WallEntry)arguments[0]);
  }
  if (_methodName52.equals(name) && Arrays.deepEquals(_methodParameterTypes52,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallEntries(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName53.equals(name) && Arrays.deepEquals(_methodParameterTypes53,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallEntriesCount(((Long)arguments[0]).longValue());
  }
  if (_methodName54.equals(name) && Arrays.deepEquals(_methodParameterTypes54,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallEntry(((Long)arguments[0]).longValue());
  }
  if (_methodName55.equals(name) && Arrays.deepEquals(_methodParameterTypes55,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallToWallEntries(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Long)arguments[3]).longValue(),((Integer)arguments[4]).intValue(),((Integer)arguments[5]).intValue());
  }
  if (_methodName56.equals(name) && Arrays.deepEquals(_methodParameterTypes56,parameterTypes)) {
    return WallEntryLocalServiceUtil.getWallToWallEntriesCount(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Long)arguments[3]).longValue());
  }
  if (_methodName57.equals(name) && Arrays.deepEquals(_methodParameterTypes57,parameterTypes)) {
    return WallEntryLocalServiceUtil.updateWallEntry(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  throw new UnsupportedOperationException();
}
