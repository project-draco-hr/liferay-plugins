{
  Date now=new Date();
  PollsChoice choice=pollsChoicePersistence.findByPrimaryKey(choiceId);
  if (choice.getPollsQuestionId() != questionId) {
    throw new NoSuchQuestionException();
  }
  PollsQuestion question=pollsQuestionPersistence.findByPrimaryKey(questionId);
  if (question.isExpired(serviceContext,now)) {
    throw new PollsQuestionExpiredException();
  }
  question.setLastVoteDate(serviceContext.getCreateDate(now));
  pollsQuestionPersistence.update(question);
  PollsVote vote=pollsVotePersistence.fetchByU_PQI(userId,questionId);
  if (vote != null) {
    throw new DuplicatePollsVoteException();
  }
 else {
    String userName=null;
    try {
      User user=userPersistence.findByPrimaryKey(userId);
      userName=user.getFullName();
    }
 catch (    NoSuchUserException nsue) {
      userName=serviceContext.translate("anonymous");
    }
    long voteId=counterLocalService.increment();
    vote=pollsVotePersistence.create(voteId);
    vote.setCompanyId(serviceContext.getCompanyId());
    vote.setUserId(userId);
    vote.setUserName(userName);
    vote.setCreateDate(serviceContext.getCreateDate(now));
    vote.setModifiedDate(serviceContext.getModifiedDate(now));
    vote.setPollsQuestionId(questionId);
    vote.setPollsChoiceId(choiceId);
    vote.setVoteDate(serviceContext.getCreateDate(now));
    pollsVotePersistence.update(vote);
  }
  return vote;
}
